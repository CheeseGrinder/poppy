{"version":3,"names":["dividerCss","PopDividerStyle0","Divider","componentWillLoad","componentConfig","apply","this","orientation","placement","render","h","Host","key","class","isRTL"],"sources":["src/components/divider/divider.scss?tag=pop-divider&encapsulation=shadow","src/components/divider/divider.tsx"],"sourcesContent":["@use \"../../global/styles/radius\";\r\n@use \"../../global/styles/theme\";\r\n@use \"../../global/styles/input\";\r\n\r\n/**\r\n * @prop --background: Change background color\r\n */\r\n\r\n// Divider\r\n// ----------------------------------------------------------------\r\n\r\n:host {\r\n  --background: oklch(#{theme.get-color(\"base.content\")} / 0.1);\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  align-self: stretch;\r\n\r\n  white-space: nowrap;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: \"\";\r\n    flex-grow: 1;\r\n\r\n    background-color: var(--background);\r\n  }\r\n}\r\n\r\n:host(:not(:empty)) {\r\n  gap: 1rem;\r\n}\r\n\r\n// Divider orientation\r\n// ----------------------------------------------------------------\r\n:host([orientation=\"horizontal\"]) {\r\n  margin: 1rem 0;\r\n\r\n  width: 100%;\r\n  height: 1rem;\r\n\r\n  &::before,\r\n  &::after {\r\n    width: 100%;\r\n    height: 0.125rem;\r\n  }\r\n}\r\n:host([orientation=\"vertical\"]) {\r\n  flex-direction: column;\r\n\r\n  margin: 0 1rem;\r\n\r\n  width: 1rem;\r\n  height: auto;\r\n\r\n  &::before,\r\n  &::after {\r\n    width: 0.125rem;\r\n    height: 100%;\r\n  }\r\n}\r\n\r\n// Divider Content Placement\r\n// ----------------------------------------------------------------\r\n\r\n:host([placement=\"left\"])::before {\r\n  display: none;\r\n}\r\n:host([placement=\"left\"].divider-rtl) {\r\n  &::before {\r\n    display: block;\r\n  }\r\n  &::after {\r\n    display: none;\r\n  }\r\n}\r\n:host([placement=\"start\"])::before {\r\n  display: none;\r\n}\r\n:host([placement=\"end\"])::after {\r\n  display: none;\r\n}\r\n:host([placement=\"right\"])::after {\r\n  display: none;\r\n}\r\n:host([placement=\"right\"].divider-rtl) {\r\n  &::before {\r\n    display: none;\r\n  }\r\n  &::after {\r\n    display: block;\r\n  }\r\n}\r\n\r\n// Divider Color\r\n// ----------------------------------------------------------------\r\n\r\n@mixin generate-color($colors...) {\r\n  @each $color in $colors {\r\n    $base: theme.get-color(\"#{$color}.base\");\r\n\r\n    :host([color=\"#{$color}\"]) {\r\n      --background: oklch(#{$base});\r\n    }\r\n  }\r\n}\r\n@include generate-color(primary, secondary, accent, neutral, info, success, warning, error);\r\n","import { componentConfig } from '#config';\r\nimport { isRTL } from '#utils/dir';\r\nimport { Component, ComponentInterface, Host, Prop, h } from '@stencil/core';\r\nimport { Color } from 'src/interfaces';\r\n\r\n/**\r\n * Divider will be used to separate content vertically or horizontally.\r\n *\r\n * @slot - Text for describe the divider\r\n */\r\n@Component({\r\n  tag: 'pop-divider',\r\n  styleUrl: 'divider.scss',\r\n  shadow: true,\r\n})\r\nexport class Divider implements ComponentInterface {\r\n  /**\r\n   * Define content disposition orientation\r\n   *\r\n   * @config @default 'horizontal'\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) orientation: 'horizontal' | 'vertical';\r\n\r\n  /**\r\n   * Where to place the content.\r\n   * - `\"left\"`: The content will appear to the left of the divider in LTR and RTL.\r\n   * - `\"start\"`: The content will appear to the left of the divider in LTR and to the right in RTL.\r\n   * - `\"center\"`: The content will appear to the center of the divider.\r\n   * - `\"end\"`: The content will appear to the right of the divider in LTR and to the left in RTL.\r\n   * - `\"right\"`: The content will appear to the right of the divider in LTR and RTL.\r\n   *\r\n   * @config @default 'center'\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) placement: 'left' | 'right' | 'start' | 'center' | 'end';\r\n\r\n  /**\r\n   * The color to use from your application's color palette.\r\n   * Default options are: `\"primary\"`, `\"secondary\"`, `\"accent\"`, `\"neutral\"`, `\"info\"`, `\"success\"`, `\"warning\"`, `\"error\"`.\r\n   * For more information on colors, see [theming](/docs/theming/basics).\r\n   *\r\n   * @config\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) color: Color | 'neutral';\r\n\r\n  componentWillLoad(): void {\r\n    componentConfig.apply(this, 'pop-divider', {\r\n      orientation: 'horizontal',\r\n      placement: 'center',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host\r\n        class={{\r\n          'divider-rtl': isRTL(this),\r\n        }}\r\n      >\r\n        <slot />\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;;;;;AAAA,MAAMA,IAAa;;AACnB,MAAAC,IAAeD;;MCcFE,IAAO;;;;;;;EA6BlB,iBAAAC;IACEC,EAAgBC,MAAMC,MAAM,eAAe;MACzCC,aAAa;MACbC,WAAW;;;EAIf,MAAAC;IACE,OACEC,EAACC,GAAI;MAAAC,KAAA;MACHC,OAAO;QACL,eAAeC,EAAMR;;OAGvBI,EAAA;MAAAE,KAAA","ignoreList":[]}