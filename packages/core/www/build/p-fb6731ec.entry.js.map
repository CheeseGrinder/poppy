{"version":3,"names":["avatarCss","PopAvatarStyle0","Avatar","componentWillLoad","componentConfig","apply","this","placeholder","render","h","Host","key","imgCss","PopImgStyle0","Img","_Img_nativeImg","set","_Img_inheritedAttributes","_Img_observer","_Img_onLoad","popDidLoad","emit","_Img_onError","popError","onSrcChange","__classPrivateFieldGet","_Img_instances","_Img_initObserver","call","__classPrivateFieldSet","inheritAttributes","host","componentDidLoad","draggable","part","loading","src","loadSrc","alt","onLoad","onError","isDraggable","ref","el","supportIntersectionObserver","_Img_removeObserver","IntersectionObserver","entries","at","isIntersecting","_Img_load","observe","disconnect","undefined","loadError","popWillLoad","window","IntersectionObserverEntry","prototype"],"sources":["src/components/avatar/avatar.scss?tag=pop-avatar&encapsulation=shadow","src/components/avatar/avatar.tsx","src/components/img/img.scss?tag=pop-img&encapsulation=shadow","src/components/img/img.tsx"],"sourcesContent":["@use \"../../global/styles/theme\";\r\n\r\n/**\r\n * @prop --background: Change background color\r\n * @prop --color: Change text color\r\n */\r\n\r\n// Avatar\r\n// ----------------------------------------------------------------\r\n\r\n:host {\r\n  --background: oklch(#{theme.get-color(\"neutral.base\")});\r\n  --color: oklch(#{theme.get-color(\"neutral.content\")});\r\n\r\n  position: relative;\r\n  display: inline-flex;\r\n  aspect-ratio: 1;\r\n\r\n  > div {\r\n    display: grid;\r\n    place-items: center;\r\n\r\n    width: 100%;\r\n    overflow: hidden;\r\n    min-width: 24px;\r\n\r\n    background-color: var(--background);\r\n    color: var(--color);\r\n  }\r\n\r\n  ::slotted(pop-img),\r\n  ::slotted(img) {\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n}\r\n","import { componentConfig } from '#config';\r\nimport { Component, ComponentInterface, Host, Prop, h } from '@stencil/core';\r\n\r\n/**\r\n * Avatars are used to show a thumbnail representation of an individual or business in the interface.\r\n *\r\n * @slot - Avatar content\r\n */\r\n@Component({\r\n  tag: 'pop-avatar',\r\n  styleUrl: 'avatar.scss',\r\n  shadow: true,\r\n})\r\nexport class Avatar implements ComponentInterface {\r\n  /**\r\n   * To show some letters as avatar placeholder\r\n   *\r\n   * @config @default false\r\n   */\r\n  @Prop({ reflect: true }) placeholder: boolean = false;\r\n\r\n  componentWillLoad(): void {\r\n    componentConfig.apply(this, 'pop-avatar', {\r\n      placeholder: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div>\r\n          <slot />\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","// Img\r\n// ----------------------------------------------------------------\r\n\r\n:host {\r\n  display: block;\r\n\r\n  object-fit: contain;\r\n\r\n  > img {\r\n    display: block;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    object-fit: inherit;\r\n    object-position: inherit;\r\n  }\r\n}\r\n","import { Attributes, inheritAttributes } from '#utils/helpers';\r\nimport {\r\n  Component,\r\n  ComponentInterface,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n  Host,\r\n  Prop,\r\n  State,\r\n  Watch,\r\n  h,\r\n} from '@stencil/core';\r\n\r\n/**\r\n * @part image - The inner `img` element.\r\n */\r\n@Component({\r\n  tag: 'pop-img',\r\n  styleUrl: 'img.scss',\r\n  shadow: true,\r\n})\r\nexport class Img implements ComponentInterface {\r\n  #nativeImg: HTMLImageElement;\r\n  #inheritedAttributes: Attributes = {};\r\n\r\n  #observer?: IntersectionObserver;\r\n\r\n  @Element() host!: HTMLElement;\r\n\r\n  @State() loadSrc?: string;\r\n  @State() loadError?: () => void;\r\n\r\n  /**\r\n   * The image URL. This attribute is mandatory for the `<img>` element.\r\n   */\r\n  @Prop() src: string;\r\n  @Watch('src')\r\n  onSrcChange() {\r\n    this.#initObserver();\r\n  }\r\n\r\n  /**\r\n   * This attribute defines the alternative text describing the image.\r\n   * Users will see this text displayed if the image URL is wrong,\r\n   * the image is not in one of the supported formats, or if the image is not yet downloaded.\r\n   */\r\n  @Prop() alt?: string;\r\n\r\n  /**\r\n   * Emitted when the img src has been set\r\n   */\r\n  @Event() popWillLoad: EventEmitter<void>;\r\n\r\n  /**\r\n   * Emitted when the image has finished loading\r\n   */\r\n  @Event() popDidLoad: EventEmitter<void>;\r\n\r\n  /**\r\n   * Emitted when the img fails to load\r\n   */\r\n  @Event() popError: EventEmitter<void>;\r\n\r\n  componentWillLoad(): void {\r\n    this.#inheritedAttributes = inheritAttributes(this.host, ['draggable']);\r\n  }\r\n\r\n  componentDidLoad(): void {\r\n    this.#initObserver();\r\n  }\r\n\r\n  #initObserver(): void {\r\n    if (!this.src) return;\r\n\r\n    if (supportIntersectionObserver()) {\r\n      this.#removeObserver();\r\n      this.#observer = new IntersectionObserver(entries => {\r\n        if (entries.at(-1).isIntersecting) {\r\n          this.#load();\r\n          this.#removeObserver();\r\n        }\r\n      });\r\n      this.#observer.observe(this.host);\r\n    } else {\r\n      this.#nativeImg.loading = 'lazy';\r\n      this.#load();\r\n    }\r\n  }\r\n\r\n  #removeObserver(): void {\r\n    this.#observer?.disconnect();\r\n    this.#observer = undefined;\r\n  }\r\n\r\n  #load(): void {\r\n    this.loadError = this.#onError;\r\n    this.loadSrc = this.src;\r\n    this.popWillLoad.emit();\r\n  }\r\n\r\n  #onLoad = (): void => {\r\n    this.popDidLoad.emit();\r\n  };\r\n\r\n  #onError = (): void => {\r\n    this.popError.emit();\r\n  };\r\n\r\n  render() {\r\n    const { draggable } = this.#inheritedAttributes;\r\n\r\n    return (\r\n      <Host>\r\n        <img\r\n          part=\"image\"\r\n          loading=\"eager\"\r\n          // decoding=\"sync\"\r\n          src={this.loadSrc}\r\n          alt={this.alt || ''}\r\n          onLoad={this.#onLoad}\r\n          onError={this.#onError}\r\n          draggable={isDraggable(draggable)}\r\n          ref={el => (this.#nativeImg = el)}\r\n        />\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n\r\nfunction supportIntersectionObserver(): boolean {\r\n  return (\r\n    'IntersectionObserver' in window &&\r\n    'IntersectionObserverEntry' in window &&\r\n    'isIntersecting' in window.IntersectionObserverEntry.prototype\r\n  );\r\n}\r\n/**\r\n * Enumerated strings must be set as booleans\r\n * as Stencil will not render 'false' in the DOM.\r\n * The need to explicitly render draggable=\"true\"\r\n * as only certain elements are draggable by default.\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable.\r\n */\r\nconst isDraggable = (draggable?: string): boolean | undefined => {\r\n  switch (draggable) {\r\n    case 'true':\r\n      return true;\r\n    case 'false':\r\n      return false;\r\n    default:\r\n      return undefined;\r\n  }\r\n};\r\n"],"mappings":";;;;;;AAAA,MAAMA,IAAY;;AAClB,MAAAC,IAAeD;;MCYFE,IAAM;;;uBAM+B;;EAEhD,iBAAAC;IACEC,EAAgBC,MAAMC,MAAM,cAAc;MACxCC,aAAa;;;EAIjB,MAAAC;IACE,OACEC,EAACC,GAAI;MAAAC,KAAA;OACHF,EAAA;MAAAE,KAAA;OACEF,EAAA;MAAAE,KAAA;;;;;;;AC/BV,MAAMC,IAAS;;AACf,MAAAC,IAAeD;;;;;;;;;;;;;;;;;MCqBFE,IAAG;;;;;;;IACdC,EAAAC,IAAAV,WAAA;IACAW,EAAAD,IAAAV,MAAmC;IAEnCY,EAAAF,IAAAV,WAAA;IA2EAa,EAAAH,IAAAV,OAAU;MACRA,KAAKc,WAAWC;AAAM;IAGxBC,EAAAN,IAAAV,OAAW;MACTA,KAAKiB,SAASF;AAAM;;;;;;EApEtB,WAAAG;IACEC,EAAAnB,MAAIoB,GAAA,KAAAC,GAAcC,KAAlBtB;;EAyBF,iBAAAH;IACE0B,EAAAvB,MAAIW,GAAwBa,EAAkBxB,KAAKyB,MAAM,EAAC,gBAAa;;EAGzE,gBAAAC;IACEP,EAAAnB,MAAIoB,GAAA,KAAAC,GAAcC,KAAlBtB;;EAwCF,MAAAE;IACE,OAAMyB,WAAEA,KAAcR,EAAAnB,MAAIW,GAAA;IAE1B,OACER,EAACC,GAAI;MAAAC,KAAA;OACHF,EAAA;MAAAE,KAAA;MACEuB,MAAK;MACLC,SAAQ;;MAERC,KAAK9B,KAAK+B;MACVC,KAAKhC,KAAKgC,OAAO;MACjBC,QAAQd,EAAAnB,MAAIa,GAAA;MACZqB,SAASf,EAAAnB,MAAIgB,GAAA;MACbW,WAAWQ,YAAYR;MACvBS,KAAKC,KAAOd,EAAAvB,MAAIS,GAAc4B,GAAE;;;;;;;;;;;;;;;EAlDtC,KAAKrC,KAAK8B,KAAK;EAEf,IAAIQ,+BAA+B;IACjCnB,EAAAnB,MAAIoB,GAAA,KAAAmB,GAAgBjB,KAApBtB;IACAuB,EAAAvB,MAAIY,GAAa,IAAI4B,sBAAqBC;MACxC,IAAIA,EAAQC,IAAI,GAAGC,gBAAgB;QACjCxB,EAAAnB,MAAIoB,GAAA,KAAAwB,GAAMtB,KAAVtB;QACAmB,EAAAnB,MAAIoB,GAAA,KAAAmB,GAAgBjB,KAApBtB;;SAEF;IACFmB,EAAAnB,MAAIY,GAAA,KAAWiC,QAAQ7C,KAAKyB;SACvB;IACLN,EAAAnB,MAAIS,GAAA,KAAYoB,UAAU;IAC1BV,EAAAnB,MAAIoB,GAAA,KAAAwB,GAAMtB,KAAVtB;;AAEJ,GAACuC,IAAA,SAAAA;EAGCpB,EAAAnB,MAAIY,GAAA,MAAYkC;EAChBvB,EAAAvB,MAAIY,GAAamC,WAAS;AAC5B,GAACH,IAAA,SAAAA;EAGC5C,KAAKgD,YAAY7B,EAAAnB,MAAIgB,GAAA;EACrBhB,KAAK+B,UAAU/B,KAAK8B;EACpB9B,KAAKiD,YAAYlC;AACnB;;AA+BF,SAASuB;EACP,OACE,0BAA0BY,UAC1B,+BAA+BA,UAC/B,oBAAoBA,OAAOC,0BAA0BC;AAEzD;;;;;;;;GAQA,OAAMjB,cAAeR;EACnB,QAAQA;GACN,KAAK;IACH,OAAO;;GACT,KAAK;IACH,OAAO;;GACT;IACE,OAAOoB","ignoreList":[]}