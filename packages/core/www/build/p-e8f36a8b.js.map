{"version":3,"names":["NAMESPACE","BUILD","allRenderFn","appendChildSlotFix","asyncLoading","asyncQueue","attachStyles","cloneNodeFix","cmpDidLoad","cmpDidRender","cmpDidUnload","cmpDidUpdate","cmpShouldUpdate","cmpWillLoad","cmpWillRender","cmpWillUpdate","connectedCallback","constructableCSS","cssAnnotations","devTools","disconnectedCallback","element","event","experimentalScopedSlotChanges","experimentalSlotFixes","formAssociated","hasRenderFn","hostListener","hostListenerTarget","hostListenerTargetBody","hostListenerTargetDocument","hostListenerTargetParent","hostListenerTargetWindow","hotModuleReplacement","hydrateClientSide","hydrateServerSide","hydratedAttribute","hydratedClass","hydratedSelectorName","initializeNextTick","invisiblePrehydration","isDebug","isDev","isTesting","lazyLoad","lifecycle","lifecycleDOMEvents","member","method","mode","observeAttribute","profile","prop","propBoolean","propMutable","propNumber","propString","reflect","scoped","scopedSlotTextContentFix","scriptDataOpts","shadowDelegatesFocus","shadowDom","slot","slotChildNodesFix","slotRelocation","state","style","svg","taskQueue","transformTagName","updatable","vdomAttribute","vdomClass","vdomFunctional","vdomKey","vdomListener","vdomPropOrAttr","vdomRef","vdomRender","vdomStyle","vdomText","vdomXlink","watchCallback","__defProp","Object","defineProperty","__export","target","all","name","get","enumerable","EMPTY_OBJ","SVG_NS","HTML_NS","isDef","v","isComplexType","o","queryNonceMetaTagContent","doc2","_a","_b","_c","head","querySelector","getAttribute","result_exports","err","map","ok","unwrap","unwrapErr","value","isOk","isErr","result","fn","val","Promise","then","newVal","createTime","fnName","tagName","uniqueTime","key","measureText","CONTENT_REF_ID","ORG_LOCATION_ID","SLOT_NODE_ID","TEXT_NODE_ID","HYDRATE_ID","HYDRATED_STYLE_ID","HYDRATE_CHILD_ID","HYDRATED_CSS","SLOT_FB_CSS","XLINK_NS","FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS","h","nodeName","vnodeData","children","child","slotName","simple","lastSimple","vNodeChildren","walk","c","i2","length","Array","isArray","String","$text$","push","newVNode","classData","className","class","keys","filter","k","join","vdomFnUtils","vnode","$attrs$","$children$","$key$","$name$","tag","text","$flags$","$tag$","$elm$","Host","isHost","node","forEach","cb","convertToPublic","convertToPrivate","vattrs","vchildren","vkey","vname","vtag","vtext","initializeClientHydrate","hostElm","hostId","hostRef","endHydrate","shadowRoot","childRenderNodes","slotNodes","shadowRootNodes","$vnode$","plt","$orgLocNodes$","initializeDocumentHydrate","doc","body","Map","removeAttribute","clientHydrate","orgLocationId","$hostId$","$nodeId$","orgLocationNode","supportsShadow","parentNode","insertBefore","nextSibling","delete","shadowRootNode","appendChild","parentVNode","childNodeType","childIdSplt","childVNode","nodeType","split","$depth$","$index$","toLowerCase","childNodes","nodeValue","textContent","remove","createElement","setAttribute","orgLocNodes","set","parsePropertyValue","propValue","propType","parseFloat","getElement","ref","getHostRef","$hostElement$","createEvent","flags","elm","emit","detail","emitEvent","bubbles","composed","cancelable","opts","ev","ce","dispatchEvent","rootAppliedStyles","WeakMap","registerStyle","scopeId2","cssText","allowCS","styles","supportsConstructableStylesheets","CSSStyleSheet","replaceSync","addStyle","styleContainerNode","cmpMeta","getScopeId","appliedStyles","styleElm","Set","has","host","innerHTML","nonce","$nonce$","add","adoptedStyleSheets","includes","$cmpMeta$","endAttachStyles","$tagName$","getRootNode","classList","cmp","convertScopedToShadow","css","replace","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","oldClasses","parseClassList","newClasses","removeProperty","setProperty","slice","win","capture","endsWith","CAPTURE_EVENT_SUFFIX","CAPTURE_EVENT_REGEX","rel","ael","isComplex","n","e","xlink","removeAttributeNS","setAttributeNS","parseClassListRegex","RegExp","updateElement","oldVnode","newVnode","isSvgMode2","oldVnodeAttrs","newVnodeAttrs","sortedAttrNames","attrNames","attr","scopeId","contentRef","hostTagName","useNativeShadowDom","checkSlotFallbackVisibility","checkSlotRelocate","isSvgMode","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","newVNode2","childNode","oldVNode","createTextNode","slotReferenceDebugNode","createElementNS","putBackInOriginalLocation","recursive","oldSlotChildNodes","from","BUILD11","parentReferenceNode","referenceNode","addVnodes","before","vnodes","startIdx","endIdx","containerElm","removeVnodes","index","nullifyVNodeRefs","updateChildren","oldCh","newCh","isInitialRender","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","elmToMove","isSameVnode","patch","leftVNode","rightVNode","oldChildren","newChildren","defaultHolder","data","updateFallbackSlotVisibility","hidden","siblingNode","trim","relocateNodes","markSlotContentForRelocation","hostContentNodes","j","isNodeLocatedInSlot","relocateNodeData","find","r","$nodeToRelocate$","$slotRefNode$","relocateNode","some","nodeToRelocate","vNode","parent","newNode","reference","inserted","renderVdom","renderFnResults","isInitialLoad","_d","rootVnode","$attrsToReflect$","propName","attribute","hasAttribute","relocateData","originalLocationDebugNode","slotRefNode","parentNodeRef","insertBeforeNode","previousSibling","refNode","slotVNode","createComment","localName","attachToAncestor","ancestorComponent","$onRenderResolve$","scheduleUpdate","$ancestorComponent$","dispatch","dispatchHooks","writeTask","endSchedule","instance","$lazyInstance$","Error","maybePromise","emitLifecycleEvent","safeCall","enqueue","updateComponent","isPromisey","async","endUpdate","rc","endRender","callRender","childrenPromises","postUpdate","postUpdateComponent","render","consoleError","endPostUpdate","addHydratedFlag","$onReadyResolve$","appDidLoad","$onInstanceResolve$","nextTick","who","documentElement","namespace","arg","lifecycleName","BUILD12","getValue","$instanceValues$","setValue","oldVal","$members$","areBothNaN","Number","isNaN","didValueChange","$watchers$","watchMethods","watchMethodName","proxyComponent","Cstr","prototype","cbName","args","this","$onReadyPromise$","instance2","call","watchers","members","entries","memberFlags","configurable","_a2","$onInstancePromise$","_a3","attrNameToPropName","attributeChangedCallback","attrName","jmp","hasOwnProperty","flags2","entry","callbackName","observedAttributes","_","m","initializeComponent","hmrVersionId","bundleId","$lazyBundleId$","CstrImport","loadModule","endLoad","$modeName$","isProxied","endNewInstance","fireConnectedCallback","constructor","cmpTag","customElements","whenDefined","endRegisterStyles","schedule","endConnected","setContentReference","contentRefElm","firstChild","disconnectInstance","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","customElements2","metaCharset","dataStyles","deferredConnectedCallbacks","styles2","querySelectorAll","appLoadFallback","isBootstrapping","assign","$resourcesUrl$","URL","resourcesUrl","baseURI","href","hasSlotRelocation","lazyBundle","compactMeta","$listeners$","HostElement","HTMLElement","self","super","registerHost","attachShadow","delegatesFocus","clearTimeout","componentOnReady","define","setTimeout","Fragment","setNonce","hostRefs","registerInstance","lazyInstance","hostElement","el","console","error","cmpModules","exportName","module","import","importedModule","window","document","h2","raf","requestAnimationFrame","eventName","listener","addEventListener","removeEventListener","CustomEvent","promiseResolve","resolve","queuePending","queueDomReads","queueDomWrites","queueTask","queue","write","flush","consume","performance","now"],"sources":["@stencil/core/internal/app-data","../../node_modules/@stencil/core/internal/client/index.js?app-data=conditional"],"sourcesContent":["export const NAMESPACE = 'poppy';\nexport const BUILD = /* poppy */ { allRenderFn: true, appendChildSlotFix: false, asyncLoading: true, asyncQueue: false, attachStyles: true, cloneNodeFix: false, cmpDidLoad: true, cmpDidRender: true, cmpDidUnload: false, cmpDidUpdate: false, cmpShouldUpdate: false, cmpWillLoad: true, cmpWillRender: true, cmpWillUpdate: false, connectedCallback: true, constructableCSS: true, cssAnnotations: true, devTools: false, disconnectedCallback: true, element: false, event: true, experimentalScopedSlotChanges: false, experimentalSlotFixes: false, formAssociated: true, hasRenderFn: true, hostListener: false, hostListenerTarget: false, hostListenerTargetBody: false, hostListenerTargetDocument: false, hostListenerTargetParent: false, hostListenerTargetWindow: false, hotModuleReplacement: false, hydrateClientSide: true, hydrateServerSide: false, hydratedAttribute: false, hydratedClass: true, hydratedSelectorName: \"hydrated\", initializeNextTick: false, invisiblePrehydration: true, isDebug: true, isDev: false, isTesting: false, lazyLoad: true, lifecycle: true, lifecycleDOMEvents: true, member: true, method: true, mode: false, observeAttribute: true, profile: false, prop: true, propBoolean: true, propMutable: true, propNumber: true, propString: true, reflect: true, scoped: false, scopedSlotTextContentFix: false, scriptDataOpts: false, shadowDelegatesFocus: true, shadowDom: true, slot: true, slotChildNodesFix: false, slotRelocation: true, state: true, style: true, svg: true, taskQueue: true, transformTagName: false, updatable: true, vdomAttribute: true, vdomClass: true, vdomFunctional: true, vdomKey: true, vdomListener: true, vdomPropOrAttr: true, vdomRef: true, vdomRender: true, vdomStyle: true, vdomText: true, vdomXlink: true, watchCallback: true };\nexport const Env = /* poppy */ {};\n","/*\n Stencil Client Platform v4.18.3 | MIT Licensed | https://stenciljs.com\n */\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/client/client-build.ts\nimport { BUILD } from \"@stencil/core/internal/app-data\";\nvar Build = {\n  isDev: BUILD.isDev ? true : false,\n  isBrowser: true,\n  isServer: false,\n  isTesting: BUILD.isTesting ? true : false\n};\n\n// src/client/client-host-ref.ts\nimport { BUILD as BUILD22 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/asset-path.ts\nvar getAssetPath = (path) => {\n  const assetUrl = new URL(path, plt.$resourcesUrl$);\n  return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\nvar setAssetPath = (path) => plt.$resourcesUrl$ = path;\n\n// src/runtime/bootstrap-custom-element.ts\nimport { BUILD as BUILD19 } from \"@stencil/core/internal/app-data\";\n\n// src/utils/constants.ts\nvar EMPTY_OBJ = {};\nvar SVG_NS = \"http://www.w3.org/2000/svg\";\nvar HTML_NS = \"http://www.w3.org/1999/xhtml\";\n\n// src/utils/helpers.ts\nvar isDef = (v) => v != null;\nvar isComplexType = (o) => {\n  o = typeof o;\n  return o === \"object\" || o === \"function\";\n};\n\n// src/utils/query-nonce-meta-tag-content.ts\nfunction queryNonceMetaTagContent(doc2) {\n  var _a, _b, _c;\n  return (_c = (_b = (_a = doc2.head) == null ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) == null ? void 0 : _b.getAttribute(\"content\")) != null ? _c : void 0;\n}\n\n// src/utils/result.ts\nvar result_exports = {};\n__export(result_exports, {\n  err: () => err,\n  map: () => map,\n  ok: () => ok,\n  unwrap: () => unwrap,\n  unwrapErr: () => unwrapErr\n});\nvar ok = (value) => ({\n  isOk: true,\n  isErr: false,\n  value\n});\nvar err = (value) => ({\n  isOk: false,\n  isErr: true,\n  value\n});\nfunction map(result, fn) {\n  if (result.isOk) {\n    const val = fn(result.value);\n    if (val instanceof Promise) {\n      return val.then((newVal) => ok(newVal));\n    } else {\n      return ok(val);\n    }\n  }\n  if (result.isErr) {\n    const value = result.value;\n    return err(value);\n  }\n  throw \"should never get here\";\n}\nvar unwrap = (result) => {\n  if (result.isOk) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\nvar unwrapErr = (result) => {\n  if (result.isErr) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\n\n// src/runtime/connected-callback.ts\nimport { BUILD as BUILD16 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/client-hydrate.ts\nimport { BUILD as BUILD4 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/profile.ts\nimport { BUILD as BUILD2 } from \"@stencil/core/internal/app-data\";\nvar i = 0;\nvar createTime = (fnName, tagName = \"\") => {\n  if (BUILD2.profile && performance.mark) {\n    const key = `st:${fnName}:${tagName}:${i++}`;\n    performance.mark(key);\n    return () => performance.measure(`[Stencil] ${fnName}() <${tagName}>`, key);\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar uniqueTime = (key, measureText) => {\n  if (BUILD2.profile && performance.mark) {\n    if (performance.getEntriesByName(key, \"mark\").length === 0) {\n      performance.mark(key);\n    }\n    return () => {\n      if (performance.getEntriesByName(measureText, \"measure\").length === 0) {\n        performance.measure(measureText, key);\n      }\n    };\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar inspect = (ref) => {\n  const hostRef = getHostRef(ref);\n  if (!hostRef) {\n    return void 0;\n  }\n  const flags = hostRef.$flags$;\n  const hostElement = hostRef.$hostElement$;\n  return {\n    renderCount: hostRef.$renderCount$,\n    flags: {\n      hasRendered: !!(flags & 2 /* hasRendered */),\n      hasConnected: !!(flags & 1 /* hasConnected */),\n      isWaitingForChildren: !!(flags & 4 /* isWaitingForChildren */),\n      isConstructingInstance: !!(flags & 8 /* isConstructingInstance */),\n      isQueuedForUpdate: !!(flags & 16 /* isQueuedForUpdate */),\n      hasInitializedComponent: !!(flags & 32 /* hasInitializedComponent */),\n      hasLoadedComponent: !!(flags & 64 /* hasLoadedComponent */),\n      isWatchReady: !!(flags & 128 /* isWatchReady */),\n      isListenReady: !!(flags & 256 /* isListenReady */),\n      needsRerender: !!(flags & 512 /* needsRerender */)\n    },\n    instanceValues: hostRef.$instanceValues$,\n    ancestorComponent: hostRef.$ancestorComponent$,\n    hostElement,\n    lazyInstance: hostRef.$lazyInstance$,\n    vnode: hostRef.$vnode$,\n    modeName: hostRef.$modeName$,\n    onReadyPromise: hostRef.$onReadyPromise$,\n    onReadyResolve: hostRef.$onReadyResolve$,\n    onInstancePromise: hostRef.$onInstancePromise$,\n    onInstanceResolve: hostRef.$onInstanceResolve$,\n    onRenderResolve: hostRef.$onRenderResolve$,\n    queuedListeners: hostRef.$queuedListeners$,\n    rmListeners: hostRef.$rmListeners$,\n    [\"s-id\"]: hostElement[\"s-id\"],\n    [\"s-cr\"]: hostElement[\"s-cr\"],\n    [\"s-lr\"]: hostElement[\"s-lr\"],\n    [\"s-p\"]: hostElement[\"s-p\"],\n    [\"s-rc\"]: hostElement[\"s-rc\"],\n    [\"s-sc\"]: hostElement[\"s-sc\"]\n  };\n};\nvar installDevTools = () => {\n  if (BUILD2.devTools) {\n    const stencil = win.stencil = win.stencil || {};\n    const originalInspect = stencil.inspect;\n    stencil.inspect = (ref) => {\n      let result = inspect(ref);\n      if (!result && typeof originalInspect === \"function\") {\n        result = originalInspect(ref);\n      }\n      return result;\n    };\n  }\n};\n\n// src/runtime/runtime-constants.ts\nvar CONTENT_REF_ID = \"r\";\nvar ORG_LOCATION_ID = \"o\";\nvar SLOT_NODE_ID = \"s\";\nvar TEXT_NODE_ID = \"t\";\nvar HYDRATE_ID = \"s-id\";\nvar HYDRATED_STYLE_ID = \"sty-id\";\nvar HYDRATE_CHILD_ID = \"c-id\";\nvar HYDRATED_CSS = \"{visibility:hidden}.hydrated{visibility:inherit}\";\nvar SLOT_FB_CSS = \"slot-fb{display:contents}slot-fb[hidden]{display:none}\";\nvar XLINK_NS = \"http://www.w3.org/1999/xlink\";\nvar FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS = [\n  \"formAssociatedCallback\",\n  \"formResetCallback\",\n  \"formDisabledCallback\",\n  \"formStateRestoreCallback\"\n];\n\n// src/runtime/vdom/h.ts\nimport { BUILD as BUILD3 } from \"@stencil/core/internal/app-data\";\nvar h = (nodeName, vnodeData, ...children) => {\n  let child = null;\n  let key = null;\n  let slotName = null;\n  let simple = false;\n  let lastSimple = false;\n  const vNodeChildren = [];\n  const walk = (c) => {\n    for (let i2 = 0; i2 < c.length; i2++) {\n      child = c[i2];\n      if (Array.isArray(child)) {\n        walk(child);\n      } else if (child != null && typeof child !== \"boolean\") {\n        if (simple = typeof nodeName !== \"function\" && !isComplexType(child)) {\n          child = String(child);\n        } else if (BUILD3.isDev && typeof nodeName !== \"function\" && child.$flags$ === void 0) {\n          consoleDevError(`vNode passed as children has unexpected type.\nMake sure it's using the correct h() function.\nEmpty objects can also be the cause, look for JSX comments that became objects.`);\n        }\n        if (simple && lastSimple) {\n          vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n        } else {\n          vNodeChildren.push(simple ? newVNode(null, child) : child);\n        }\n        lastSimple = simple;\n      }\n    }\n  };\n  walk(children);\n  if (vnodeData) {\n    if (BUILD3.isDev && nodeName === \"input\") {\n      validateInputProperties(vnodeData);\n    }\n    if (BUILD3.vdomKey && vnodeData.key) {\n      key = vnodeData.key;\n    }\n    if (BUILD3.slotRelocation && vnodeData.name) {\n      slotName = vnodeData.name;\n    }\n    if (BUILD3.vdomClass) {\n      const classData = vnodeData.className || vnodeData.class;\n      if (classData) {\n        vnodeData.class = typeof classData !== \"object\" ? classData : Object.keys(classData).filter((k) => classData[k]).join(\" \");\n      }\n    }\n  }\n  if (BUILD3.isDev && vNodeChildren.some(isHost)) {\n    consoleDevError(`The <Host> must be the single root component. Make sure:\n- You are NOT using hostData() and <Host> in the same component.\n- <Host> is used once, and it's the single root component of the render() function.`);\n  }\n  if (BUILD3.vdomFunctional && typeof nodeName === \"function\") {\n    return nodeName(\n      vnodeData === null ? {} : vnodeData,\n      vNodeChildren,\n      vdomFnUtils\n    );\n  }\n  const vnode = newVNode(nodeName, null);\n  vnode.$attrs$ = vnodeData;\n  if (vNodeChildren.length > 0) {\n    vnode.$children$ = vNodeChildren;\n  }\n  if (BUILD3.vdomKey) {\n    vnode.$key$ = key;\n  }\n  if (BUILD3.slotRelocation) {\n    vnode.$name$ = slotName;\n  }\n  return vnode;\n};\nvar newVNode = (tag, text) => {\n  const vnode = {\n    $flags$: 0,\n    $tag$: tag,\n    $text$: text,\n    $elm$: null,\n    $children$: null\n  };\n  if (BUILD3.vdomAttribute) {\n    vnode.$attrs$ = null;\n  }\n  if (BUILD3.vdomKey) {\n    vnode.$key$ = null;\n  }\n  if (BUILD3.slotRelocation) {\n    vnode.$name$ = null;\n  }\n  return vnode;\n};\nvar Host = {};\nvar isHost = (node) => node && node.$tag$ === Host;\nvar vdomFnUtils = {\n  forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n  map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate)\n};\nvar convertToPublic = (node) => ({\n  vattrs: node.$attrs$,\n  vchildren: node.$children$,\n  vkey: node.$key$,\n  vname: node.$name$,\n  vtag: node.$tag$,\n  vtext: node.$text$\n});\nvar convertToPrivate = (node) => {\n  if (typeof node.vtag === \"function\") {\n    const vnodeData = { ...node.vattrs };\n    if (node.vkey) {\n      vnodeData.key = node.vkey;\n    }\n    if (node.vname) {\n      vnodeData.name = node.vname;\n    }\n    return h(node.vtag, vnodeData, ...node.vchildren || []);\n  }\n  const vnode = newVNode(node.vtag, node.vtext);\n  vnode.$attrs$ = node.vattrs;\n  vnode.$children$ = node.vchildren;\n  vnode.$key$ = node.vkey;\n  vnode.$name$ = node.vname;\n  return vnode;\n};\nvar validateInputProperties = (inputElm) => {\n  const props = Object.keys(inputElm);\n  const value = props.indexOf(\"value\");\n  if (value === -1) {\n    return;\n  }\n  const typeIndex = props.indexOf(\"type\");\n  const minIndex = props.indexOf(\"min\");\n  const maxIndex = props.indexOf(\"max\");\n  const stepIndex = props.indexOf(\"step\");\n  if (value < typeIndex || value < minIndex || value < maxIndex || value < stepIndex) {\n    consoleDevWarn(`The \"value\" prop of <input> should be set after \"min\", \"max\", \"type\" and \"step\"`);\n  }\n};\n\n// src/runtime/client-hydrate.ts\nvar initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {\n  const endHydrate = createTime(\"hydrateClient\", tagName);\n  const shadowRoot = hostElm.shadowRoot;\n  const childRenderNodes = [];\n  const slotNodes = [];\n  const shadowRootNodes = BUILD4.shadowDom && shadowRoot ? [] : null;\n  const vnode = hostRef.$vnode$ = newVNode(tagName, null);\n  if (!plt.$orgLocNodes$) {\n    initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = /* @__PURE__ */ new Map());\n  }\n  hostElm[HYDRATE_ID] = hostId;\n  hostElm.removeAttribute(HYDRATE_ID);\n  clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);\n  childRenderNodes.map((c) => {\n    const orgLocationId = c.$hostId$ + \".\" + c.$nodeId$;\n    const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n    const node = c.$elm$;\n    if (orgLocationNode && supportsShadow && orgLocationNode[\"s-en\"] === \"\") {\n      orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n    }\n    if (!shadowRoot) {\n      node[\"s-hn\"] = tagName;\n      if (orgLocationNode) {\n        node[\"s-ol\"] = orgLocationNode;\n        node[\"s-ol\"][\"s-nr\"] = node;\n      }\n    }\n    plt.$orgLocNodes$.delete(orgLocationId);\n  });\n  if (BUILD4.shadowDom && shadowRoot) {\n    shadowRootNodes.map((shadowRootNode) => {\n      if (shadowRootNode) {\n        shadowRoot.appendChild(shadowRootNode);\n      }\n    });\n  }\n  endHydrate();\n};\nvar clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) => {\n  let childNodeType;\n  let childIdSplt;\n  let childVNode;\n  let i2;\n  if (node.nodeType === 1 /* ElementNode */) {\n    childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n    if (childNodeType) {\n      childIdSplt = childNodeType.split(\".\");\n      if (childIdSplt[0] === hostId || childIdSplt[0] === \"0\") {\n        childVNode = {\n          $flags$: 0,\n          $hostId$: childIdSplt[0],\n          $nodeId$: childIdSplt[1],\n          $depth$: childIdSplt[2],\n          $index$: childIdSplt[3],\n          $tag$: node.tagName.toLowerCase(),\n          $elm$: node,\n          $attrs$: null,\n          $children$: null,\n          $key$: null,\n          $name$: null,\n          $text$: null\n        };\n        childRenderNodes.push(childVNode);\n        node.removeAttribute(HYDRATE_CHILD_ID);\n        if (!parentVNode.$children$) {\n          parentVNode.$children$ = [];\n        }\n        parentVNode.$children$[childVNode.$index$] = childVNode;\n        parentVNode = childVNode;\n        if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n          shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n        }\n      }\n    }\n    for (i2 = node.childNodes.length - 1; i2 >= 0; i2--) {\n      clientHydrate(\n        parentVNode,\n        childRenderNodes,\n        slotNodes,\n        shadowRootNodes,\n        hostElm,\n        node.childNodes[i2],\n        hostId\n      );\n    }\n    if (node.shadowRoot) {\n      for (i2 = node.shadowRoot.childNodes.length - 1; i2 >= 0; i2--) {\n        clientHydrate(\n          parentVNode,\n          childRenderNodes,\n          slotNodes,\n          shadowRootNodes,\n          hostElm,\n          node.shadowRoot.childNodes[i2],\n          hostId\n        );\n      }\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[1] === hostId || childIdSplt[1] === \"0\") {\n      childNodeType = childIdSplt[0];\n      childVNode = {\n        $flags$: 0,\n        $hostId$: childIdSplt[1],\n        $nodeId$: childIdSplt[2],\n        $depth$: childIdSplt[3],\n        $index$: childIdSplt[4],\n        $elm$: node,\n        $attrs$: null,\n        $children$: null,\n        $key$: null,\n        $name$: null,\n        $tag$: null,\n        $text$: null\n      };\n      if (childNodeType === TEXT_NODE_ID) {\n        childVNode.$elm$ = node.nextSibling;\n        if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* TextNode */) {\n          childVNode.$text$ = childVNode.$elm$.textContent;\n          childRenderNodes.push(childVNode);\n          node.remove();\n          if (!parentVNode.$children$) {\n            parentVNode.$children$ = [];\n          }\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n          if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n          }\n        }\n      } else if (childVNode.$hostId$ === hostId) {\n        if (childNodeType === SLOT_NODE_ID) {\n          childVNode.$tag$ = \"slot\";\n          if (childIdSplt[5]) {\n            node[\"s-sn\"] = childVNode.$name$ = childIdSplt[5];\n          } else {\n            node[\"s-sn\"] = \"\";\n          }\n          node[\"s-sr\"] = true;\n          if (BUILD4.shadowDom && shadowRootNodes) {\n            childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n            if (childVNode.$name$) {\n              childVNode.$elm$.setAttribute(\"name\", childVNode.$name$);\n            }\n            node.parentNode.insertBefore(childVNode.$elm$, node);\n            node.remove();\n            if (childVNode.$depth$ === \"0\") {\n              shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n            }\n          }\n          slotNodes.push(childVNode);\n          if (!parentVNode.$children$) {\n            parentVNode.$children$ = [];\n          }\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n        } else if (childNodeType === CONTENT_REF_ID) {\n          if (BUILD4.shadowDom && shadowRootNodes) {\n            node.remove();\n          } else if (BUILD4.slotRelocation) {\n            hostElm[\"s-cr\"] = node;\n            node[\"s-cn\"] = true;\n          }\n        }\n      }\n    }\n  } else if (parentVNode && parentVNode.$tag$ === \"style\") {\n    const vnode = newVNode(null, node.textContent);\n    vnode.$elm$ = node;\n    vnode.$index$ = \"0\";\n    parentVNode.$children$ = [vnode];\n  }\n};\nvar initializeDocumentHydrate = (node, orgLocNodes) => {\n  if (node.nodeType === 1 /* ElementNode */) {\n    let i2 = 0;\n    for (; i2 < node.childNodes.length; i2++) {\n      initializeDocumentHydrate(node.childNodes[i2], orgLocNodes);\n    }\n    if (node.shadowRoot) {\n      for (i2 = 0; i2 < node.shadowRoot.childNodes.length; i2++) {\n        initializeDocumentHydrate(node.shadowRoot.childNodes[i2], orgLocNodes);\n      }\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    const childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[0] === ORG_LOCATION_ID) {\n      orgLocNodes.set(childIdSplt[1] + \".\" + childIdSplt[2], node);\n      node.nodeValue = \"\";\n      node[\"s-en\"] = childIdSplt[3];\n    }\n  }\n};\n\n// src/runtime/initialize-component.ts\nimport { BUILD as BUILD15 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/mode.ts\nvar computeMode = (elm) => modeResolutionChain.map((h2) => h2(elm)).find((m) => !!m);\nvar setMode = (handler) => modeResolutionChain.push(handler);\nvar getMode = (ref) => getHostRef(ref).$modeName$;\n\n// src/runtime/proxy-component.ts\nimport { BUILD as BUILD14 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/set-value.ts\nimport { BUILD as BUILD13 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/parse-property-value.ts\nimport { BUILD as BUILD5 } from \"@stencil/core/internal/app-data\";\nvar parsePropertyValue = (propValue, propType) => {\n  if (propValue != null && !isComplexType(propValue)) {\n    if (BUILD5.propBoolean && propType & 4 /* Boolean */) {\n      return propValue === \"false\" ? false : propValue === \"\" || !!propValue;\n    }\n    if (BUILD5.propNumber && propType & 2 /* Number */) {\n      return parseFloat(propValue);\n    }\n    if (BUILD5.propString && propType & 1 /* String */) {\n      return String(propValue);\n    }\n    return propValue;\n  }\n  return propValue;\n};\n\n// src/runtime/update-component.ts\nimport { BUILD as BUILD12, NAMESPACE } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/event-emitter.ts\nimport { BUILD as BUILD7 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/element.ts\nimport { BUILD as BUILD6 } from \"@stencil/core/internal/app-data\";\nvar getElement = (ref) => BUILD6.lazyLoad ? getHostRef(ref).$hostElement$ : ref;\n\n// src/runtime/event-emitter.ts\nvar createEvent = (ref, name, flags) => {\n  const elm = getElement(ref);\n  return {\n    emit: (detail) => {\n      if (BUILD7.isDev && !elm.isConnected) {\n        consoleDevWarn(`The \"${name}\" event was emitted, but the dispatcher node is no longer connected to the dom.`);\n      }\n      return emitEvent(elm, name, {\n        bubbles: !!(flags & 4 /* Bubbles */),\n        composed: !!(flags & 2 /* Composed */),\n        cancelable: !!(flags & 1 /* Cancellable */),\n        detail\n      });\n    }\n  };\n};\nvar emitEvent = (elm, name, opts) => {\n  const ev = plt.ce(name, opts);\n  elm.dispatchEvent(ev);\n  return ev;\n};\n\n// src/runtime/styles.ts\nimport { BUILD as BUILD8 } from \"@stencil/core/internal/app-data\";\nvar rootAppliedStyles = /* @__PURE__ */ new WeakMap();\nvar registerStyle = (scopeId2, cssText, allowCS) => {\n  let style = styles.get(scopeId2);\n  if (supportsConstructableStylesheets && allowCS) {\n    style = style || new CSSStyleSheet();\n    if (typeof style === \"string\") {\n      style = cssText;\n    } else {\n      style.replaceSync(cssText);\n    }\n  } else {\n    style = cssText;\n  }\n  styles.set(scopeId2, style);\n};\nvar addStyle = (styleContainerNode, cmpMeta, mode) => {\n  var _a;\n  const scopeId2 = getScopeId(cmpMeta, mode);\n  const style = styles.get(scopeId2);\n  if (!BUILD8.attachStyles) {\n    return scopeId2;\n  }\n  styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n  if (style) {\n    if (typeof style === \"string\") {\n      styleContainerNode = styleContainerNode.head || styleContainerNode;\n      let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n      let styleElm;\n      if (!appliedStyles) {\n        rootAppliedStyles.set(styleContainerNode, appliedStyles = /* @__PURE__ */ new Set());\n      }\n      if (!appliedStyles.has(scopeId2)) {\n        if (BUILD8.hydrateClientSide && styleContainerNode.host && (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}=\"${scopeId2}\"]`))) {\n          styleElm.innerHTML = style;\n        } else {\n          styleElm = doc.createElement(\"style\");\n          styleElm.innerHTML = style;\n          const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n          if (nonce != null) {\n            styleElm.setAttribute(\"nonce\", nonce);\n          }\n          if (BUILD8.hydrateServerSide || BUILD8.hotModuleReplacement) {\n            styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId2);\n          }\n          styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector(\"link\"));\n        }\n        if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n          styleElm.innerHTML += SLOT_FB_CSS;\n        }\n        if (appliedStyles) {\n          appliedStyles.add(scopeId2);\n        }\n      }\n    } else if (BUILD8.constructableCSS && !styleContainerNode.adoptedStyleSheets.includes(style)) {\n      styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n    }\n  }\n  return scopeId2;\n};\nvar attachStyles = (hostRef) => {\n  const cmpMeta = hostRef.$cmpMeta$;\n  const elm = hostRef.$hostElement$;\n  const flags = cmpMeta.$flags$;\n  const endAttachStyles = createTime(\"attachStyles\", cmpMeta.$tagName$);\n  const scopeId2 = addStyle(\n    BUILD8.shadowDom && supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(),\n    cmpMeta,\n    hostRef.$modeName$\n  );\n  if ((BUILD8.shadowDom || BUILD8.scoped) && BUILD8.cssAnnotations && flags & 10 /* needsScopedEncapsulation */) {\n    elm[\"s-sc\"] = scopeId2;\n    elm.classList.add(scopeId2 + \"-h\");\n    if (BUILD8.scoped && flags & 2 /* scopedCssEncapsulation */) {\n      elm.classList.add(scopeId2 + \"-s\");\n    }\n  }\n  endAttachStyles();\n};\nvar getScopeId = (cmp, mode) => \"sc-\" + (BUILD8.mode && mode && cmp.$flags$ & 32 /* hasMode */ ? cmp.$tagName$ + \"-\" + mode : cmp.$tagName$);\nvar convertScopedToShadow = (css) => css.replace(/\\/\\*!@([^\\/]+)\\*\\/[^\\{]+\\{/g, \"$1{\");\n\n// src/runtime/vdom/vdom-render.ts\nimport { BUILD as BUILD11 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/update-element.ts\nimport { BUILD as BUILD10 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/set-accessor.ts\nimport { BUILD as BUILD9 } from \"@stencil/core/internal/app-data\";\nvar setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n  if (oldValue !== newValue) {\n    let isProp = isMemberInElement(elm, memberName);\n    let ln = memberName.toLowerCase();\n    if (BUILD9.vdomClass && memberName === \"class\") {\n      const classList = elm.classList;\n      const oldClasses = parseClassList(oldValue);\n      const newClasses = parseClassList(newValue);\n      classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n      classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n    } else if (BUILD9.vdomStyle && memberName === \"style\") {\n      if (BUILD9.updatable) {\n        for (const prop in oldValue) {\n          if (!newValue || newValue[prop] == null) {\n            if (!BUILD9.hydrateServerSide && prop.includes(\"-\")) {\n              elm.style.removeProperty(prop);\n            } else {\n              elm.style[prop] = \"\";\n            }\n          }\n        }\n      }\n      for (const prop in newValue) {\n        if (!oldValue || newValue[prop] !== oldValue[prop]) {\n          if (!BUILD9.hydrateServerSide && prop.includes(\"-\")) {\n            elm.style.setProperty(prop, newValue[prop]);\n          } else {\n            elm.style[prop] = newValue[prop];\n          }\n        }\n      }\n    } else if (BUILD9.vdomKey && memberName === \"key\") {\n    } else if (BUILD9.vdomRef && memberName === \"ref\") {\n      if (newValue) {\n        newValue(elm);\n      }\n    } else if (BUILD9.vdomListener && (BUILD9.lazyLoad ? !isProp : !elm.__lookupSetter__(memberName)) && memberName[0] === \"o\" && memberName[1] === \"n\") {\n      if (memberName[2] === \"-\") {\n        memberName = memberName.slice(3);\n      } else if (isMemberInElement(win, ln)) {\n        memberName = ln.slice(2);\n      } else {\n        memberName = ln[2] + memberName.slice(3);\n      }\n      if (oldValue || newValue) {\n        const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);\n        memberName = memberName.replace(CAPTURE_EVENT_REGEX, \"\");\n        if (oldValue) {\n          plt.rel(elm, memberName, oldValue, capture);\n        }\n        if (newValue) {\n          plt.ael(elm, memberName, newValue, capture);\n        }\n      }\n    } else if (BUILD9.vdomPropOrAttr) {\n      const isComplex = isComplexType(newValue);\n      if ((isProp || isComplex && newValue !== null) && !isSvg) {\n        try {\n          if (!elm.tagName.includes(\"-\")) {\n            const n = newValue == null ? \"\" : newValue;\n            if (memberName === \"list\") {\n              isProp = false;\n            } else if (oldValue == null || elm[memberName] != n) {\n              elm[memberName] = n;\n            }\n          } else {\n            elm[memberName] = newValue;\n          }\n        } catch (e) {\n        }\n      }\n      let xlink = false;\n      if (BUILD9.vdomXlink) {\n        if (ln !== (ln = ln.replace(/^xlink\\:?/, \"\"))) {\n          memberName = ln;\n          xlink = true;\n        }\n      }\n      if (newValue == null || newValue === false) {\n        if (newValue !== false || elm.getAttribute(memberName) === \"\") {\n          if (BUILD9.vdomXlink && xlink) {\n            elm.removeAttributeNS(XLINK_NS, memberName);\n          } else {\n            elm.removeAttribute(memberName);\n          }\n        }\n      } else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n        newValue = newValue === true ? \"\" : newValue;\n        if (BUILD9.vdomXlink && xlink) {\n          elm.setAttributeNS(XLINK_NS, memberName, newValue);\n        } else {\n          elm.setAttribute(memberName, newValue);\n        }\n      }\n    }\n  }\n};\nvar parseClassListRegex = /\\s/;\nvar parseClassList = (value) => !value ? [] : value.split(parseClassListRegex);\nvar CAPTURE_EVENT_SUFFIX = \"Capture\";\nvar CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + \"$\");\n\n// src/runtime/vdom/update-element.ts\nvar updateElement = (oldVnode, newVnode, isSvgMode2) => {\n  const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n  const oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || EMPTY_OBJ;\n  const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n  if (BUILD10.updatable) {\n    for (const memberName of sortedAttrNames(Object.keys(oldVnodeAttrs))) {\n      if (!(memberName in newVnodeAttrs)) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], void 0, isSvgMode2, newVnode.$flags$);\n      }\n    }\n  }\n  for (const memberName of sortedAttrNames(Object.keys(newVnodeAttrs))) {\n    setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode2, newVnode.$flags$);\n  }\n};\nfunction sortedAttrNames(attrNames) {\n  return attrNames.includes(\"ref\") ? (\n    // we need to sort these to ensure that `'ref'` is the last attr\n    [...attrNames.filter((attr) => attr !== \"ref\"), \"ref\"]\n  ) : (\n    // no need to sort, return the original array\n    attrNames\n  );\n}\n\n// src/runtime/vdom/vdom-render.ts\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n  var _a;\n  const newVNode2 = newParentVNode.$children$[childIndex];\n  let i2 = 0;\n  let elm;\n  let childNode;\n  let oldVNode;\n  if (BUILD11.slotRelocation && !useNativeShadowDom) {\n    checkSlotRelocate = true;\n    if (newVNode2.$tag$ === \"slot\") {\n      if (scopeId) {\n        parentElm.classList.add(scopeId + \"-s\");\n      }\n      newVNode2.$flags$ |= newVNode2.$children$ ? (\n        // slot element has fallback content\n        // still create an element that \"mocks\" the slot element\n        2 /* isSlotFallback */\n      ) : (\n        // slot element does not have fallback content\n        // create an html comment we'll use to always reference\n        // where actual slot content should sit next to\n        1 /* isSlotReference */\n      );\n    }\n  }\n  if (BUILD11.isDev && newVNode2.$elm$) {\n    consoleDevError(\n      `The JSX ${newVNode2.$text$ !== null ? `\"${newVNode2.$text$}\" text` : `\"${newVNode2.$tag$}\" element`} node should not be shared within the same renderer. The renderer caches element lookups in order to improve performance. However, a side effect from this is that the exact same JSX node should not be reused. For more information please see https://stenciljs.com/docs/templating-jsx#avoid-shared-jsx-nodes`\n    );\n  }\n  if (BUILD11.vdomText && newVNode2.$text$ !== null) {\n    elm = newVNode2.$elm$ = doc.createTextNode(newVNode2.$text$);\n  } else if (BUILD11.slotRelocation && newVNode2.$flags$ & 1 /* isSlotReference */) {\n    elm = newVNode2.$elm$ = BUILD11.isDebug || BUILD11.hydrateServerSide ? slotReferenceDebugNode(newVNode2) : doc.createTextNode(\"\");\n  } else {\n    if (BUILD11.svg && !isSvgMode) {\n      isSvgMode = newVNode2.$tag$ === \"svg\";\n    }\n    elm = newVNode2.$elm$ = BUILD11.svg ? doc.createElementNS(\n      isSvgMode ? SVG_NS : HTML_NS,\n      BUILD11.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    ) : doc.createElement(\n      BUILD11.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    );\n    if (BUILD11.svg && isSvgMode && newVNode2.$tag$ === \"foreignObject\") {\n      isSvgMode = false;\n    }\n    if (BUILD11.vdomAttribute) {\n      updateElement(null, newVNode2, isSvgMode);\n    }\n    if ((BUILD11.shadowDom || BUILD11.scoped) && isDef(scopeId) && elm[\"s-si\"] !== scopeId) {\n      elm.classList.add(elm[\"s-si\"] = scopeId);\n    }\n    if (BUILD11.scoped) {\n      updateElementScopeIds(elm, parentElm);\n    }\n    if (newVNode2.$children$) {\n      for (i2 = 0; i2 < newVNode2.$children$.length; ++i2) {\n        childNode = createElm(oldParentVNode, newVNode2, i2, elm);\n        if (childNode) {\n          elm.appendChild(childNode);\n        }\n      }\n    }\n    if (BUILD11.svg) {\n      if (newVNode2.$tag$ === \"svg\") {\n        isSvgMode = false;\n      } else if (elm.tagName === \"foreignObject\") {\n        isSvgMode = true;\n      }\n    }\n  }\n  elm[\"s-hn\"] = hostTagName;\n  if (BUILD11.slotRelocation) {\n    if (newVNode2.$flags$ & (2 /* isSlotFallback */ | 1 /* isSlotReference */)) {\n      elm[\"s-sr\"] = true;\n      elm[\"s-cr\"] = contentRef;\n      elm[\"s-sn\"] = newVNode2.$name$ || \"\";\n      elm[\"s-rf\"] = (_a = newVNode2.$attrs$) == null ? void 0 : _a.ref;\n      oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n      if (oldVNode && oldVNode.$tag$ === newVNode2.$tag$ && oldParentVNode.$elm$) {\n        if (BUILD11.experimentalSlotFixes) {\n          relocateToHostRoot(oldParentVNode.$elm$);\n        } else {\n          putBackInOriginalLocation(oldParentVNode.$elm$, false);\n        }\n      }\n    }\n  }\n  return elm;\n};\nvar relocateToHostRoot = (parentElm) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const host = parentElm.closest(hostTagName.toLowerCase());\n  if (host != null) {\n    const contentRefNode = Array.from(host.childNodes).find((ref) => ref[\"s-cr\"]);\n    const childNodeArray = Array.from(parentElm.childNodes);\n    for (const childNode of contentRefNode ? childNodeArray.reverse() : childNodeArray) {\n      if (childNode[\"s-sh\"] != null) {\n        insertBefore(host, childNode, contentRefNode != null ? contentRefNode : null);\n        childNode[\"s-sh\"] = void 0;\n        checkSlotRelocate = true;\n      }\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar putBackInOriginalLocation = (parentElm, recursive) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const oldSlotChildNodes = Array.from(parentElm.childNodes);\n  if (parentElm[\"s-sr\"] && BUILD11.experimentalSlotFixes) {\n    let node = parentElm;\n    while (node = node.nextSibling) {\n      if (node && node[\"s-sn\"] === parentElm[\"s-sn\"] && node[\"s-sh\"] === hostTagName) {\n        oldSlotChildNodes.push(node);\n      }\n    }\n  }\n  for (let i2 = oldSlotChildNodes.length - 1; i2 >= 0; i2--) {\n    const childNode = oldSlotChildNodes[i2];\n    if (childNode[\"s-hn\"] !== hostTagName && childNode[\"s-ol\"]) {\n      insertBefore(parentReferenceNode(childNode), childNode, referenceNode(childNode));\n      childNode[\"s-ol\"].remove();\n      childNode[\"s-ol\"] = void 0;\n      childNode[\"s-sh\"] = void 0;\n      checkSlotRelocate = true;\n    }\n    if (recursive) {\n      putBackInOriginalLocation(childNode, recursive);\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n  let containerElm = BUILD11.slotRelocation && parentElm[\"s-cr\"] && parentElm[\"s-cr\"].parentNode || parentElm;\n  let childNode;\n  if (BUILD11.shadowDom && containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n    containerElm = containerElm.shadowRoot;\n  }\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnodes[startIdx]) {\n      childNode = createElm(null, parentVNode, startIdx, parentElm);\n      if (childNode) {\n        vnodes[startIdx].$elm$ = childNode;\n        insertBefore(containerElm, childNode, BUILD11.slotRelocation ? referenceNode(before) : before);\n      }\n    }\n  }\n};\nvar removeVnodes = (vnodes, startIdx, endIdx) => {\n  for (let index = startIdx; index <= endIdx; ++index) {\n    const vnode = vnodes[index];\n    if (vnode) {\n      const elm = vnode.$elm$;\n      nullifyVNodeRefs(vnode);\n      if (elm) {\n        if (BUILD11.slotRelocation) {\n          checkSlotFallbackVisibility = true;\n          if (elm[\"s-ol\"]) {\n            elm[\"s-ol\"].remove();\n          } else {\n            putBackInOriginalLocation(elm, true);\n          }\n        }\n        elm.remove();\n      }\n    }\n  }\n};\nvar updateChildren = (parentElm, oldCh, newVNode2, newCh, isInitialRender = false) => {\n  let oldStartIdx = 0;\n  let newStartIdx = 0;\n  let idxInOld = 0;\n  let i2 = 0;\n  let oldEndIdx = oldCh.length - 1;\n  let oldStartVnode = oldCh[0];\n  let oldEndVnode = oldCh[oldEndIdx];\n  let newEndIdx = newCh.length - 1;\n  let newStartVnode = newCh[0];\n  let newEndVnode = newCh[newEndIdx];\n  let node;\n  let elmToMove;\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newStartVnode, isInitialRender)) {\n      patch(oldStartVnode, newStartVnode, isInitialRender);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (isSameVnode(oldEndVnode, newEndVnode, isInitialRender)) {\n      patch(oldEndVnode, newEndVnode, isInitialRender);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newEndVnode, isInitialRender)) {\n      if (BUILD11.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n      }\n      patch(oldStartVnode, newEndVnode, isInitialRender);\n      insertBefore(parentElm, oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldEndVnode, newStartVnode, isInitialRender)) {\n      if (BUILD11.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n      }\n      patch(oldEndVnode, newStartVnode, isInitialRender);\n      insertBefore(parentElm, oldEndVnode.$elm$, oldStartVnode.$elm$);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      idxInOld = -1;\n      if (BUILD11.vdomKey) {\n        for (i2 = oldStartIdx; i2 <= oldEndIdx; ++i2) {\n          if (oldCh[i2] && oldCh[i2].$key$ !== null && oldCh[i2].$key$ === newStartVnode.$key$) {\n            idxInOld = i2;\n            break;\n          }\n        }\n      }\n      if (BUILD11.vdomKey && idxInOld >= 0) {\n        elmToMove = oldCh[idxInOld];\n        if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n          node = createElm(oldCh && oldCh[newStartIdx], newVNode2, idxInOld, parentElm);\n        } else {\n          patch(elmToMove, newStartVnode, isInitialRender);\n          oldCh[idxInOld] = void 0;\n          node = elmToMove.$elm$;\n        }\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        node = createElm(oldCh && oldCh[newStartIdx], newVNode2, newStartIdx, parentElm);\n        newStartVnode = newCh[++newStartIdx];\n      }\n      if (node) {\n        if (BUILD11.slotRelocation) {\n          insertBefore(parentReferenceNode(oldStartVnode.$elm$), node, referenceNode(oldStartVnode.$elm$));\n        } else {\n          insertBefore(oldStartVnode.$elm$.parentNode, node, oldStartVnode.$elm$);\n        }\n      }\n    }\n  }\n  if (oldStartIdx > oldEndIdx) {\n    addVnodes(\n      parentElm,\n      newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$,\n      newVNode2,\n      newCh,\n      newStartIdx,\n      newEndIdx\n    );\n  } else if (BUILD11.updatable && newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n};\nvar isSameVnode = (leftVNode, rightVNode, isInitialRender = false) => {\n  if (leftVNode.$tag$ === rightVNode.$tag$) {\n    if (BUILD11.slotRelocation && leftVNode.$tag$ === \"slot\") {\n      return leftVNode.$name$ === rightVNode.$name$;\n    }\n    if (BUILD11.vdomKey && !isInitialRender) {\n      return leftVNode.$key$ === rightVNode.$key$;\n    }\n    return true;\n  }\n  return false;\n};\nvar referenceNode = (node) => {\n  return node && node[\"s-ol\"] || node;\n};\nvar parentReferenceNode = (node) => (node[\"s-ol\"] ? node[\"s-ol\"] : node).parentNode;\nvar patch = (oldVNode, newVNode2, isInitialRender = false) => {\n  const elm = newVNode2.$elm$ = oldVNode.$elm$;\n  const oldChildren = oldVNode.$children$;\n  const newChildren = newVNode2.$children$;\n  const tag = newVNode2.$tag$;\n  const text = newVNode2.$text$;\n  let defaultHolder;\n  if (!BUILD11.vdomText || text === null) {\n    if (BUILD11.svg) {\n      isSvgMode = tag === \"svg\" ? true : tag === \"foreignObject\" ? false : isSvgMode;\n    }\n    if (BUILD11.vdomAttribute || BUILD11.reflect) {\n      if (BUILD11.slot && tag === \"slot\" && !useNativeShadowDom) {\n        if (BUILD11.experimentalSlotFixes && oldVNode.$name$ !== newVNode2.$name$) {\n          newVNode2.$elm$[\"s-sn\"] = newVNode2.$name$ || \"\";\n          relocateToHostRoot(newVNode2.$elm$.parentElement);\n        }\n      } else {\n        updateElement(oldVNode, newVNode2, isSvgMode);\n      }\n    }\n    if (BUILD11.updatable && oldChildren !== null && newChildren !== null) {\n      updateChildren(elm, oldChildren, newVNode2, newChildren, isInitialRender);\n    } else if (newChildren !== null) {\n      if (BUILD11.updatable && BUILD11.vdomText && oldVNode.$text$ !== null) {\n        elm.textContent = \"\";\n      }\n      addVnodes(elm, null, newVNode2, newChildren, 0, newChildren.length - 1);\n    } else if (BUILD11.updatable && oldChildren !== null) {\n      removeVnodes(oldChildren, 0, oldChildren.length - 1);\n    }\n    if (BUILD11.svg && isSvgMode && tag === \"svg\") {\n      isSvgMode = false;\n    }\n  } else if (BUILD11.vdomText && BUILD11.slotRelocation && (defaultHolder = elm[\"s-cr\"])) {\n    defaultHolder.parentNode.textContent = text;\n  } else if (BUILD11.vdomText && oldVNode.$text$ !== text) {\n    elm.data = text;\n  }\n};\nvar updateFallbackSlotVisibility = (elm) => {\n  const childNodes = elm.childNodes;\n  for (const childNode of childNodes) {\n    if (childNode.nodeType === 1 /* ElementNode */) {\n      if (childNode[\"s-sr\"]) {\n        const slotName = childNode[\"s-sn\"];\n        childNode.hidden = false;\n        for (const siblingNode of childNodes) {\n          if (siblingNode !== childNode) {\n            if (siblingNode[\"s-hn\"] !== childNode[\"s-hn\"] || slotName !== \"\") {\n              if (siblingNode.nodeType === 1 /* ElementNode */ && (slotName === siblingNode.getAttribute(\"slot\") || slotName === siblingNode[\"s-sn\"]) || siblingNode.nodeType === 3 /* TextNode */ && slotName === siblingNode[\"s-sn\"]) {\n                childNode.hidden = true;\n                break;\n              }\n            } else {\n              if (siblingNode.nodeType === 1 /* ElementNode */ || siblingNode.nodeType === 3 /* TextNode */ && siblingNode.textContent.trim() !== \"\") {\n                childNode.hidden = true;\n                break;\n              }\n            }\n          }\n        }\n      }\n      updateFallbackSlotVisibility(childNode);\n    }\n  }\n};\nvar relocateNodes = [];\nvar markSlotContentForRelocation = (elm) => {\n  let node;\n  let hostContentNodes;\n  let j;\n  for (const childNode of elm.childNodes) {\n    if (childNode[\"s-sr\"] && (node = childNode[\"s-cr\"]) && node.parentNode) {\n      hostContentNodes = node.parentNode.childNodes;\n      const slotName = childNode[\"s-sn\"];\n      for (j = hostContentNodes.length - 1; j >= 0; j--) {\n        node = hostContentNodes[j];\n        if (!node[\"s-cn\"] && !node[\"s-nr\"] && node[\"s-hn\"] !== childNode[\"s-hn\"] && (!BUILD11.experimentalSlotFixes || !node[\"s-sh\"] || node[\"s-sh\"] !== childNode[\"s-hn\"])) {\n          if (isNodeLocatedInSlot(node, slotName)) {\n            let relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n            checkSlotFallbackVisibility = true;\n            node[\"s-sn\"] = node[\"s-sn\"] || slotName;\n            if (relocateNodeData) {\n              relocateNodeData.$nodeToRelocate$[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodeData.$slotRefNode$ = childNode;\n            } else {\n              node[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodes.push({\n                $slotRefNode$: childNode,\n                $nodeToRelocate$: node\n              });\n            }\n            if (node[\"s-sr\"]) {\n              relocateNodes.map((relocateNode) => {\n                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node[\"s-sn\"])) {\n                  relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                  if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                    relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                  }\n                }\n              });\n            }\n          } else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {\n            relocateNodes.push({\n              $nodeToRelocate$: node\n            });\n          }\n        }\n      }\n    }\n    if (childNode.nodeType === 1 /* ElementNode */) {\n      markSlotContentForRelocation(childNode);\n    }\n  }\n};\nvar isNodeLocatedInSlot = (nodeToRelocate, slotName) => {\n  if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n    if (nodeToRelocate.getAttribute(\"slot\") === null && slotName === \"\") {\n      return true;\n    }\n    if (nodeToRelocate.getAttribute(\"slot\") === slotName) {\n      return true;\n    }\n    return false;\n  }\n  if (nodeToRelocate[\"s-sn\"] === slotName) {\n    return true;\n  }\n  return slotName === \"\";\n};\nvar nullifyVNodeRefs = (vNode) => {\n  if (BUILD11.vdomRef) {\n    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n    vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);\n  }\n};\nvar insertBefore = (parent, newNode, reference) => {\n  const inserted = parent == null ? void 0 : parent.insertBefore(newNode, reference);\n  if (BUILD11.scoped) {\n    updateElementScopeIds(newNode, parent);\n  }\n  return inserted;\n};\nvar findScopeIds = (element) => {\n  const scopeIds = [];\n  if (element) {\n    scopeIds.push(\n      ...element[\"s-scs\"] || [],\n      element[\"s-si\"],\n      element[\"s-sc\"],\n      ...findScopeIds(element.parentElement)\n    );\n  }\n  return scopeIds;\n};\nvar updateElementScopeIds = (element, parent, iterateChildNodes = false) => {\n  var _a;\n  if (element && parent && element.nodeType === 1 /* ElementNode */) {\n    const scopeIds = new Set(findScopeIds(parent).filter(Boolean));\n    if (scopeIds.size) {\n      (_a = element.classList) == null ? void 0 : _a.add(...element[\"s-scs\"] = [...scopeIds]);\n      if (element[\"s-ol\"] || iterateChildNodes) {\n        for (const childNode of Array.from(element.childNodes)) {\n          updateElementScopeIds(childNode, element, true);\n        }\n      }\n    }\n  }\n};\nvar renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {\n  var _a, _b, _c, _d, _e;\n  const hostElm = hostRef.$hostElement$;\n  const cmpMeta = hostRef.$cmpMeta$;\n  const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n  const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n  hostTagName = hostElm.tagName;\n  if (BUILD11.isDev && Array.isArray(renderFnResults) && renderFnResults.some(isHost)) {\n    throw new Error(`The <Host> must be the single root component.\nLooks like the render() function of \"${hostTagName.toLowerCase()}\" is returning an array that contains the <Host>.\n\nThe render() function should look like this instead:\n\nrender() {\n  // Do not return an array\n  return (\n    <Host>{content}</Host>\n  );\n}\n  `);\n  }\n  if (BUILD11.reflect && cmpMeta.$attrsToReflect$) {\n    rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n    cmpMeta.$attrsToReflect$.map(\n      ([propName, attribute]) => rootVnode.$attrs$[attribute] = hostElm[propName]\n    );\n  }\n  if (isInitialLoad && rootVnode.$attrs$) {\n    for (const key of Object.keys(rootVnode.$attrs$)) {\n      if (hostElm.hasAttribute(key) && ![\"key\", \"ref\", \"style\", \"class\"].includes(key)) {\n        rootVnode.$attrs$[key] = hostElm[key];\n      }\n    }\n  }\n  rootVnode.$tag$ = null;\n  rootVnode.$flags$ |= 4 /* isHost */;\n  hostRef.$vnode$ = rootVnode;\n  rootVnode.$elm$ = oldVNode.$elm$ = BUILD11.shadowDom ? hostElm.shadowRoot || hostElm : hostElm;\n  if (BUILD11.scoped || BUILD11.shadowDom) {\n    scopeId = hostElm[\"s-sc\"];\n  }\n  useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) !== 0;\n  if (BUILD11.slotRelocation) {\n    contentRef = hostElm[\"s-cr\"];\n    checkSlotFallbackVisibility = false;\n  }\n  patch(oldVNode, rootVnode, isInitialLoad);\n  if (BUILD11.slotRelocation) {\n    plt.$flags$ |= 1 /* isTmpDisconnected */;\n    if (checkSlotRelocate) {\n      markSlotContentForRelocation(rootVnode.$elm$);\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        if (!nodeToRelocate[\"s-ol\"]) {\n          const orgLocationNode = BUILD11.isDebug || BUILD11.hydrateServerSide ? originalLocationDebugNode(nodeToRelocate) : doc.createTextNode(\"\");\n          orgLocationNode[\"s-nr\"] = nodeToRelocate;\n          insertBefore(nodeToRelocate.parentNode, nodeToRelocate[\"s-ol\"] = orgLocationNode, nodeToRelocate);\n        }\n      }\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        const slotRefNode = relocateData.$slotRefNode$;\n        if (slotRefNode) {\n          const parentNodeRef = slotRefNode.parentNode;\n          let insertBeforeNode = slotRefNode.nextSibling;\n          if (!BUILD11.experimentalSlotFixes || insertBeforeNode && insertBeforeNode.nodeType === 1 /* ElementNode */) {\n            let orgLocationNode = (_a = nodeToRelocate[\"s-ol\"]) == null ? void 0 : _a.previousSibling;\n            while (orgLocationNode) {\n              let refNode = (_b = orgLocationNode[\"s-nr\"]) != null ? _b : null;\n              if (refNode && refNode[\"s-sn\"] === nodeToRelocate[\"s-sn\"] && parentNodeRef === refNode.parentNode) {\n                refNode = refNode.nextSibling;\n                while (refNode === nodeToRelocate || (refNode == null ? void 0 : refNode[\"s-sr\"])) {\n                  refNode = refNode == null ? void 0 : refNode.nextSibling;\n                }\n                if (!refNode || !refNode[\"s-nr\"]) {\n                  insertBeforeNode = refNode;\n                  break;\n                }\n              }\n              orgLocationNode = orgLocationNode.previousSibling;\n            }\n          }\n          if (!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode || nodeToRelocate.nextSibling !== insertBeforeNode) {\n            if (nodeToRelocate !== insertBeforeNode) {\n              if (!BUILD11.experimentalSlotFixes && !nodeToRelocate[\"s-hn\"] && nodeToRelocate[\"s-ol\"]) {\n                nodeToRelocate[\"s-hn\"] = nodeToRelocate[\"s-ol\"].parentNode.nodeName;\n              }\n              insertBefore(parentNodeRef, nodeToRelocate, insertBeforeNode);\n              if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n                nodeToRelocate.hidden = (_c = nodeToRelocate[\"s-ih\"]) != null ? _c : false;\n              }\n            }\n          }\n          nodeToRelocate && typeof slotRefNode[\"s-rf\"] === \"function\" && slotRefNode[\"s-rf\"](nodeToRelocate);\n        } else {\n          if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n            if (isInitialLoad) {\n              nodeToRelocate[\"s-ih\"] = (_d = nodeToRelocate.hidden) != null ? _d : false;\n            }\n            nodeToRelocate.hidden = true;\n          }\n        }\n      }\n    }\n    if (checkSlotFallbackVisibility) {\n      updateFallbackSlotVisibility(rootVnode.$elm$);\n    }\n    plt.$flags$ &= ~1 /* isTmpDisconnected */;\n    relocateNodes.length = 0;\n  }\n  if (BUILD11.experimentalScopedSlotChanges && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n    for (const childNode of rootVnode.$elm$.childNodes) {\n      if (childNode[\"s-hn\"] !== hostTagName && !childNode[\"s-sh\"]) {\n        if (isInitialLoad && childNode[\"s-ih\"] == null) {\n          childNode[\"s-ih\"] = (_e = childNode.hidden) != null ? _e : false;\n        }\n        childNode.hidden = true;\n      }\n    }\n  }\n  contentRef = void 0;\n};\nvar slotReferenceDebugNode = (slotVNode) => doc.createComment(\n  `<slot${slotVNode.$name$ ? ' name=\"' + slotVNode.$name$ + '\"' : \"\"}> (host=${hostTagName.toLowerCase()})`\n);\nvar originalLocationDebugNode = (nodeToRelocate) => doc.createComment(\n  `org-location for ` + (nodeToRelocate.localName ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate[\"s-hn\"]})` : `[${nodeToRelocate.textContent}]`)\n);\n\n// src/runtime/update-component.ts\nvar attachToAncestor = (hostRef, ancestorComponent) => {\n  if (BUILD12.asyncLoading && ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent[\"s-p\"]) {\n    ancestorComponent[\"s-p\"].push(new Promise((r) => hostRef.$onRenderResolve$ = r));\n  }\n};\nvar scheduleUpdate = (hostRef, isInitialLoad) => {\n  if (BUILD12.taskQueue && BUILD12.updatable) {\n    hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n  }\n  if (BUILD12.asyncLoading && hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n    hostRef.$flags$ |= 512 /* needsRerender */;\n    return;\n  }\n  attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n  const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n  return BUILD12.taskQueue ? writeTask(dispatch) : dispatch();\n};\nvar dispatchHooks = (hostRef, isInitialLoad) => {\n  const elm = hostRef.$hostElement$;\n  const endSchedule = createTime(\"scheduleUpdate\", hostRef.$cmpMeta$.$tagName$);\n  const instance = BUILD12.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  if (!instance) {\n    throw new Error(\n      `Can't render component <${elm.tagName.toLowerCase()} /> with invalid Stencil runtime! Make sure this imported component is compiled with a \\`externalRuntime: true\\` flag. For more information, please refer to https://stenciljs.com/docs/custom-elements#externalruntime`\n    );\n  }\n  let maybePromise;\n  if (isInitialLoad) {\n    if (BUILD12.lazyLoad && BUILD12.hostListener) {\n      hostRef.$flags$ |= 256 /* isListenReady */;\n      if (hostRef.$queuedListeners$) {\n        hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));\n        hostRef.$queuedListeners$ = void 0;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentWillLoad\");\n    if (BUILD12.cmpWillLoad) {\n      maybePromise = safeCall(instance, \"componentWillLoad\");\n    }\n  } else {\n    emitLifecycleEvent(elm, \"componentWillUpdate\");\n    if (BUILD12.cmpWillUpdate) {\n      maybePromise = safeCall(instance, \"componentWillUpdate\");\n    }\n  }\n  emitLifecycleEvent(elm, \"componentWillRender\");\n  if (BUILD12.cmpWillRender) {\n    maybePromise = enqueue(maybePromise, () => safeCall(instance, \"componentWillRender\"));\n  }\n  endSchedule();\n  return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nvar enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn) : fn();\nvar isPromisey = (maybePromise) => maybePromise instanceof Promise || maybePromise && maybePromise.then && typeof maybePromise.then === \"function\";\nvar updateComponent = async (hostRef, instance, isInitialLoad) => {\n  var _a;\n  const elm = hostRef.$hostElement$;\n  const endUpdate = createTime(\"update\", hostRef.$cmpMeta$.$tagName$);\n  const rc = elm[\"s-rc\"];\n  if (BUILD12.style && isInitialLoad) {\n    attachStyles(hostRef);\n  }\n  const endRender = createTime(\"render\", hostRef.$cmpMeta$.$tagName$);\n  if (BUILD12.isDev) {\n    hostRef.$flags$ |= 1024 /* devOnRender */;\n  }\n  if (BUILD12.hydrateServerSide) {\n    await callRender(hostRef, instance, elm, isInitialLoad);\n  } else {\n    callRender(hostRef, instance, elm, isInitialLoad);\n  }\n  if (BUILD12.isDev) {\n    hostRef.$renderCount$ = hostRef.$renderCount$ === void 0 ? 1 : hostRef.$renderCount$ + 1;\n    hostRef.$flags$ &= ~1024 /* devOnRender */;\n  }\n  if (BUILD12.hydrateServerSide) {\n    try {\n      serverSideConnected(elm);\n      if (isInitialLoad) {\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          elm[\"s-en\"] = \"\";\n        } else if (hostRef.$cmpMeta$.$flags$ & 2 /* scopedCssEncapsulation */) {\n          elm[\"s-en\"] = \"c\";\n        }\n      }\n    } catch (e) {\n      consoleError(e, elm);\n    }\n  }\n  if (BUILD12.asyncLoading && rc) {\n    rc.map((cb) => cb());\n    elm[\"s-rc\"] = void 0;\n  }\n  endRender();\n  endUpdate();\n  if (BUILD12.asyncLoading) {\n    const childrenPromises = (_a = elm[\"s-p\"]) != null ? _a : [];\n    const postUpdate = () => postUpdateComponent(hostRef);\n    if (childrenPromises.length === 0) {\n      postUpdate();\n    } else {\n      Promise.all(childrenPromises).then(postUpdate);\n      hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n      childrenPromises.length = 0;\n    }\n  } else {\n    postUpdateComponent(hostRef);\n  }\n};\nvar renderingRef = null;\nvar callRender = (hostRef, instance, elm, isInitialLoad) => {\n  const allRenderFn = BUILD12.allRenderFn ? true : false;\n  const lazyLoad = BUILD12.lazyLoad ? true : false;\n  const taskQueue = BUILD12.taskQueue ? true : false;\n  const updatable = BUILD12.updatable ? true : false;\n  try {\n    renderingRef = instance;\n    instance = allRenderFn ? instance.render() : instance.render && instance.render();\n    if (updatable && taskQueue) {\n      hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n    }\n    if (updatable || lazyLoad) {\n      hostRef.$flags$ |= 2 /* hasRendered */;\n    }\n    if (BUILD12.hasRenderFn || BUILD12.reflect) {\n      if (BUILD12.vdomRender || BUILD12.reflect) {\n        if (BUILD12.hydrateServerSide) {\n          return Promise.resolve(instance).then((value) => renderVdom(hostRef, value, isInitialLoad));\n        } else {\n          renderVdom(hostRef, instance, isInitialLoad);\n        }\n      } else {\n        const shadowRoot = elm.shadowRoot;\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          shadowRoot.textContent = instance;\n        } else {\n          elm.textContent = instance;\n        }\n      }\n    }\n  } catch (e) {\n    consoleError(e, hostRef.$hostElement$);\n  }\n  renderingRef = null;\n  return null;\n};\nvar getRenderingRef = () => renderingRef;\nvar postUpdateComponent = (hostRef) => {\n  const tagName = hostRef.$cmpMeta$.$tagName$;\n  const elm = hostRef.$hostElement$;\n  const endPostUpdate = createTime(\"postUpdate\", tagName);\n  const instance = BUILD12.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  if (BUILD12.cmpDidRender) {\n    if (BUILD12.isDev) {\n      hostRef.$flags$ |= 1024 /* devOnRender */;\n    }\n    safeCall(instance, \"componentDidRender\");\n    if (BUILD12.isDev) {\n      hostRef.$flags$ &= ~1024 /* devOnRender */;\n    }\n  }\n  emitLifecycleEvent(elm, \"componentDidRender\");\n  if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n    hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n    if (BUILD12.asyncLoading && BUILD12.cssAnnotations) {\n      addHydratedFlag(elm);\n    }\n    if (BUILD12.cmpDidLoad) {\n      if (BUILD12.isDev) {\n        hostRef.$flags$ |= 2048 /* devOnDidLoad */;\n      }\n      safeCall(instance, \"componentDidLoad\");\n      if (BUILD12.isDev) {\n        hostRef.$flags$ &= ~2048 /* devOnDidLoad */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidLoad\");\n    endPostUpdate();\n    if (BUILD12.asyncLoading) {\n      hostRef.$onReadyResolve$(elm);\n      if (!ancestorComponent) {\n        appDidLoad(tagName);\n      }\n    }\n  } else {\n    if (BUILD12.cmpDidUpdate) {\n      if (BUILD12.isDev) {\n        hostRef.$flags$ |= 1024 /* devOnRender */;\n      }\n      safeCall(instance, \"componentDidUpdate\");\n      if (BUILD12.isDev) {\n        hostRef.$flags$ &= ~1024 /* devOnRender */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidUpdate\");\n    endPostUpdate();\n  }\n  if (BUILD12.method && BUILD12.lazyLoad) {\n    hostRef.$onInstanceResolve$(elm);\n  }\n  if (BUILD12.asyncLoading) {\n    if (hostRef.$onRenderResolve$) {\n      hostRef.$onRenderResolve$();\n      hostRef.$onRenderResolve$ = void 0;\n    }\n    if (hostRef.$flags$ & 512 /* needsRerender */) {\n      nextTick(() => scheduleUpdate(hostRef, false));\n    }\n    hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n  }\n};\nvar forceUpdate = (ref) => {\n  if (BUILD12.updatable && (Build.isBrowser || Build.isTesting)) {\n    const hostRef = getHostRef(ref);\n    const isConnected = hostRef.$hostElement$.isConnected;\n    if (isConnected && (hostRef.$flags$ & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n      scheduleUpdate(hostRef, false);\n    }\n    return isConnected;\n  }\n  return false;\n};\nvar appDidLoad = (who) => {\n  if (BUILD12.cssAnnotations) {\n    addHydratedFlag(doc.documentElement);\n  }\n  if (BUILD12.asyncQueue) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  nextTick(() => emitEvent(win, \"appload\", { detail: { namespace: NAMESPACE } }));\n  if (BUILD12.profile && performance.measure) {\n    performance.measure(`[Stencil] ${NAMESPACE} initial load (by ${who})`, \"st:app:start\");\n  }\n};\nvar safeCall = (instance, method, arg) => {\n  if (instance && instance[method]) {\n    try {\n      return instance[method](arg);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  return void 0;\n};\nvar emitLifecycleEvent = (elm, lifecycleName) => {\n  if (BUILD12.lifecycleDOMEvents) {\n    emitEvent(elm, \"stencil_\" + lifecycleName, {\n      bubbles: true,\n      composed: true,\n      detail: {\n        namespace: NAMESPACE\n      }\n    });\n  }\n};\nvar addHydratedFlag = (elm) => {\n  var _a, _b;\n  return BUILD12.hydratedClass ? elm.classList.add((_a = BUILD12.hydratedSelectorName) != null ? _a : \"hydrated\") : BUILD12.hydratedAttribute ? elm.setAttribute((_b = BUILD12.hydratedSelectorName) != null ? _b : \"hydrated\", \"\") : void 0;\n};\nvar serverSideConnected = (elm) => {\n  const children = elm.children;\n  if (children != null) {\n    for (let i2 = 0, ii = children.length; i2 < ii; i2++) {\n      const childElm = children[i2];\n      if (typeof childElm.connectedCallback === \"function\") {\n        childElm.connectedCallback();\n      }\n      serverSideConnected(childElm);\n    }\n  }\n};\n\n// src/runtime/set-value.ts\nvar getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nvar setValue = (ref, propName, newVal, cmpMeta) => {\n  const hostRef = getHostRef(ref);\n  if (BUILD13.lazyLoad && !hostRef) {\n    throw new Error(\n      `Couldn't find host element for \"${cmpMeta.$tagName$}\" as it is unknown to this Stencil runtime. This usually happens when integrating a 3rd party Stencil component with another Stencil component or application. Please reach out to the maintainers of the 3rd party Stencil component or report this on the Stencil Discord server (https://chat.stenciljs.com) or comment on this similar [GitHub issue](https://github.com/ionic-team/stencil/issues/5457).`\n    );\n  }\n  const elm = BUILD13.lazyLoad ? hostRef.$hostElement$ : ref;\n  const oldVal = hostRef.$instanceValues$.get(propName);\n  const flags = hostRef.$flags$;\n  const instance = BUILD13.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n  const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);\n  const didValueChange = newVal !== oldVal && !areBothNaN;\n  if ((!BUILD13.lazyLoad || !(flags & 8 /* isConstructingInstance */) || oldVal === void 0) && didValueChange) {\n    hostRef.$instanceValues$.set(propName, newVal);\n    if (BUILD13.isDev) {\n      if (hostRef.$flags$ & 1024 /* devOnRender */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during rendering. This can potentially lead to infinite-loops and other bugs.`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      } else if (hostRef.$flags$ & 2048 /* devOnDidLoad */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during \"componentDidLoad()\", this triggers extra re-renders, try to setup on \"componentWillLoad()\"`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      }\n    }\n    if (!BUILD13.lazyLoad || instance) {\n      if (BUILD13.watchCallback && cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n        const watchMethods = cmpMeta.$watchers$[propName];\n        if (watchMethods) {\n          watchMethods.map((watchMethodName) => {\n            try {\n              instance[watchMethodName](newVal, oldVal, propName);\n            } catch (e) {\n              consoleError(e, elm);\n            }\n          });\n        }\n      }\n      if (BUILD13.updatable && (flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n        if (BUILD13.cmpShouldUpdate && instance.componentShouldUpdate) {\n          if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {\n            return;\n          }\n        }\n        scheduleUpdate(hostRef, false);\n      }\n    }\n  }\n};\n\n// src/runtime/proxy-component.ts\nvar proxyComponent = (Cstr, cmpMeta, flags) => {\n  var _a;\n  const prototype = Cstr.prototype;\n  if (BUILD14.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */ && flags & 1 /* isElementConstructor */) {\n    FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS.forEach(\n      (cbName) => Object.defineProperty(prototype, cbName, {\n        value(...args) {\n          const hostRef = getHostRef(this);\n          const elm = BUILD14.lazyLoad ? hostRef.$hostElement$ : this;\n          const instance = BUILD14.lazyLoad ? hostRef.$lazyInstance$ : elm;\n          if (!instance) {\n            hostRef.$onReadyPromise$.then((instance2) => {\n              const cb = instance2[cbName];\n              typeof cb === \"function\" && cb.call(instance2, ...args);\n            });\n          } else {\n            const cb = instance[cbName];\n            typeof cb === \"function\" && cb.call(instance, ...args);\n          }\n        }\n      })\n    );\n  }\n  if (BUILD14.member && cmpMeta.$members$) {\n    if (BUILD14.watchCallback && Cstr.watchers) {\n      cmpMeta.$watchers$ = Cstr.watchers;\n    }\n    const members = Object.entries(cmpMeta.$members$);\n    members.map(([memberName, [memberFlags]]) => {\n      if ((BUILD14.prop || BUILD14.state) && (memberFlags & 31 /* Prop */ || (!BUILD14.lazyLoad || flags & 2 /* proxyState */) && memberFlags & 32 /* State */)) {\n        Object.defineProperty(prototype, memberName, {\n          get() {\n            return getValue(this, memberName);\n          },\n          set(newValue) {\n            if (BUILD14.isDev) {\n              const ref = getHostRef(this);\n              if (\n                // we are proxying the instance (not element)\n                (flags & 1 /* isElementConstructor */) === 0 && // the element is not constructing\n                (ref && ref.$flags$ & 8 /* isConstructingInstance */) === 0 && // the member is a prop\n                (memberFlags & 31 /* Prop */) !== 0 && // the member is not mutable\n                (memberFlags & 1024 /* Mutable */) === 0\n              ) {\n                consoleDevWarn(\n                  `@Prop() \"${memberName}\" on <${cmpMeta.$tagName$}> is immutable but was modified from within the component.\nMore information: https://stenciljs.com/docs/properties#prop-mutability`\n                );\n              }\n            }\n            setValue(this, memberName, newValue, cmpMeta);\n          },\n          configurable: true,\n          enumerable: true\n        });\n      } else if (BUILD14.lazyLoad && BUILD14.method && flags & 1 /* isElementConstructor */ && memberFlags & 64 /* Method */) {\n        Object.defineProperty(prototype, memberName, {\n          value(...args) {\n            var _a2;\n            const ref = getHostRef(this);\n            return (_a2 = ref == null ? void 0 : ref.$onInstancePromise$) == null ? void 0 : _a2.then(() => {\n              var _a3;\n              return (_a3 = ref.$lazyInstance$) == null ? void 0 : _a3[memberName](...args);\n            });\n          }\n        });\n      }\n    });\n    if (BUILD14.observeAttribute && (!BUILD14.lazyLoad || flags & 1 /* isElementConstructor */)) {\n      const attrNameToPropName = /* @__PURE__ */ new Map();\n      prototype.attributeChangedCallback = function(attrName, oldValue, newValue) {\n        plt.jmp(() => {\n          var _a2;\n          const propName = attrNameToPropName.get(attrName);\n          if (this.hasOwnProperty(propName)) {\n            newValue = this[propName];\n            delete this[propName];\n          } else if (prototype.hasOwnProperty(propName) && typeof this[propName] === \"number\" && this[propName] == newValue) {\n            return;\n          } else if (propName == null) {\n            const hostRef = getHostRef(this);\n            const flags2 = hostRef == null ? void 0 : hostRef.$flags$;\n            if (flags2 && !(flags2 & 8 /* isConstructingInstance */) && flags2 & 128 /* isWatchReady */ && newValue !== oldValue) {\n              const elm = BUILD14.lazyLoad ? hostRef.$hostElement$ : this;\n              const instance = BUILD14.lazyLoad ? hostRef.$lazyInstance$ : elm;\n              const entry = (_a2 = cmpMeta.$watchers$) == null ? void 0 : _a2[attrName];\n              entry == null ? void 0 : entry.forEach((callbackName) => {\n                if (instance[callbackName] != null) {\n                  instance[callbackName].call(instance, newValue, oldValue, attrName);\n                }\n              });\n            }\n            return;\n          }\n          this[propName] = newValue === null && typeof this[propName] === \"boolean\" ? false : newValue;\n        });\n      };\n      Cstr.observedAttributes = Array.from(\n        /* @__PURE__ */ new Set([\n          ...Object.keys((_a = cmpMeta.$watchers$) != null ? _a : {}),\n          ...members.filter(([_, m]) => m[0] & 15 /* HasAttribute */).map(([propName, m]) => {\n            var _a2;\n            const attrName = m[1] || propName;\n            attrNameToPropName.set(attrName, propName);\n            if (BUILD14.reflect && m[0] & 512 /* ReflectAttr */) {\n              (_a2 = cmpMeta.$attrsToReflect$) == null ? void 0 : _a2.push([propName, attrName]);\n            }\n            return attrName;\n          })\n        ])\n      );\n    }\n  }\n  return Cstr;\n};\n\n// src/runtime/initialize-component.ts\nvar initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {\n  let Cstr;\n  if ((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n    hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n    const bundleId = cmpMeta.$lazyBundleId$;\n    if ((BUILD15.lazyLoad || BUILD15.hydrateClientSide) && bundleId) {\n      const CstrImport = loadModule(cmpMeta, hostRef, hmrVersionId);\n      if (CstrImport && \"then\" in CstrImport) {\n        const endLoad = uniqueTime(\n          `st:load:${cmpMeta.$tagName$}:${hostRef.$modeName$}`,\n          `[Stencil] Load module for <${cmpMeta.$tagName$}>`\n        );\n        Cstr = await CstrImport;\n        endLoad();\n      } else {\n        Cstr = CstrImport;\n      }\n      if (!Cstr) {\n        throw new Error(`Constructor for \"${cmpMeta.$tagName$}#${hostRef.$modeName$}\" was not found`);\n      }\n      if (BUILD15.member && !Cstr.isProxied) {\n        if (BUILD15.watchCallback) {\n          cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n        Cstr.isProxied = true;\n      }\n      const endNewInstance = createTime(\"createInstance\", cmpMeta.$tagName$);\n      if (BUILD15.member) {\n        hostRef.$flags$ |= 8 /* isConstructingInstance */;\n      }\n      try {\n        new Cstr(hostRef);\n      } catch (e) {\n        consoleError(e);\n      }\n      if (BUILD15.member) {\n        hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n      }\n      if (BUILD15.watchCallback) {\n        hostRef.$flags$ |= 128 /* isWatchReady */;\n      }\n      endNewInstance();\n      fireConnectedCallback(hostRef.$lazyInstance$);\n    } else {\n      Cstr = elm.constructor;\n      const cmpTag = elm.localName;\n      customElements.whenDefined(cmpTag).then(() => hostRef.$flags$ |= 128 /* isWatchReady */);\n    }\n    if (BUILD15.style && Cstr && Cstr.style) {\n      let style = Cstr.style;\n      if (BUILD15.mode && typeof style !== \"string\") {\n        hostRef.$modeName$ = computeMode(elm);\n        if (hostRef.$modeName$) {\n          style = style[hostRef.$modeName$];\n        }\n        if (BUILD15.hydrateServerSide && hostRef.$modeName$) {\n          elm.setAttribute(\"s-mode\", hostRef.$modeName$);\n        }\n      }\n      const scopeId2 = getScopeId(cmpMeta, hostRef.$modeName$);\n      if (!styles.has(scopeId2)) {\n        const endRegisterStyles = createTime(\"registerStyles\", cmpMeta.$tagName$);\n        if (!BUILD15.hydrateServerSide && BUILD15.shadowDom && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        BUILD15.shadowDomShim && cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n          style = await import(\"./shadow-css.js\").then((m) => m.scopeCss(style, scopeId2, false));\n        }\n        registerStyle(scopeId2, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n        endRegisterStyles();\n      }\n    }\n  }\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  const schedule = () => scheduleUpdate(hostRef, true);\n  if (BUILD15.asyncLoading && ancestorComponent && ancestorComponent[\"s-rc\"]) {\n    ancestorComponent[\"s-rc\"].push(schedule);\n  } else {\n    schedule();\n  }\n};\nvar fireConnectedCallback = (instance) => {\n  if (BUILD15.lazyLoad && BUILD15.connectedCallback) {\n    safeCall(instance, \"connectedCallback\");\n  }\n};\n\n// src/runtime/connected-callback.ts\nvar connectedCallback = (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    const cmpMeta = hostRef.$cmpMeta$;\n    const endConnected = createTime(\"connectedCallback\", cmpMeta.$tagName$);\n    if (BUILD16.hostListenerTargetParent) {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, true);\n    }\n    if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n      hostRef.$flags$ |= 1 /* hasConnected */;\n      let hostId;\n      if (BUILD16.hydrateClientSide) {\n        hostId = elm.getAttribute(HYDRATE_ID);\n        if (hostId) {\n          if (BUILD16.shadowDom && supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            const scopeId2 = BUILD16.mode ? addStyle(elm.shadowRoot, cmpMeta, elm.getAttribute(\"s-mode\")) : addStyle(elm.shadowRoot, cmpMeta);\n            elm.classList.remove(scopeId2 + \"-h\", scopeId2 + \"-s\");\n          }\n          initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);\n        }\n      }\n      if (BUILD16.slotRelocation && !hostId) {\n        if (BUILD16.hydrateServerSide || (BUILD16.slot || BUILD16.shadowDom) && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        cmpMeta.$flags$ & (4 /* hasSlotRelocation */ | 8 /* needsShadowDomShim */)) {\n          setContentReference(elm);\n        }\n      }\n      if (BUILD16.asyncLoading) {\n        let ancestorComponent = elm;\n        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {\n          if (BUILD16.hydrateClientSide && ancestorComponent.nodeType === 1 /* ElementNode */ && ancestorComponent.hasAttribute(\"s-id\") && ancestorComponent[\"s-p\"] || ancestorComponent[\"s-p\"]) {\n            attachToAncestor(hostRef, hostRef.$ancestorComponent$ = ancestorComponent);\n            break;\n          }\n        }\n      }\n      if (BUILD16.prop && !BUILD16.hydrateServerSide && cmpMeta.$members$) {\n        Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n          if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n            const value = elm[memberName];\n            delete elm[memberName];\n            elm[memberName] = value;\n          }\n        });\n      }\n      if (BUILD16.initializeNextTick) {\n        nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n      } else {\n        initializeComponent(elm, hostRef, cmpMeta);\n      }\n    } else {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);\n      if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n        fireConnectedCallback(hostRef.$lazyInstance$);\n      } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n        hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$));\n      }\n    }\n    endConnected();\n  }\n};\nvar setContentReference = (elm) => {\n  const contentRefElm = elm[\"s-cr\"] = doc.createComment(\n    BUILD16.isDebug ? `content-ref (host=${elm.localName})` : \"\"\n  );\n  contentRefElm[\"s-cn\"] = true;\n  insertBefore(elm, contentRefElm, elm.firstChild);\n};\n\n// src/runtime/disconnected-callback.ts\nimport { BUILD as BUILD17 } from \"@stencil/core/internal/app-data\";\nvar disconnectInstance = (instance) => {\n  if (BUILD17.lazyLoad && BUILD17.disconnectedCallback) {\n    safeCall(instance, \"disconnectedCallback\");\n  }\n  if (BUILD17.cmpDidUnload) {\n    safeCall(instance, \"componentDidUnload\");\n  }\n};\nvar disconnectedCallback = async (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    if (BUILD17.hostListener) {\n      if (hostRef.$rmListeners$) {\n        hostRef.$rmListeners$.map((rmListener) => rmListener());\n        hostRef.$rmListeners$ = void 0;\n      }\n    }\n    if (!BUILD17.lazyLoad) {\n      disconnectInstance(elm);\n    } else if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n      disconnectInstance(hostRef.$lazyInstance$);\n    } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n      hostRef.$onReadyPromise$.then(() => disconnectInstance(hostRef.$lazyInstance$));\n    }\n  }\n};\n\n// src/runtime/dom-extras.ts\nimport { BUILD as BUILD18 } from \"@stencil/core/internal/app-data\";\nvar patchPseudoShadowDom = (hostElementPrototype, descriptorPrototype) => {\n  patchCloneNode(hostElementPrototype);\n  patchSlotAppendChild(hostElementPrototype);\n  patchSlotAppend(hostElementPrototype);\n  patchSlotPrepend(hostElementPrototype);\n  patchSlotInsertAdjacentElement(hostElementPrototype);\n  patchSlotInsertAdjacentHTML(hostElementPrototype);\n  patchSlotInsertAdjacentText(hostElementPrototype);\n  patchTextContent(hostElementPrototype);\n  patchChildSlotNodes(hostElementPrototype, descriptorPrototype);\n  patchSlotRemoveChild(hostElementPrototype);\n};\nvar patchCloneNode = (HostElementPrototype) => {\n  const orgCloneNode = HostElementPrototype.cloneNode;\n  HostElementPrototype.cloneNode = function(deep) {\n    const srcNode = this;\n    const isShadowDom = BUILD18.shadowDom ? srcNode.shadowRoot && supportsShadow : false;\n    const clonedNode = orgCloneNode.call(srcNode, isShadowDom ? deep : false);\n    if (BUILD18.slot && !isShadowDom && deep) {\n      let i2 = 0;\n      let slotted, nonStencilNode;\n      const stencilPrivates = [\n        \"s-id\",\n        \"s-cr\",\n        \"s-lr\",\n        \"s-rc\",\n        \"s-sc\",\n        \"s-p\",\n        \"s-cn\",\n        \"s-sr\",\n        \"s-sn\",\n        \"s-hn\",\n        \"s-ol\",\n        \"s-nr\",\n        \"s-si\",\n        \"s-rf\",\n        \"s-scs\"\n      ];\n      for (; i2 < srcNode.childNodes.length; i2++) {\n        slotted = srcNode.childNodes[i2][\"s-nr\"];\n        nonStencilNode = stencilPrivates.every((privateField) => !srcNode.childNodes[i2][privateField]);\n        if (slotted) {\n          if (BUILD18.appendChildSlotFix && clonedNode.__appendChild) {\n            clonedNode.__appendChild(slotted.cloneNode(true));\n          } else {\n            clonedNode.appendChild(slotted.cloneNode(true));\n          }\n        }\n        if (nonStencilNode) {\n          clonedNode.appendChild(srcNode.childNodes[i2].cloneNode(true));\n        }\n      }\n    }\n    return clonedNode;\n  };\n};\nvar patchSlotAppendChild = (HostElementPrototype) => {\n  HostElementPrototype.__appendChild = HostElementPrototype.appendChild;\n  HostElementPrototype.appendChild = function(newChild) {\n    const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n    const slotNode = getHostSlotNode(this.childNodes, slotName, this.tagName);\n    if (slotNode) {\n      const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n      const appendAfter = slotChildNodes[slotChildNodes.length - 1];\n      const insertedNode = insertBefore(appendAfter.parentNode, newChild, appendAfter.nextSibling);\n      updateFallbackSlotVisibility(this);\n      return insertedNode;\n    }\n    return this.__appendChild(newChild);\n  };\n};\nvar patchSlotRemoveChild = (ElementPrototype) => {\n  ElementPrototype.__removeChild = ElementPrototype.removeChild;\n  ElementPrototype.removeChild = function(toRemove) {\n    if (toRemove && typeof toRemove[\"s-sn\"] !== \"undefined\") {\n      const slotNode = getHostSlotNode(this.childNodes, toRemove[\"s-sn\"], this.tagName);\n      if (slotNode) {\n        const slotChildNodes = getHostSlotChildNodes(slotNode, toRemove[\"s-sn\"]);\n        const existingNode = slotChildNodes.find((n) => n === toRemove);\n        if (existingNode) {\n          existingNode.remove();\n          updateFallbackSlotVisibility(this);\n          return;\n        }\n      }\n    }\n    return this.__removeChild(toRemove);\n  };\n};\nvar patchSlotPrepend = (HostElementPrototype) => {\n  const originalPrepend = HostElementPrototype.prepend;\n  HostElementPrototype.prepend = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n      const slotNode = getHostSlotNode(this.childNodes, slotName, this.tagName);\n      if (slotNode) {\n        const slotPlaceholder = document.createTextNode(\"\");\n        slotPlaceholder[\"s-nr\"] = newChild;\n        slotNode[\"s-cr\"].parentNode.__appendChild(slotPlaceholder);\n        newChild[\"s-ol\"] = slotPlaceholder;\n        const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n        const appendAfter = slotChildNodes[0];\n        return insertBefore(appendAfter.parentNode, newChild, appendAfter.nextSibling);\n      }\n      if (newChild.nodeType === 1 && !!newChild.getAttribute(\"slot\")) {\n        newChild.hidden = true;\n      }\n      return originalPrepend.call(this, newChild);\n    });\n  };\n};\nvar patchSlotAppend = (HostElementPrototype) => {\n  HostElementPrototype.append = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      this.appendChild(newChild);\n    });\n  };\n};\nvar patchSlotInsertAdjacentHTML = (HostElementPrototype) => {\n  const originalInsertAdjacentHtml = HostElementPrototype.insertAdjacentHTML;\n  HostElementPrototype.insertAdjacentHTML = function(position, text) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentHtml.call(this, position, text);\n    }\n    const container = this.ownerDocument.createElement(\"_\");\n    let node;\n    container.innerHTML = text;\n    if (position === \"afterbegin\") {\n      while (node = container.firstChild) {\n        this.prepend(node);\n      }\n    } else if (position === \"beforeend\") {\n      while (node = container.firstChild) {\n        this.append(node);\n      }\n    }\n  };\n};\nvar patchSlotInsertAdjacentText = (HostElementPrototype) => {\n  HostElementPrototype.insertAdjacentText = function(position, text) {\n    this.insertAdjacentHTML(position, text);\n  };\n};\nvar patchSlotInsertAdjacentElement = (HostElementPrototype) => {\n  const originalInsertAdjacentElement = HostElementPrototype.insertAdjacentElement;\n  HostElementPrototype.insertAdjacentElement = function(position, element) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentElement.call(this, position, element);\n    }\n    if (position === \"afterbegin\") {\n      this.prepend(element);\n      return element;\n    } else if (position === \"beforeend\") {\n      this.append(element);\n      return element;\n    }\n    return element;\n  };\n};\nvar patchTextContent = (hostElementPrototype) => {\n  const descriptor = Object.getOwnPropertyDescriptor(Node.prototype, \"textContent\");\n  Object.defineProperty(hostElementPrototype, \"__textContent\", descriptor);\n  if (BUILD18.experimentalScopedSlotChanges) {\n    Object.defineProperty(hostElementPrototype, \"textContent\", {\n      // To mimic shadow root behavior, we need to return the text content of all\n      // nodes in a slot reference node\n      get() {\n        const slotRefNodes = getAllChildSlotNodes(this.childNodes);\n        const textContent = slotRefNodes.map((node) => {\n          var _a, _b;\n          const text = [];\n          let slotContent = node.nextSibling;\n          while (slotContent && slotContent[\"s-sn\"] === node[\"s-sn\"]) {\n            if (slotContent.nodeType === 3 /* TEXT_NODE */ || slotContent.nodeType === 1 /* ELEMENT_NODE */) {\n              text.push((_b = (_a = slotContent.textContent) == null ? void 0 : _a.trim()) != null ? _b : \"\");\n            }\n            slotContent = slotContent.nextSibling;\n          }\n          return text.filter((ref) => ref !== \"\").join(\" \");\n        }).filter((text) => text !== \"\").join(\" \");\n        return \" \" + textContent + \" \";\n      },\n      // To mimic shadow root behavior, we need to overwrite all nodes in a slot\n      // reference node. If a default slot reference node exists, the text content will be\n      // placed there. Otherwise, the new text node will be hidden\n      set(value) {\n        const slotRefNodes = getAllChildSlotNodes(this.childNodes);\n        slotRefNodes.forEach((node) => {\n          let slotContent = node.nextSibling;\n          while (slotContent && slotContent[\"s-sn\"] === node[\"s-sn\"]) {\n            const tmp = slotContent;\n            slotContent = slotContent.nextSibling;\n            tmp.remove();\n          }\n          if (node[\"s-sn\"] === \"\") {\n            const textNode = this.ownerDocument.createTextNode(value);\n            textNode[\"s-sn\"] = \"\";\n            insertBefore(node.parentElement, textNode, node.nextSibling);\n          } else {\n            node.remove();\n          }\n        });\n      }\n    });\n  } else {\n    Object.defineProperty(hostElementPrototype, \"textContent\", {\n      get() {\n        var _a;\n        const slotNode = getHostSlotNode(this.childNodes, \"\", this.tagName);\n        if (((_a = slotNode == null ? void 0 : slotNode.nextSibling) == null ? void 0 : _a.nodeType) === 3 /* TEXT_NODE */) {\n          return slotNode.nextSibling.textContent;\n        } else if (slotNode) {\n          return slotNode.textContent;\n        } else {\n          return this.__textContent;\n        }\n      },\n      set(value) {\n        var _a;\n        const slotNode = getHostSlotNode(this.childNodes, \"\", this.tagName);\n        if (((_a = slotNode == null ? void 0 : slotNode.nextSibling) == null ? void 0 : _a.nodeType) === 3 /* TEXT_NODE */) {\n          slotNode.nextSibling.textContent = value;\n        } else if (slotNode) {\n          slotNode.textContent = value;\n        } else {\n          this.__textContent = value;\n          const contentRefElm = this[\"s-cr\"];\n          if (contentRefElm) {\n            insertBefore(this, contentRefElm, this.firstChild);\n          }\n        }\n      }\n    });\n  }\n};\nvar patchChildSlotNodes = (elm, cmpMeta) => {\n  class FakeNodeList extends Array {\n    item(n) {\n      return this[n];\n    }\n  }\n  if (cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n    const childNodesFn = elm.__lookupGetter__(\"childNodes\");\n    Object.defineProperty(elm, \"children\", {\n      get() {\n        return this.childNodes.map((n) => n.nodeType === 1);\n      }\n    });\n    Object.defineProperty(elm, \"childElementCount\", {\n      get() {\n        return elm.children.length;\n      }\n    });\n    Object.defineProperty(elm, \"childNodes\", {\n      get() {\n        const childNodes = childNodesFn.call(this);\n        if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0 && getHostRef(this).$flags$ & 2 /* hasRendered */) {\n          const result = new FakeNodeList();\n          for (let i2 = 0; i2 < childNodes.length; i2++) {\n            const slot = childNodes[i2][\"s-nr\"];\n            if (slot) {\n              result.push(slot);\n            }\n          }\n          return result;\n        }\n        return FakeNodeList.from(childNodes);\n      }\n    });\n  }\n};\nvar getAllChildSlotNodes = (childNodes) => {\n  const slotRefNodes = [];\n  for (const childNode of Array.from(childNodes)) {\n    if (childNode[\"s-sr\"]) {\n      slotRefNodes.push(childNode);\n    }\n    slotRefNodes.push(...getAllChildSlotNodes(childNode.childNodes));\n  }\n  return slotRefNodes;\n};\nvar getSlotName = (node) => node[\"s-sn\"] || node.nodeType === 1 && node.getAttribute(\"slot\") || \"\";\nvar getHostSlotNode = (childNodes, slotName, hostName) => {\n  let i2 = 0;\n  let childNode;\n  for (; i2 < childNodes.length; i2++) {\n    childNode = childNodes[i2];\n    if (childNode[\"s-sr\"] && childNode[\"s-sn\"] === slotName && childNode[\"s-hn\"] === hostName) {\n      return childNode;\n    }\n    childNode = getHostSlotNode(childNode.childNodes, slotName, hostName);\n    if (childNode) {\n      return childNode;\n    }\n  }\n  return null;\n};\nvar getHostSlotChildNodes = (n, slotName) => {\n  const childNodes = [n];\n  while ((n = n.nextSibling) && n[\"s-sn\"] === slotName) {\n    childNodes.push(n);\n  }\n  return childNodes;\n};\n\n// src/runtime/bootstrap-custom-element.ts\nvar defineCustomElement = (Cstr, compactMeta) => {\n  customElements.define(compactMeta[1], proxyCustomElement(Cstr, compactMeta));\n};\nvar proxyCustomElement = (Cstr, compactMeta) => {\n  const cmpMeta = {\n    $flags$: compactMeta[0],\n    $tagName$: compactMeta[1]\n  };\n  if (BUILD19.member) {\n    cmpMeta.$members$ = compactMeta[2];\n  }\n  if (BUILD19.hostListener) {\n    cmpMeta.$listeners$ = compactMeta[3];\n  }\n  if (BUILD19.watchCallback) {\n    cmpMeta.$watchers$ = Cstr.$watchers$;\n  }\n  if (BUILD19.reflect) {\n    cmpMeta.$attrsToReflect$ = [];\n  }\n  if (BUILD19.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n    cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n  }\n  if (BUILD19.experimentalSlotFixes) {\n    if (BUILD19.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchPseudoShadowDom(Cstr.prototype, cmpMeta);\n    }\n  } else {\n    if (BUILD19.slotChildNodesFix) {\n      patchChildSlotNodes(Cstr.prototype, cmpMeta);\n    }\n    if (BUILD19.cloneNodeFix) {\n      patchCloneNode(Cstr.prototype);\n    }\n    if (BUILD19.appendChildSlotFix) {\n      patchSlotAppendChild(Cstr.prototype);\n    }\n    if (BUILD19.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchTextContent(Cstr.prototype);\n    }\n  }\n  const originalConnectedCallback = Cstr.prototype.connectedCallback;\n  const originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;\n  Object.assign(Cstr.prototype, {\n    __registerHost() {\n      registerHost(this, cmpMeta);\n    },\n    connectedCallback() {\n      connectedCallback(this);\n      if (BUILD19.connectedCallback && originalConnectedCallback) {\n        originalConnectedCallback.call(this);\n      }\n    },\n    disconnectedCallback() {\n      disconnectedCallback(this);\n      if (BUILD19.disconnectedCallback && originalDisconnectedCallback) {\n        originalDisconnectedCallback.call(this);\n      }\n    },\n    __attachShadow() {\n      if (supportsShadow) {\n        if (BUILD19.shadowDelegatesFocus) {\n          this.attachShadow({\n            mode: \"open\",\n            delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n          });\n        } else {\n          this.attachShadow({ mode: \"open\" });\n        }\n      } else {\n        this.shadowRoot = this;\n      }\n    }\n  });\n  Cstr.is = cmpMeta.$tagName$;\n  return proxyComponent(Cstr, cmpMeta, 1 /* isElementConstructor */ | 2 /* proxyState */);\n};\nvar forceModeUpdate = (elm) => {\n  if (BUILD19.style && BUILD19.mode && !BUILD19.lazyLoad) {\n    const mode = computeMode(elm);\n    const hostRef = getHostRef(elm);\n    if (hostRef.$modeName$ !== mode) {\n      const cmpMeta = hostRef.$cmpMeta$;\n      const oldScopeId = elm[\"s-sc\"];\n      const scopeId2 = getScopeId(cmpMeta, mode);\n      const style = elm.constructor.style[mode];\n      const flags = cmpMeta.$flags$;\n      if (style) {\n        if (!styles.has(scopeId2)) {\n          registerStyle(scopeId2, style, !!(flags & 1 /* shadowDomEncapsulation */));\n        }\n        hostRef.$modeName$ = mode;\n        elm.classList.remove(oldScopeId + \"-h\", oldScopeId + \"-s\");\n        attachStyles(hostRef);\n        forceUpdate(elm);\n      }\n    }\n  }\n};\n\n// src/runtime/bootstrap-lazy.ts\nimport { BUILD as BUILD20 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/hmr-component.ts\nvar hmrStart = (hostElement, cmpMeta, hmrVersionId) => {\n  const hostRef = getHostRef(hostElement);\n  hostRef.$flags$ = 1 /* hasConnected */;\n  initializeComponent(hostElement, hostRef, cmpMeta, hmrVersionId);\n};\n\n// src/runtime/bootstrap-lazy.ts\nvar bootstrapLazy = (lazyBundles, options = {}) => {\n  var _a;\n  if (BUILD20.profile && performance.mark) {\n    performance.mark(\"st:app:start\");\n  }\n  installDevTools();\n  const endBootstrap = createTime(\"bootstrapLazy\");\n  const cmpTags = [];\n  const exclude = options.exclude || [];\n  const customElements2 = win.customElements;\n  const head = doc.head;\n  const metaCharset = /* @__PURE__ */ head.querySelector(\"meta[charset]\");\n  const dataStyles = /* @__PURE__ */ doc.createElement(\"style\");\n  const deferredConnectedCallbacks = [];\n  const styles2 = /* @__PURE__ */ doc.querySelectorAll(`[${HYDRATED_STYLE_ID}]`);\n  let appLoadFallback;\n  let isBootstrapping = true;\n  let i2 = 0;\n  Object.assign(plt, options);\n  plt.$resourcesUrl$ = new URL(options.resourcesUrl || \"./\", doc.baseURI).href;\n  if (BUILD20.asyncQueue) {\n    if (options.syncQueue) {\n      plt.$flags$ |= 4 /* queueSync */;\n    }\n  }\n  if (BUILD20.hydrateClientSide) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  if (BUILD20.hydrateClientSide && BUILD20.shadowDom) {\n    for (; i2 < styles2.length; i2++) {\n      registerStyle(styles2[i2].getAttribute(HYDRATED_STYLE_ID), convertScopedToShadow(styles2[i2].innerHTML), true);\n    }\n  }\n  let hasSlotRelocation = false;\n  lazyBundles.map((lazyBundle) => {\n    lazyBundle[1].map((compactMeta) => {\n      var _a2;\n      const cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n        $members$: compactMeta[2],\n        $listeners$: compactMeta[3]\n      };\n      if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n        hasSlotRelocation = true;\n      }\n      if (BUILD20.member) {\n        cmpMeta.$members$ = compactMeta[2];\n      }\n      if (BUILD20.hostListener) {\n        cmpMeta.$listeners$ = compactMeta[3];\n      }\n      if (BUILD20.reflect) {\n        cmpMeta.$attrsToReflect$ = [];\n      }\n      if (BUILD20.watchCallback) {\n        cmpMeta.$watchers$ = (_a2 = compactMeta[4]) != null ? _a2 : {};\n      }\n      if (BUILD20.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n        cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n      }\n      const tagName = BUILD20.transformTagName && options.transformTagName ? options.transformTagName(cmpMeta.$tagName$) : cmpMeta.$tagName$;\n      const HostElement = class extends HTMLElement {\n        // StencilLazyHost\n        constructor(self) {\n          super(self);\n          self = this;\n          registerHost(self, cmpMeta);\n          if (BUILD20.shadowDom && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            if (supportsShadow) {\n              if (BUILD20.shadowDelegatesFocus) {\n                self.attachShadow({\n                  mode: \"open\",\n                  delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n                });\n              } else {\n                self.attachShadow({ mode: \"open\" });\n              }\n            } else if (!BUILD20.hydrateServerSide && !(\"shadowRoot\" in self)) {\n              self.shadowRoot = self;\n            }\n          }\n        }\n        connectedCallback() {\n          if (appLoadFallback) {\n            clearTimeout(appLoadFallback);\n            appLoadFallback = null;\n          }\n          if (isBootstrapping) {\n            deferredConnectedCallbacks.push(this);\n          } else {\n            plt.jmp(() => connectedCallback(this));\n          }\n        }\n        disconnectedCallback() {\n          plt.jmp(() => disconnectedCallback(this));\n        }\n        componentOnReady() {\n          return getHostRef(this).$onReadyPromise$;\n        }\n      };\n      if (BUILD20.experimentalSlotFixes) {\n        if (BUILD20.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchPseudoShadowDom(HostElement.prototype, cmpMeta);\n        }\n      } else {\n        if (BUILD20.slotChildNodesFix) {\n          patchChildSlotNodes(HostElement.prototype, cmpMeta);\n        }\n        if (BUILD20.cloneNodeFix) {\n          patchCloneNode(HostElement.prototype);\n        }\n        if (BUILD20.appendChildSlotFix) {\n          patchSlotAppendChild(HostElement.prototype);\n        }\n        if (BUILD20.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchTextContent(HostElement.prototype);\n        }\n      }\n      if (BUILD20.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */) {\n        HostElement.formAssociated = true;\n      }\n      if (BUILD20.hotModuleReplacement) {\n        HostElement.prototype[\"s-hmr\"] = function(hmrVersionId) {\n          hmrStart(this, cmpMeta, hmrVersionId);\n        };\n      }\n      cmpMeta.$lazyBundleId$ = lazyBundle[0];\n      if (!exclude.includes(tagName) && !customElements2.get(tagName)) {\n        cmpTags.push(tagName);\n        customElements2.define(\n          tagName,\n          proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */)\n        );\n      }\n    });\n  });\n  if (cmpTags.length > 0) {\n    if (hasSlotRelocation) {\n      dataStyles.textContent += SLOT_FB_CSS;\n    }\n    if (BUILD20.invisiblePrehydration && (BUILD20.hydratedClass || BUILD20.hydratedAttribute)) {\n      dataStyles.textContent += cmpTags + HYDRATED_CSS;\n    }\n    if (dataStyles.innerHTML.length) {\n      dataStyles.setAttribute(\"data-styles\", \"\");\n      const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n      if (nonce != null) {\n        dataStyles.setAttribute(\"nonce\", nonce);\n      }\n      head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n  }\n  isBootstrapping = false;\n  if (deferredConnectedCallbacks.length) {\n    deferredConnectedCallbacks.map((host) => host.connectedCallback());\n  } else {\n    if (BUILD20.profile) {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30, \"timeout\"));\n    } else {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30));\n    }\n  }\n  endBootstrap();\n};\n\n// src/runtime/fragment.ts\nvar Fragment = (_, children) => children;\n\n// src/runtime/host-listener.ts\nimport { BUILD as BUILD21 } from \"@stencil/core/internal/app-data\";\nvar addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n  if (BUILD21.hostListener && listeners) {\n    if (BUILD21.hostListenerTargetParent) {\n      if (attachParentListeners) {\n        listeners = listeners.filter(([flags]) => flags & 32 /* TargetParent */);\n      } else {\n        listeners = listeners.filter(([flags]) => !(flags & 32 /* TargetParent */));\n      }\n    }\n    listeners.map(([flags, name, method]) => {\n      const target = BUILD21.hostListenerTarget ? getHostListenerTarget(elm, flags) : elm;\n      const handler = hostListenerProxy(hostRef, method);\n      const opts = hostListenerOpts(flags);\n      plt.ael(target, name, handler, opts);\n      (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n    });\n  }\n};\nvar hostListenerProxy = (hostRef, methodName) => (ev) => {\n  var _a;\n  try {\n    if (BUILD21.lazyLoad) {\n      if (hostRef.$flags$ & 256 /* isListenReady */) {\n        (_a = hostRef.$lazyInstance$) == null ? void 0 : _a[methodName](ev);\n      } else {\n        (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n      }\n    } else {\n      hostRef.$hostElement$[methodName](ev);\n    }\n  } catch (e) {\n    consoleError(e);\n  }\n};\nvar getHostListenerTarget = (elm, flags) => {\n  if (BUILD21.hostListenerTargetDocument && flags & 4 /* TargetDocument */) return doc;\n  if (BUILD21.hostListenerTargetWindow && flags & 8 /* TargetWindow */) return win;\n  if (BUILD21.hostListenerTargetBody && flags & 16 /* TargetBody */) return doc.body;\n  if (BUILD21.hostListenerTargetParent && flags & 32 /* TargetParent */ && elm.parentElement)\n    return elm.parentElement;\n  return elm;\n};\nvar hostListenerOpts = (flags) => supportsListenerOptions ? {\n  passive: (flags & 1 /* Passive */) !== 0,\n  capture: (flags & 2 /* Capture */) !== 0\n} : (flags & 2 /* Capture */) !== 0;\n\n// src/runtime/nonce.ts\nvar setNonce = (nonce) => plt.$nonce$ = nonce;\n\n// src/runtime/platform-options.ts\nvar setPlatformOptions = (opts) => Object.assign(plt, opts);\n\n// src/runtime/vdom/vdom-annotations.ts\nvar insertVdomAnnotations = (doc2, staticComponents) => {\n  if (doc2 != null) {\n    const docData = {\n      hostIds: 0,\n      rootLevelIds: 0,\n      staticComponents: new Set(staticComponents)\n    };\n    const orgLocationNodes = [];\n    parseVNodeAnnotations(doc2, doc2.body, docData, orgLocationNodes);\n    orgLocationNodes.forEach((orgLocationNode) => {\n      var _a;\n      if (orgLocationNode != null && orgLocationNode[\"s-nr\"]) {\n        const nodeRef = orgLocationNode[\"s-nr\"];\n        let hostId = nodeRef[\"s-host-id\"];\n        let nodeId = nodeRef[\"s-node-id\"];\n        let childId = `${hostId}.${nodeId}`;\n        if (hostId == null) {\n          hostId = 0;\n          docData.rootLevelIds++;\n          nodeId = docData.rootLevelIds;\n          childId = `${hostId}.${nodeId}`;\n          if (nodeRef.nodeType === 1 /* ElementNode */) {\n            nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);\n          } else if (nodeRef.nodeType === 3 /* TextNode */) {\n            if (hostId === 0) {\n              const textContent = (_a = nodeRef.nodeValue) == null ? void 0 : _a.trim();\n              if (textContent === \"\") {\n                orgLocationNode.remove();\n                return;\n              }\n            }\n            const commentBeforeTextNode = doc2.createComment(childId);\n            commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;\n            insertBefore(nodeRef.parentNode, commentBeforeTextNode, nodeRef);\n          }\n        }\n        let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;\n        const orgLocationParentNode = orgLocationNode.parentElement;\n        if (orgLocationParentNode) {\n          if (orgLocationParentNode[\"s-en\"] === \"\") {\n            orgLocationNodeId += `.`;\n          } else if (orgLocationParentNode[\"s-en\"] === \"c\") {\n            orgLocationNodeId += `.c`;\n          }\n        }\n        orgLocationNode.nodeValue = orgLocationNodeId;\n      }\n    });\n  }\n};\nvar parseVNodeAnnotations = (doc2, node, docData, orgLocationNodes) => {\n  if (node == null) {\n    return;\n  }\n  if (node[\"s-nr\"] != null) {\n    orgLocationNodes.push(node);\n  }\n  if (node.nodeType === 1 /* ElementNode */) {\n    node.childNodes.forEach((childNode) => {\n      const hostRef = getHostRef(childNode);\n      if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {\n        const cmpData = {\n          nodeIds: 0\n        };\n        insertVNodeAnnotations(doc2, childNode, hostRef.$vnode$, docData, cmpData);\n      }\n      parseVNodeAnnotations(doc2, childNode, docData, orgLocationNodes);\n    });\n  }\n};\nvar insertVNodeAnnotations = (doc2, hostElm, vnode, docData, cmpData) => {\n  if (vnode != null) {\n    const hostId = ++docData.hostIds;\n    hostElm.setAttribute(HYDRATE_ID, hostId);\n    if (hostElm[\"s-cr\"] != null) {\n      hostElm[\"s-cr\"].nodeValue = `${CONTENT_REF_ID}.${hostId}`;\n    }\n    if (vnode.$children$ != null) {\n      const depth = 0;\n      vnode.$children$.forEach((vnodeChild, index) => {\n        insertChildVNodeAnnotations(doc2, vnodeChild, cmpData, hostId, depth, index);\n      });\n    }\n    if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute(HYDRATE_CHILD_ID)) {\n      const parent = hostElm.parentElement;\n      if (parent && parent.childNodes) {\n        const parentChildNodes = Array.from(parent.childNodes);\n        const comment = parentChildNodes.find(\n          (node) => node.nodeType === 8 /* CommentNode */ && node[\"s-sr\"]\n        );\n        if (comment) {\n          const index = parentChildNodes.indexOf(hostElm) - 1;\n          vnode.$elm$.setAttribute(\n            HYDRATE_CHILD_ID,\n            `${comment[\"s-host-id\"]}.${comment[\"s-node-id\"]}.0.${index}`\n          );\n        }\n      }\n    }\n  }\n};\nvar insertChildVNodeAnnotations = (doc2, vnodeChild, cmpData, hostId, depth, index) => {\n  const childElm = vnodeChild.$elm$;\n  if (childElm == null) {\n    return;\n  }\n  const nodeId = cmpData.nodeIds++;\n  const childId = `${hostId}.${nodeId}.${depth}.${index}`;\n  childElm[\"s-host-id\"] = hostId;\n  childElm[\"s-node-id\"] = nodeId;\n  if (childElm.nodeType === 1 /* ElementNode */) {\n    childElm.setAttribute(HYDRATE_CHILD_ID, childId);\n  } else if (childElm.nodeType === 3 /* TextNode */) {\n    const parentNode = childElm.parentNode;\n    const nodeName = parentNode == null ? void 0 : parentNode.nodeName;\n    if (nodeName !== \"STYLE\" && nodeName !== \"SCRIPT\") {\n      const textNodeId = `${TEXT_NODE_ID}.${childId}`;\n      const commentBeforeTextNode = doc2.createComment(textNodeId);\n      insertBefore(parentNode, commentBeforeTextNode, childElm);\n    }\n  } else if (childElm.nodeType === 8 /* CommentNode */) {\n    if (childElm[\"s-sr\"]) {\n      const slotName = childElm[\"s-sn\"] || \"\";\n      const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;\n      childElm.nodeValue = slotNodeId;\n    }\n  }\n  if (vnodeChild.$children$ != null) {\n    const childDepth = depth + 1;\n    vnodeChild.$children$.forEach((vnode, index2) => {\n      insertChildVNodeAnnotations(doc2, vnode, cmpData, hostId, childDepth, index2);\n    });\n  }\n};\n\n// src/client/client-host-ref.ts\nvar hostRefs = BUILD22.hotModuleReplacement ? window.__STENCIL_HOSTREFS__ || (window.__STENCIL_HOSTREFS__ = /* @__PURE__ */ new WeakMap()) : /* @__PURE__ */ new WeakMap();\nvar getHostRef = (ref) => hostRefs.get(ref);\nvar registerInstance = (lazyInstance, hostRef) => hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);\nvar registerHost = (hostElement, cmpMeta) => {\n  const hostRef = {\n    $flags$: 0,\n    $hostElement$: hostElement,\n    $cmpMeta$: cmpMeta,\n    $instanceValues$: /* @__PURE__ */ new Map()\n  };\n  if (BUILD22.isDev) {\n    hostRef.$renderCount$ = 0;\n  }\n  if (BUILD22.method && BUILD22.lazyLoad) {\n    hostRef.$onInstancePromise$ = new Promise((r) => hostRef.$onInstanceResolve$ = r);\n  }\n  if (BUILD22.asyncLoading) {\n    hostRef.$onReadyPromise$ = new Promise((r) => hostRef.$onReadyResolve$ = r);\n    hostElement[\"s-p\"] = [];\n    hostElement[\"s-rc\"] = [];\n  }\n  addHostEventListeners(hostElement, hostRef, cmpMeta.$listeners$, false);\n  return hostRefs.set(hostElement, hostRef);\n};\nvar isMemberInElement = (elm, memberName) => memberName in elm;\n\n// src/client/client-load-module.ts\nimport { BUILD as BUILD24 } from \"@stencil/core/internal/app-data\";\n\n// src/client/client-log.ts\nimport { BUILD as BUILD23 } from \"@stencil/core/internal/app-data\";\nvar customError;\nvar consoleError = (e, el) => (customError || console.error)(e, el);\nvar STENCIL_DEV_MODE = BUILD23.isTesting ? [\"STENCIL:\"] : [\n  \"%cstencil\",\n  \"color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px\"\n];\nvar consoleDevError = (...m) => console.error(...STENCIL_DEV_MODE, ...m);\nvar consoleDevWarn = (...m) => console.warn(...STENCIL_DEV_MODE, ...m);\nvar consoleDevInfo = (...m) => console.info(...STENCIL_DEV_MODE, ...m);\nvar setErrorHandler = (handler) => customError = handler;\n\n// src/client/client-load-module.ts\nvar cmpModules = /* @__PURE__ */ new Map();\nvar MODULE_IMPORT_PREFIX = \"./\";\nvar loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n  const exportName = cmpMeta.$tagName$.replace(/-/g, \"_\");\n  const bundleId = cmpMeta.$lazyBundleId$;\n  if (BUILD24.isDev && typeof bundleId !== \"string\") {\n    consoleDevError(\n      `Trying to lazily load component <${cmpMeta.$tagName$}> with style mode \"${hostRef.$modeName$}\", but it does not exist.`\n    );\n    return void 0;\n  } else if (!bundleId) {\n    return void 0;\n  }\n  const module = !BUILD24.hotModuleReplacement ? cmpModules.get(bundleId) : false;\n  if (module) {\n    return module[exportName];\n  }\n  /*!__STENCIL_STATIC_IMPORT_SWITCH__*/\n  return import(\n    /* @vite-ignore */\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${BUILD24.hotModuleReplacement && hmrVersionId ? \"?s-hmr=\" + hmrVersionId : \"\"}`\n  ).then((importedModule) => {\n    if (!BUILD24.hotModuleReplacement) {\n      cmpModules.set(bundleId, importedModule);\n    }\n    return importedModule[exportName];\n  }, consoleError);\n};\n\n// src/client/client-style.ts\nvar styles = /* @__PURE__ */ new Map();\nvar modeResolutionChain = [];\n\n// src/client/client-task-queue.ts\nimport { BUILD as BUILD26 } from \"@stencil/core/internal/app-data\";\n\n// src/client/client-window.ts\nimport { BUILD as BUILD25 } from \"@stencil/core/internal/app-data\";\nvar win = typeof window !== \"undefined\" ? window : {};\nvar doc = win.document || { head: {} };\nvar H = win.HTMLElement || class {\n};\nvar plt = {\n  $flags$: 0,\n  $resourcesUrl$: \"\",\n  jmp: (h2) => h2(),\n  raf: (h2) => requestAnimationFrame(h2),\n  ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n  rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n  ce: (eventName, opts) => new CustomEvent(eventName, opts)\n};\nvar setPlatformHelpers = (helpers) => {\n  Object.assign(plt, helpers);\n};\nvar supportsShadow = (\n  // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n  BUILD25.shadowDomShim && BUILD25.shadowDom ? /* @__PURE__ */ (() => (doc.head.attachShadow + \"\").indexOf(\"[native\") > -1)() : true\n);\nvar supportsListenerOptions = /* @__PURE__ */ (() => {\n  let supportsListenerOptions2 = false;\n  try {\n    doc.addEventListener(\n      \"e\",\n      null,\n      Object.defineProperty({}, \"passive\", {\n        get() {\n          supportsListenerOptions2 = true;\n        }\n      })\n    );\n  } catch (e) {\n  }\n  return supportsListenerOptions2;\n})();\nvar promiseResolve = (v) => Promise.resolve(v);\nvar supportsConstructableStylesheets = BUILD25.constructableCSS ? /* @__PURE__ */ (() => {\n  try {\n    new CSSStyleSheet();\n    return typeof new CSSStyleSheet().replaceSync === \"function\";\n  } catch (e) {\n  }\n  return false;\n})() : false;\n\n// src/client/client-task-queue.ts\nvar queueCongestion = 0;\nvar queuePending = false;\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueDomWritesLow = [];\nvar queueTask = (queue, write) => (cb) => {\n  queue.push(cb);\n  if (!queuePending) {\n    queuePending = true;\n    if (write && plt.$flags$ & 4 /* queueSync */) {\n      nextTick(flush);\n    } else {\n      plt.raf(flush);\n    }\n  }\n};\nvar consume = (queue) => {\n  for (let i2 = 0; i2 < queue.length; i2++) {\n    try {\n      queue[i2](performance.now());\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  queue.length = 0;\n};\nvar consumeTimeout = (queue, timeout) => {\n  let i2 = 0;\n  let ts = 0;\n  while (i2 < queue.length && (ts = performance.now()) < timeout) {\n    try {\n      queue[i2++](ts);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  if (i2 === queue.length) {\n    queue.length = 0;\n  } else if (i2 !== 0) {\n    queue.splice(0, i2);\n  }\n};\nvar flush = () => {\n  if (BUILD26.asyncQueue) {\n    queueCongestion++;\n  }\n  consume(queueDomReads);\n  if (BUILD26.asyncQueue) {\n    const timeout = (plt.$flags$ & 6 /* queueMask */) === 2 /* appLoaded */ ? performance.now() + 14 * Math.ceil(queueCongestion * (1 / 10)) : Infinity;\n    consumeTimeout(queueDomWrites, timeout);\n    consumeTimeout(queueDomWritesLow, timeout);\n    if (queueDomWrites.length > 0) {\n      queueDomWritesLow.push(...queueDomWrites);\n      queueDomWrites.length = 0;\n    }\n    if (queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0) {\n      plt.raf(flush);\n    } else {\n      queueCongestion = 0;\n    }\n  } else {\n    consume(queueDomWrites);\n    if (queuePending = queueDomReads.length > 0) {\n      plt.raf(flush);\n    }\n  }\n};\nvar nextTick = (cb) => promiseResolve().then(cb);\nvar readTask = /* @__PURE__ */ queueTask(queueDomReads, false);\nvar writeTask = /* @__PURE__ */ queueTask(queueDomWrites, true);\n\n// src/client/index.ts\nimport { BUILD as BUILD27, Env, NAMESPACE as NAMESPACE2 } from \"@stencil/core/internal/app-data\";\nexport {\n  BUILD27 as BUILD,\n  Build,\n  Env,\n  Fragment,\n  H,\n  H as HTMLElement,\n  Host,\n  NAMESPACE2 as NAMESPACE,\n  STENCIL_DEV_MODE,\n  addHostEventListeners,\n  bootstrapLazy,\n  cmpModules,\n  connectedCallback,\n  consoleDevError,\n  consoleDevInfo,\n  consoleDevWarn,\n  consoleError,\n  createEvent,\n  defineCustomElement,\n  disconnectedCallback,\n  doc,\n  forceModeUpdate,\n  forceUpdate,\n  getAssetPath,\n  getElement,\n  getHostRef,\n  getMode,\n  getRenderingRef,\n  getValue,\n  h,\n  insertVdomAnnotations,\n  isMemberInElement,\n  loadModule,\n  modeResolutionChain,\n  nextTick,\n  parsePropertyValue,\n  plt,\n  postUpdateComponent,\n  promiseResolve,\n  proxyComponent,\n  proxyCustomElement,\n  readTask,\n  registerHost,\n  registerInstance,\n  renderVdom,\n  setAssetPath,\n  setErrorHandler,\n  setMode,\n  setNonce,\n  setPlatformHelpers,\n  setPlatformOptions,\n  setValue,\n  styles,\n  supportsConstructableStylesheets,\n  supportsListenerOptions,\n  supportsShadow,\n  win,\n  writeTask\n};\n"],"mappings":"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","ignoreList":[]}