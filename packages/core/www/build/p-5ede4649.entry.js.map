{"version":3,"names":["accordionCss","PopAccordionStyle0","Accordion","_Accordion_accordionGroup","set","this","_Accordion_handleValueChanged","__classPrivateFieldGet","active","newActive","current","name","isOpen","compareOptions","_Accordion_onClick","readonly","disabled","connectedCallback","__classPrivateFieldSet","host","closest","addEventListener","disconnectedCallback","removeEventListener","open","close","toggle","render","h","Host","key","class","hostContext","part","onClick","ChevronDown","AccordionGroup","_AccordionGroup_onClick","ev","preventDefault","accordion","target","multiple","undefined","includes","filter","a","onActiveChange","value","popActiveChange","emit","popChange","componentWillLoad","componentConfig","apply","componentDidLoad","_AccordionGroup_instances","_AccordionGroup_accordions_get","forEach","_AccordionGroup_applyOpen","call","Array","from","querySelectorAll"],"sources":["src/components/accordion/accordion.scss?tag=pop-accordion&encapsulation=shadow","src/components/accordion/accordion.tsx","src/components/accordion-group/accordion-group.tsx"],"sourcesContent":["@use \"../../global/styles/theme\";\r\n@use \"../../global/styles/radius\";\r\n@use \"../../global/styles/join-item\";\r\n\r\n/**\r\n * @prop --border-radius: Change border radius\r\n * @prop --border-color: Change border color\r\n *\r\n * @prop --background: Change background color\r\n *\r\n * @prop --animation: Change animation timing\r\n */\r\n\r\n// Accordion\r\n// ----------------------------------------------------------------\r\n\r\n@include join-item.item_root;\r\n\r\n:host {\r\n  --border-radius: #{radius.$xl};\r\n  --border-color: oklch(#{theme.get-color(\"base.300\")});\r\n  --background: oklch(#{theme.get-color(\"base.200\")});\r\n  --animation: 0.2s;\r\n\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  display: grid;\r\n\r\n  overflow: hidden;\r\n\r\n  width: 100%;\r\n\r\n  border: 1px solid var(--border-color);\r\n  border-radius: var(--border-radius);\r\n\r\n  background-color: var(--background);\r\n\r\n  transition: grid-template-rows var(--animation);\r\n\r\n  > .accordion-title {\r\n    box-sizing: border-box;\r\n    position: relative;\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    grid-column-start: 1;\r\n    grid-row-start: 1;\r\n\r\n    padding: 1rem;\r\n    padding-inline-end: 1.5rem;\r\n\r\n    width: 100%;\r\n    min-height: 3.75rem;\r\n\r\n    cursor: pointer;\r\n    user-select: none;\r\n\r\n    transition: background-color var(--animation) ease-out;\r\n  }\r\n\r\n  > .accordion-content {\r\n    grid-column-start: 1;\r\n    grid-row-start: 2;\r\n\r\n    padding-left: 1rem;\r\n    padding-right: 1rem;\r\n\r\n    min-height: 0;\r\n\r\n    transition:\r\n      visibility var(--animation),\r\n      padding var(--animation) ease-out,\r\n      background-color var(--animation) ease-out;\r\n\r\n    cursor: unset;\r\n  }\r\n\r\n  > svg {\r\n    margin-inline-start: auto;\r\n    transition: transform 150ms ease 0ms;\r\n  }\r\n}\r\n\r\n// Accordion Open State\r\n// ----------------------------------------------------------------\r\n\r\n:host(:not([is-open])) {\r\n  grid-template-rows: auto 0fr;\r\n\r\n  > .accordion-content {\r\n    visibility: hidden;\r\n  }\r\n}\r\n\r\n:host([is-open]) {\r\n  grid-template-rows: auto 1fr;\r\n\r\n  svg {\r\n    transform: rotateX(180deg);\r\n  }\r\n\r\n  > .accordion-content {\r\n    visibility: visible;\r\n    min-height: fit-content;\r\n    padding-bottom: 1rem;\r\n  }\r\n}\r\n","import { compareOptions } from '#utils/forms';\r\nimport { hostContext } from '#utils/helpers';\r\nimport { Component, ComponentInterface, Element, Host, Method, Prop, h } from '@stencil/core';\r\nimport { ChevronDown } from '../ChevronDown';\r\n\r\n/**\r\n * Accordion is used for showing and hiding content.\r\n *\r\n * @slot - Content that will be hiding or shown\r\n * @slot header - Content of the accordion header\r\n *\r\n * @part header - Header of the accordion\r\n * @part content - Content of the accordion\r\n */\r\n@Component({\r\n  tag: 'pop-accordion',\r\n  styleUrl: 'accordion.scss',\r\n  shadow: true,\r\n})\r\nexport class Accordion implements ComponentInterface {\r\n  #accordionGroup?: HTMLPopAccordionGroupElement;\r\n\r\n  @Element() host: HTMLElement;\r\n\r\n  /**\r\n   * If `true`, the user cannot interact with the element.\r\n   */\r\n  @Prop({ reflect: true }) readonly?: boolean = false;\r\n\r\n  /**\r\n   * If `true`, the user cannot interact with the element.\r\n   */\r\n  @Prop({ reflect: true }) disabled?: boolean = false;\r\n\r\n  /**\r\n   * name of the accordion\r\n   */\r\n  @Prop({ reflect: true }) name!: string;\r\n\r\n  /**\r\n   * If `true`, the accordion is open.\r\n   *\r\n   * The developer must not set this value to `true` if the accordion is used in `<accordion-group>` element and set the active property to the name of the accordion.\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) isOpen?: boolean = false;\r\n\r\n  connectedCallback(): void {\r\n    this.#accordionGroup = this.host.closest('pop-accordion-group');\r\n\r\n    this.#accordionGroup?.addEventListener('popActiveChange', this.#handleValueChanged);\r\n  }\r\n\r\n  disconnectedCallback(): void {\r\n    this.#accordionGroup?.removeEventListener('popActiveChange', this.#handleValueChanged);\r\n  }\r\n\r\n  /**\r\n   * Open the accordion.\r\n   * If the method returns `false`, the accordion was already open. otherwise it returns `true`\r\n   */\r\n  @Method()\r\n  async open(): Promise<boolean> {\r\n    if (this.isOpen) {\r\n      return false;\r\n    }\r\n    this.isOpen = true;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Close the accordion.\r\n   * If the method returns `false`, the accordion was already closed. otherwise it returns `true`\r\n   */\r\n  @Method()\r\n  async close(): Promise<boolean> {\r\n    if (!this.isOpen) {\r\n      return false;\r\n    }\r\n    this.isOpen = false;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Open or close the accordion depending on his actual state\r\n   */\r\n  @Method()\r\n  async toggle(): Promise<void> {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  #handleValueChanged = (): void => {\r\n    if (!this.#accordionGroup) return;\r\n\r\n    const { active: newActive } = this.#accordionGroup;\r\n    const current = this.name;\r\n\r\n    this.isOpen = compareOptions(current, newActive);\r\n  };\r\n\r\n  #onClick = () => {\r\n    if (this.#accordionGroup) return;\r\n\r\n    const { readonly, disabled } = this;\r\n    if (disabled || readonly) return;\r\n    this.isOpen = !this.isOpen;\r\n  };\r\n\r\n  render() {\r\n    const { host } = this;\r\n\r\n    return (\r\n      <Host\r\n        class={{\r\n          'join-item': hostContext(host, 'pop-join'),\r\n        }}\r\n      >\r\n        <header part=\"header\" class=\"accordion-title\" onClick={this.#onClick}>\r\n          <div class=\"header-content\">\r\n            <slot name=\"header\" />\r\n          </div>\r\n          <ChevronDown />\r\n        </header>\r\n        <div part=\"content\" class=\"accordion-content\">\r\n          <slot />\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { componentConfig } from '#config';\r\nimport { Component, ComponentInterface, Element, Event, EventEmitter, Host, Prop, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'pop-accordion-group',\r\n  shadow: true,\r\n})\r\nexport class AccordionGroup implements ComponentInterface {\r\n  @Element() host: HTMLElement;\r\n\r\n  /**\r\n   * If `true`, the user cannot interact with the element.\r\n   *\r\n   * @config @default \"false\"\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) readonly?: boolean;\r\n\r\n  /**\r\n   * If `true`, the user cannot interact with the element.\r\n   *\r\n   * @config @default \"false\"\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) disabled?: boolean;\r\n\r\n  /**\r\n   * If `true`, the user can open multiple accordion.\r\n   *\r\n   * @config @default \"false\"\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) multiple: boolean;\r\n\r\n  /**\r\n   * name of the active the accordion.\r\n   */\r\n  @Prop({ mutable: true }) active?: string | string[];\r\n  @Watch('active')\r\n  onActiveChange(value: string | string[]) {\r\n    this.popActiveChange.emit({\r\n      value,\r\n    });\r\n    this.popChange.emit({\r\n      value,\r\n    });\r\n  }\r\n\r\n  componentWillLoad(): void {\r\n    componentConfig.apply(this, 'pop-accordion-group', {\r\n      readonly: false,\r\n      disabled: false,\r\n      multiple: false,\r\n    });\r\n  }\r\n\r\n  componentDidLoad(): void {\r\n    this.#accordions.forEach(accordion => {\r\n      if (this.readonly) accordion.readonly = this.readonly;\r\n      if (this.disabled) accordion.disabled = this.disabled;\r\n    });\r\n    this.#applyOpen();\r\n  }\r\n\r\n  #applyOpen(): void {\r\n    if (!this.active) return;\r\n\r\n    this.popActiveChange.emit({\r\n      value: this.active,\r\n    });\r\n  }\r\n\r\n  get #accordions() {\r\n    return Array.from(this.host.querySelectorAll('pop-accordion'));\r\n  }\r\n\r\n  /**\r\n   * The `popChange` event is fired when the user select an open of close an accordion.\r\n   *\r\n   */\r\n  @Event() popChange: EventEmitter<AccordionGroupChangeEventDetail>;\r\n\r\n  /**\r\n   * Emitted when the `active` property has changed.\r\n   * This is used to ensure that `pop-accordion` can respond\r\n   * to any value property changes from the group.\r\n   *\r\n   * @internal\r\n   */\r\n  @Event() popActiveChange!: EventEmitter<AccordionGroupChangeEventDetail>;\r\n\r\n  #onClick = (ev: Event) => {\r\n    ev.preventDefault();\r\n\r\n    const accordion = ev.target as HTMLPopAccordionElement;\r\n    if (!accordion || accordion.disabled || accordion.readonly) return;\r\n\r\n    const current = this.active;\r\n    const newActive = accordion.name;\r\n\r\n    if (this.multiple) {\r\n      this.active =\r\n        current === undefined\r\n          ? [newActive]\r\n          : this.active.includes(newActive)\r\n            ? [...this.active].filter(a => a !== newActive)\r\n            : [newActive, ...this.active];\r\n    } else {\r\n      this.active = current !== newActive ? newActive : null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Host onClick={this.#onClick}>\r\n        <slot />\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}