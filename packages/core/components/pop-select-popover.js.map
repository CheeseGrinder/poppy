{"file":"pop-select-popover.js","mappings":"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","names":[],"sources":["src/components/select-popover/select-popover.scss?tag=pop-select-popover","src/components/select-popover/select-popover.tsx"],"sourcesContent":["","import { Component, ComponentInterface, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { PopCheckboxCustomEvent, PopRadioGroupCustomEvent } from 'src/components';\r\nimport type { Color, Size } from 'src/interfaces';\r\nimport type { SelectPopoverOption } from './select-popover-interface';\r\n\r\n/**\r\n *\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'pop-select-popover',\r\n  styleUrl: 'select-popover.scss',\r\n  // shadow: true,\r\n})\r\nexport class SelectPopover implements ComponentInterface {\r\n  /**\r\n   * If `true`, allow empty on radio options\r\n   */\r\n  @Prop({ mutable: true }) required?: boolean;\r\n\r\n  /**\r\n   * If `true`, the select accepts multiple values\r\n   */\r\n  @Prop({ mutable: true }) multiple?: boolean;\r\n\r\n  /**\r\n   * The color to use from your application's color palette.\r\n   * Default options are: `\"primary\"`, `\"secondary\"`, `\"accent\"`, `\"info\"`, `\"success\"`, `\"warning\"`, `\"error\"`.\r\n   * For more information on colors, see [theming](/docs/theming/basics).\r\n   */\r\n  @Prop({ mutable: true }) color?: Color;\r\n\r\n  /**\r\n   * Change size of the component\r\n   * Options are: `\"xs\"`, `\"sm\"`, `\"md\"`, `\"lg\"`.\r\n   */\r\n  @Prop({ mutable: true }) size?: Size;\r\n\r\n  /**\r\n   * An array of options for the popover\r\n   */\r\n  @Prop() options: SelectPopoverOption[] = [];\r\n\r\n  #findOptionFromEvent(ev: PopCheckboxCustomEvent<any> | PopRadioGroupCustomEvent<any>) {\r\n    const { options } = this;\r\n    return options.find(o => o.value === ev.target.value);\r\n  }\r\n\r\n  #getValues(ev: PopCheckboxCustomEvent<any> | PopRadioGroupCustomEvent<any>): string | string[] | undefined {\r\n    const { multiple, options } = this;\r\n\r\n    if (multiple) {\r\n      // this is a popover with checkboxes (multiple value select)\r\n      // return an array of all the checked values\r\n      return options.filter(o => o.checked).map(o => o.value);\r\n    }\r\n\r\n    // this is a popover with radio buttons (single value select)\r\n    // return the value that was clicked, otherwise undefined\r\n    const option = this.#findOptionFromEvent(ev);\r\n    return option ? option.value : undefined;\r\n  }\r\n\r\n  #setChecked(ev: PopCheckboxCustomEvent<CheckboxChangeEventDetail>): void {\r\n    const { multiple } = this;\r\n    const option = this.#findOptionFromEvent(ev);\r\n\r\n    if (multiple && option) {\r\n      option.checked = ev.detail.checked;\r\n    }\r\n  }\r\n\r\n  #renderRadioOptions() {\r\n    const { options, required, color, size } = this;\r\n    const selected = options.filter(o => o.checked).map(o => o.value)[0];\r\n\r\n    return (\r\n      <pop-radio-group\r\n        value={selected}\r\n        color={color}\r\n        size={size}\r\n        allowEmpty={!required}\r\n        onPopChange={ev => {\r\n          if (!required && ev.detail.value === undefined) {\r\n            options[0].handler(undefined);\r\n            return;\r\n          }\r\n\r\n          const option = this.#findOptionFromEvent(ev);\r\n          option?.handler(this.#getValues(ev));\r\n        }}\r\n      >\r\n        {options.map(option => {\r\n          const clazz =\r\n            typeof option.cssClass === 'string'\r\n              ? option.cssClass\r\n              : Object.fromEntries(option.cssClass.map(cls => [cls, true]));\r\n\r\n          return (\r\n            <pop-item>\r\n              <pop-radio\r\n                value={option.value}\r\n                disabled={option.disabled}\r\n                color={option.color}\r\n                size={option.size}\r\n                class={clazz}\r\n              >\r\n                {option.text}\r\n              </pop-radio>\r\n            </pop-item>\r\n          );\r\n        })}\r\n      </pop-radio-group>\r\n    );\r\n  }\r\n\r\n  #renderCheckboxOptions() {\r\n    const { options } = this;\r\n\r\n    return (\r\n      <Fragment>\r\n        {options.map(option => {\r\n          const clazz =\r\n            typeof option.cssClass === 'string'\r\n              ? option.cssClass\r\n              : Object.fromEntries(option.cssClass.map(cls => [cls, true]));\r\n\r\n          return (\r\n            <pop-item>\r\n              <pop-checkbox\r\n                value={option.value}\r\n                color={this.color}\r\n                size={this.size}\r\n                checked={option.checked}\r\n                disabled={option.disabled}\r\n                class={clazz}\r\n                onPopChange={ev => {\r\n                  this.#setChecked(ev);\r\n                  option.handler(this.#getValues(ev));\r\n                }}\r\n              >\r\n                {option.text}\r\n              </pop-checkbox>\r\n            </pop-item>\r\n          );\r\n        })}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  #renderOptions() {\r\n    const { multiple } = this;\r\n\r\n    if (multiple) return this.#renderCheckboxOptions();\r\n    return this.#renderRadioOptions();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <pop-list size={this.size}>{this.#renderOptions()}</pop-list>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}