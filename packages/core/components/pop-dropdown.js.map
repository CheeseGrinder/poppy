{"file":"pop-dropdown.js","mappings":"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","names":[],"sources":["src/utils/click-outside.ts","src/components/dropdown/dropdown.scss?tag=pop-dropdown&encapsulation=shadow","src/components/dropdown/dropdown.tsx"],"sourcesContent":["// Code from https://github.com/jarrvis/stencil-click-outside\r\n// Since the maintenainer doesnt accept PR or push on this repo\r\n// I copy paste the code in case i need to make an evolution\r\n\r\nimport { Build, ComponentInterface, getElement } from '@stencil/core';\r\n\r\ndeclare type ClickOutsideDecorator = (target: ComponentInterface, propertyKey: string) => void;\r\n\r\ndeclare interface ClickOutsideOptions {\r\n  triggerEvents?: string;\r\n  exclude?: string;\r\n}\r\n\r\nconst ClickOutsideOptionsDefaults: ClickOutsideOptions = {\r\n  triggerEvents: 'click',\r\n  exclude: '',\r\n};\r\n\r\n/**\r\n * Call this function as soon as the click outside of annotated method's host is done.\r\n */\r\nexport function ClickOutside(opt: ClickOutsideOptions = ClickOutsideOptionsDefaults): ClickOutsideDecorator {\r\n  return (proto: ComponentInterface, methodName: string) => {\r\n    // this is to resolve the 'compiler optimization issue':\r\n    // lifecycle events not being called when not explicitly declared in at least one of components from bundle\r\n    (Build as any).connectedCallback = true;\r\n    (Build as any).disconnectedCallback = true;\r\n\r\n    const { connectedCallback, disconnectedCallback } = proto;\r\n\r\n    proto.connectedCallback = function () {\r\n      const host = getElement(this);\r\n      const method = this[methodName];\r\n      registerClickOutside(this, host, method, opt);\r\n      return connectedCallback?.call(this);\r\n    };\r\n\r\n    proto.disconnectedCallback = function () {\r\n      const host = getElement(this);\r\n      const method = this[methodName];\r\n      removeClickOutside(this, host, method, opt);\r\n      return disconnectedCallback?.call(this);\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * Register callback function for HTMLElement to be executed when user clicks outside of element.\r\n */\r\nexport function registerClickOutside(\r\n  component: ComponentInterface,\r\n  element: HTMLElement,\r\n  callback: () => void,\r\n  opt: ClickOutsideOptions = ClickOutsideOptionsDefaults,\r\n): void {\r\n  const excludedNodes = getExcludedNodes(opt);\r\n  getTriggerEvents(opt).forEach(triggerEvent => {\r\n    window.addEventListener(\r\n      triggerEvent,\r\n      (e: Event) => {\r\n        initClickOutside(e, component, element, callback, excludedNodes);\r\n      },\r\n      false,\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Remove click outside callback function for HTMLElement.\r\n */\r\nexport function removeClickOutside(\r\n  component: ComponentInterface,\r\n  element: HTMLElement,\r\n  callback: () => void,\r\n  opt: ClickOutsideOptions = ClickOutsideOptionsDefaults,\r\n): void {\r\n  getTriggerEvents(opt).forEach(triggerEvent => {\r\n    window.removeEventListener(\r\n      triggerEvent,\r\n      (e: Event) => {\r\n        initClickOutside(e, component, element, callback);\r\n      },\r\n      false,\r\n    );\r\n  });\r\n}\r\n\r\nfunction initClickOutside(\r\n  event: Event,\r\n  component: ComponentInterface,\r\n  element: HTMLElement,\r\n  callback: () => void,\r\n  excludedNodes?: Array<HTMLElement>,\r\n) {\r\n  const target = event.target as HTMLElement;\r\n  if (!element.contains(target) && !isExcluded(target, excludedNodes)) {\r\n    callback.call(component);\r\n  }\r\n}\r\n\r\nfunction getTriggerEvents(opt: ClickOutsideOptions): Array<string> {\r\n  if (opt.triggerEvents) {\r\n    return opt.triggerEvents.split(',').map(e => e.trim());\r\n  }\r\n  return ['click'];\r\n}\r\n\r\nfunction getExcludedNodes(opt: ClickOutsideOptions): Array<HTMLElement> {\r\n  if (opt.exclude) {\r\n    try {\r\n      return Array.from(document.querySelectorAll(opt.exclude));\r\n    } catch (err) {\r\n      console.warn(\r\n        `@ClickOutside: Exclude: '${opt.exclude}' will not be evaluated. Check your exclude selector syntax.`,\r\n        err,\r\n      );\r\n    }\r\n  }\r\n  return;\r\n}\r\n\r\nfunction isExcluded(target: HTMLElement, excudedNodes?: Array<HTMLElement>): boolean {\r\n  if (target && excudedNodes) {\r\n    for (let excludedNode of excudedNodes) {\r\n      if (excludedNode.contains(target)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","@use \"../../global/styles/theme\";\r\n@use \"../../global/styles/shadow\";\r\n@use \"../../global/styles/radius\";\r\n\r\n/**\r\n * @prop --border-radius: Change border radius\r\n * @prop --border-color: Change border color\r\n *\r\n * @prop --background: Change sidebar background\r\n * @prop --color: Change sidebar text color\r\n *\r\n * @prop --shadow: Change box-shadow\r\n */\r\n\r\n// Dropdown\r\n// ----------------------------------------------------------------\r\n\r\n:host {\r\n  --border-radius: #{radius.$md};\r\n  --border-color: oklch(#{theme.get-color(\"base.200\")});\r\n  --background: oklch(#{theme.get-color(\"base.100\")});\r\n  --color: oklch(#{theme.get-color(\"base.content\")});\r\n  --shadow: #{shadow.$md};\r\n\r\n  .dropdown {\r\n    position: relative;\r\n    display: grid;\r\n    width: 100%;\r\n\r\n    &-trigger {\r\n      display: inline-block;\r\n      grid-column-start: 1;\r\n      grid-row-start: 1;\r\n    }\r\n\r\n    &-content {\r\n      position: absolute;\r\n\r\n      min-height: 2rem;\r\n\r\n      border: 1px solid var(--border-color);\r\n      border-radius: var(--border-radius);\r\n\r\n      color: var(--color);\r\n      background-color: var(--background);\r\n\r\n      box-shadow: var(--shadow);\r\n\r\n      animation-name: present;\r\n      animation-duration: 200ms;\r\n    }\r\n  }\r\n}\r\n\r\n// Dropdown Open state\r\n// ----------------------------------------------------------------\r\n\r\n:host(:not([open])) {\r\n  .dropdown-content {\r\n    opacity: 0;\r\n    pointer-events: none;\r\n  }\r\n}\r\n:host([open]) {\r\n  .dropdown-content {\r\n    z-index: 100;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n// Dropdown Placement\r\n// ----------------------------------------------------------------\r\n\r\n:host([side=\"bottom\"][align=\"end\"]) .dropdown-content {\r\n  inset-inline-end: 0;\r\n}\r\n\r\n:host([side=\"top\"]) .dropdown-content {\r\n  top: auto;\r\n  bottom: 100%;\r\n}\r\n:host([side=\"top\"][align=\"end\"]) .dropdown-content {\r\n  inset-inline-end: 0;\r\n}\r\n\r\n:host([side=\"left\"]) .dropdown-content {\r\n  top: 0;\r\n  bottom: auto;\r\n  inset-inline-end: 100%;\r\n}\r\n:host([side=\"left\"][align=\"end\"]) .dropdown-content {\r\n  top: auto;\r\n  bottom: 0;\r\n}\r\n\r\n:host([side=\"right\"]) .dropdown-content {\r\n  top: 0;\r\n  bottom: auto;\r\n  inset-inline-start: 100%;\r\n}\r\n:host([side=\"right\"][align=\"end\"]) .dropdown-content {\r\n  top: auto;\r\n  bottom: 0;\r\n}\r\n\r\n@keyframes present {\r\n  from {\r\n    opacity: 0.6;\r\n    scale: 0.95;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    scale: 1;\r\n  }\r\n}\r\n","import { componentConfig } from '#config';\r\nimport { ClickOutside } from '#utils/click-outside';\r\nimport { OverlayInterface } from '#utils/overlay';\r\nimport { TriggerAction } from '#utils/trigger';\r\nimport { Component, ComponentInterface, Element, Event, EventEmitter, Host, Method, Prop, h } from '@stencil/core';\r\nimport { Show } from '../Show';\r\n\r\n/**\r\n * Describe whats does the component\r\n *\r\n * @part {name} - // Describe css part\r\n *\r\n * @slot - // Describe slot content\r\n */\r\n@Component({\r\n  tag: 'pop-dropdown',\r\n  styleUrl: 'dropdown.scss',\r\n  shadow: true,\r\n})\r\nexport class Dropdown implements ComponentInterface, OverlayInterface {\r\n  #dropdown: HTMLDetailsElement;\r\n  #debounceTimer: NodeJS.Timeout;\r\n\r\n  @Element() host: HTMLElement & OverlayInterface;\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @config @default 'bottom'\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) side?: 'left' | 'right' | 'top' | 'bottom';\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @config @default 'start'\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) align?: 'start' | 'end';\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @config @default false\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) open?: boolean;\r\n\r\n  /**\r\n   * Describes what kind of intertion with the trigger (sloted element) that should cause the dropdown to open.\r\n   * - `\"click\"`: the dropdown will be presented when the trigger is left clicked.\r\n   * - `\"hover\"`: the dropdown will be presented when a pointer hovers over the trigger.\r\n   * - `\"context-menu\"`: the dropdown will be presented when the trigger is right clicked on desktop and long pressed on mobile. This will also prevent your device's normal context menu from appearing.\r\n   *\r\n   * @config @default 'click'\r\n   */\r\n  @Prop({ mutable: true }) triggerAction: TriggerAction;\r\n\r\n  /**\r\n   * Set the amount of time, in milliseconds after the user no longer hover the trigger or dropdown, will dismiss.\r\n   * Only apply on `triggerAction=hover`\r\n   *\r\n   * @config @default 100\r\n   */\r\n  @Prop({ mutable: true }) debounce?: number = 100;\r\n\r\n  /**\r\n   * If `true`, a backdrop will be displayed behind the modal.\r\n   * This property controls whether or not the backdrop\r\n   * darkens the screen when the modal is presented.\r\n   *\r\n   * @config @default false\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) showBackdrop?: boolean;\r\n\r\n  /**\r\n   * Emitted after the modal has presented.\r\n   */\r\n  @Event() didPresent: EventEmitter<void>;\r\n\r\n  /**\r\n   * Emitted after the modal has dismissed.\r\n   */\r\n  @Event() didDismiss: EventEmitter<void>;\r\n\r\n  componentWillLoad(): void {\r\n    componentConfig.apply(this, 'pop-dropdown', {\r\n      side: 'bottom',\r\n      align: 'start',\r\n      open: false,\r\n      triggerAction: 'click',\r\n      debounce: 100,\r\n      showBackdrop: false,\r\n    });\r\n  }\r\n\r\n  componentDidRender(): void {\r\n    const { open } = this;\r\n    if (open) {\r\n      this.#dropdown.open = true;\r\n    }\r\n  }\r\n\r\n  @Method()\r\n  async present(): Promise<boolean> {\r\n    const { open } = this;\r\n    if (open) return false;\r\n\r\n    this.open = true;\r\n    return true;\r\n  }\r\n\r\n  @Method()\r\n  async dismiss(): Promise<boolean> {\r\n    const { open } = this;\r\n    if (!open) return false;\r\n\r\n    this.open = false;\r\n    return true;\r\n  }\r\n\r\n  @ClickOutside()\r\n  onClickOutside(): void {\r\n    if (!this.open) return;\r\n\r\n    this.dismiss();\r\n  }\r\n\r\n  #onClick = (): void => {\r\n    if (this.triggerAction === 'click') {\r\n      this.present();\r\n    }\r\n  };\r\n\r\n  #onHover = (): void => {\r\n    if (this.triggerAction === 'hover') {\r\n      clearTimeout(this.#debounceTimer);\r\n      this.present();\r\n    }\r\n  };\r\n\r\n  #onBlur = (): void => {\r\n    if (this.triggerAction === 'hover') {\r\n      clearTimeout(this.#debounceTimer);\r\n      this.#debounceTimer = setTimeout(() => {\r\n        this.dismiss();\r\n      }, this.debounce || 500);\r\n    }\r\n  };\r\n\r\n  #onContext = (ev: PointerEvent): void => {\r\n    if (this.triggerAction === 'context-menu') {\r\n      ev.preventDefault();\r\n      this.present();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <details\r\n          part=\"dropdown\"\r\n          class=\"dropdown\"\r\n          onMouseEnter={this.#onHover}\r\n          onMouseLeave={this.#onBlur}\r\n          ref={(el: HTMLDetailsElement) => (this.#dropdown = el)}\r\n        >\r\n          <summary part=\"trigger\" class=\"dropdown-trigger\" onClick={this.#onClick} onContextMenu={this.#onContext}>\r\n            <slot name=\"trigger\" />\r\n          </summary>\r\n          <div part=\"content\" class=\"dropdown-content\">\r\n            <slot />\r\n          </div>\r\n          <Show when={this.showBackdrop}>\r\n            <div part=\"backdrop\" class=\"dropdown-backdrop\" onClick={() => this.dismiss()}></div>\r\n          </Show>\r\n        </details>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}