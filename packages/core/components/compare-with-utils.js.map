{"file":"compare-with-utils.js","mappings":"AAEA;;;;;;;MAOa,cAAc,GAAG,CAC5B,YAAiB,EACjB,YAAiB,EACjB,WAAuC;IAEvC,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;QACrC,OAAO,WAAW,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;KAChD;SAAM,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;QAC1C,OAAO,YAAY,CAAC,WAAW,CAAC,KAAK,YAAY,CAAC,WAAW,CAAC,CAAC;KAChE;SAAM;QACL,OAAO,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,YAAY,KAAK,YAAY,CAAC;KAC1G;AACH,EAAE;AAEF;;;;;;;MAOa,gBAAgB,GAAG,CAC9B,YAAyB,EACzB,YAAiB,EACjB,WAAuC;IAEvC,IAAI,YAAY,KAAK,SAAS,EAAE;QAC9B,OAAO,KAAK,CAAC;KACd;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;QAC/B,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,cAAc,CAAC,GAAG,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC,CAAC;KACjF;SAAM;QACL,OAAO,cAAc,CAAC,YAAY,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;KAChE;AACH;;;;","names":[],"sources":["src/utils/forms/compare-with-utils.ts"],"sourcesContent":["type CompareFn<T = any> = (currentValue: T, compareValue: T) => boolean;\r\n\r\n/**\r\n * Uses the compareWith param to compare two values to determine if they are equal.\r\n *\r\n * @param currentValue The current value of the control.\r\n * @param compareValue The value to compare against.\r\n * @param compareWith The function or property name to use to compare values.\r\n */\r\nexport const compareOptions = (\r\n  currentValue: any,\r\n  compareValue: any,\r\n  compareWith?: CompareFn | string | null,\r\n): boolean => {\r\n  if (typeof compareWith === 'function') {\r\n    return compareWith(currentValue, compareValue);\r\n  } else if (typeof compareWith === 'string') {\r\n    return currentValue[compareWith] === compareValue[compareWith];\r\n  } else {\r\n    return Array.isArray(compareValue) ? compareValue.includes(currentValue) : currentValue === compareValue;\r\n  }\r\n};\r\n\r\n/**\r\n * Compares a value against the current value(s) to determine if it is selected.\r\n *\r\n * @param currentValue The current value of the control.\r\n * @param compareValue The value to compare against.\r\n * @param compareWith The function or property name to use to compare values.\r\n */\r\nexport const isOptionSelected = (\r\n  currentValue: any[] | any,\r\n  compareValue: any,\r\n  compareWith?: string | CompareFn | null,\r\n) => {\r\n  if (currentValue === undefined) {\r\n    return false;\r\n  }\r\n  if (Array.isArray(currentValue)) {\r\n    return currentValue.some(val => compareOptions(val, compareValue, compareWith));\r\n  } else {\r\n    return compareOptions(currentValue, compareValue, compareWith);\r\n  }\r\n};\r\n"],"version":3}