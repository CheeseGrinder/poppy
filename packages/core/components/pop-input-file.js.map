{"file":"pop-input-file.js","mappings":"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","names":[],"sources":["src/components/input-file/input-file.scss?tag=pop-input-file&encapsulation=shadow","src/components/input-file/input-file.tsx"],"sourcesContent":["@use \"../../global/styles/radius\";\r\n@use \"../../global/styles/theme\";\r\n@use \"../../global/styles/input\";\r\n@use \"../../global/styles/join-item\";\r\n\r\n/**\r\n * @prop --border-radius: Change border radius.\r\n * @prop --border-color: Change border and outline color.\r\n *\r\n * @prop --button-background: Change button background.\r\n * @prop --button-color: Change button text color.\r\n * @prop --button-animation: Change animation duration of the button.\r\n *\r\n * @prop --background: Change background color.\r\n * @prop --background-opacity: CHange background opacity.\r\n * @prop --color: Change text color.\r\n *\r\n * @prop --error-color: Change error text .\r\n */\r\n\r\n@include join-item.item(input);\r\n\r\n// Input-File\r\n// ----------------------------------------------------------------\r\n\r\n$minWidth: 12rem;\r\n:host {\r\n  @include input.label;\r\n  @include input.helper;\r\n\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n\r\n  > input {\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n\r\n    padding: 0;\r\n\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-radius: var(--border-radius, #{radius.$md});\r\n    border-color: var(--border-color, oklch(#{theme.get-color(\"base.content\")} / 0));\r\n\r\n    background-color: var(--background, oklch(#{theme.get-color(\"base.100\")} / var(--background-opacity, 1)));\r\n    color: var(--color, oklch(#{theme.get-color(\"base.content\")}));\r\n\r\n    min-width: $minWidth;\r\n    width: 100%;\r\n\r\n    cursor: pointer;\r\n\r\n    &:focus-visible {\r\n      outline-style: solid;\r\n      outline-width: 2px;\r\n      outline-offset: 2px;\r\n      outline-color: var(--border-color, oklch(theme.get-color(\"base.content\") / 0.2));\r\n    }\r\n    &::file-selector-button {\r\n      border: none;\r\n\r\n      padding-left: 1rem;\r\n      padding-right: 1rem;\r\n      height: 100%;\r\n\r\n      background-color: var(--button-background, oklch(#{theme.get-color(\"neutral.base\")}));\r\n\r\n      color: var(--button-color, oklch(#{theme.get-color(\"neutral.content\")}));\r\n      text-align: center;\r\n      text-transform: uppercase;\r\n      text-decoration-line: none;\r\n      font-weight: 600;\r\n\r\n      cursor: pointer;\r\n      user-select: none;\r\n\r\n      transition-property: color, background-color, border-color, opacity;\r\n      transition-timing-function: ease-out;\r\n      transition-duration: 200ms;\r\n      animation: button-pop var(--button-animation, 0.25s) ease-out;\r\n    }\r\n  }\r\n}\r\n\r\n// Bordered\r\n:host([bordered]) {\r\n  --border-color: oklch(#{theme.get-color(\"base.content\")} / 0.2);\r\n}\r\n\r\n// Input-File Size\r\n// ----------------------------------------------------------------\r\n\r\n:host([size=\"xs\"]) > input {\r\n  padding-inline-end: 0.5rem;\r\n  height: 1.5rem;\r\n  font-size: 0.75rem;\r\n  line-height: 1.625;\r\n\r\n  &::file-selector-button {\r\n    margin-right: 0.5rem;\r\n    font-size: 0.75rem;\r\n  }\r\n}\r\n:host([size=\"sm\"]) > input {\r\n  padding-inline-end: 0.75rem;\r\n  height: 2rem;\r\n  font-size: 0.875rem;\r\n  line-height: 2;\r\n\r\n  &::file-selector-button {\r\n    margin-right: 0.75rem;\r\n    font-size: 0.875rem;\r\n  }\r\n}\r\n:host([size=\"md\"]),\r\n:host(:not([size])) {\r\n  > input {\r\n    padding-inline-end: 1rem;\r\n    height: 3rem;\r\n    font-size: 0.875rem;\r\n    line-height: 2;\r\n\r\n    &::file-selector-button {\r\n      margin-right: 1rem;\r\n      font-size: 0.875rem;\r\n    }\r\n  }\r\n}\r\n:host([size=\"lg\"]) > input {\r\n  padding-inline-end: 1.5rem;\r\n  height: 4rem;\r\n  font-size: 1.125rem;\r\n  line-height: 2;\r\n\r\n  &::file-selector-button {\r\n    margin-right: 1.5rem;\r\n    font-size: 1.125rem;\r\n  }\r\n}\r\n\r\n// Input-File Color\r\n// ----------------------------------------------------------------\r\n\r\n@mixin generate-color($colors...) {\r\n  @each $color in $colors {\r\n    $base: theme.get-color(\"#{$color}.base\");\r\n    $shade: theme.get-color(\"#{$color}.shade\");\r\n    $text: theme.get-color(\"#{$color}.content\");\r\n\r\n    :host([color=\"#{$color}\"]) {\r\n      --button-background: oklch(#{$base});\r\n      --button-color: oklch(#{$text});\r\n      --border-color: oklch(#{$base});\r\n\r\n      > input:hover {\r\n        --button-background: color-mix(in oklab, oklch(#{$base}) 90%, black);\r\n\r\n        @supports (color: color-mix(in oklab, black, black)) {\r\n          --button-background: oklch(#{$shade});\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n@include generate-color(primary, secondary, accent, info, success, warning, error);\r\n\r\n:host(:not([color], [disabled])) {\r\n  $color: theme.get-color(\"neutral.base\");\r\n  $shade: theme.get-color(\"neutral.shade\");\r\n\r\n  > input:hover {\r\n    --button-background: color-mix(in oklab, oklch(#{$color}) 90%, black);\r\n\r\n    @supports not (color: color-mix(in oklab, black, black)) {\r\n      --button-background: oklch(#{$shade});\r\n    }\r\n  }\r\n}\r\n:host([color=\"ghost\"]) {\r\n  --background-opacity: 0.05;\r\n  --button-background: transparent;\r\n  --button-color: currentColor;\r\n\r\n  > input:focus {\r\n    --background-opacity: 1;\r\n\r\n    color: var(--text-color, oklch(theme.get-color(\"base.content\")));\r\n  }\r\n}\r\n\r\n// Input-File State\r\n// ----------------------------------------------------------------\r\n\r\n:host([disabled]) {\r\n  $background: theme.get-color(\"base.200\");\r\n  $color: theme.get-color(\"base.content\");\r\n  $btn-background: theme.get-color(\"neutral.base\");\r\n\r\n  --background: oklch(#{$background});\r\n  --border-color: oklch(#{$background});\r\n  --color: oklch(#{$color} / 0.2);\r\n\r\n  --button-color: oklch(#{$color} / 0.2);\r\n  --button-background: oklch(#{$btn-background} / 0.2);\r\n\r\n  > input,\r\n  input::file-selector-button {\r\n    cursor: not-allowed;\r\n  }\r\n}\r\n","import { componentConfig, config } from '#config';\r\nimport { Attributes, hostContext, inheritAriaAttributes, inheritAttributes } from '#utils/helpers';\r\nimport {\r\n  AttachInternals,\r\n  Component,\r\n  ComponentInterface,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n  Host,\r\n  Method,\r\n  Prop,\r\n  Watch,\r\n  h,\r\n} from '@stencil/core';\r\nimport { Color, Size } from 'src/interfaces';\r\nimport { Show } from '../Show';\r\n\r\n/**\r\n * Textarea allows users to enter text in multiple lines.\r\n *\r\n * @slot - Slot for the content of the label\r\n *\r\n * @part label - The native HTML label element that wrap the text .\r\n * @part native - The native HTML input element.\r\n */\r\n@Component({\r\n  tag: 'pop-input-file',\r\n  styleUrl: 'input-file.scss',\r\n  shadow: true,\r\n  formAssociated: true,\r\n})\r\nexport class InputFile implements ComponentInterface {\r\n  #inputId = `pop-input-file-${inputIds++}`;\r\n  #inheritedAttributes: Attributes;\r\n\r\n  #nativeInput!: HTMLInputElement;\r\n  #debounceTimer: NodeJS.Timeout;\r\n\r\n  @Element() host!: HTMLElement;\r\n\r\n  @AttachInternals() internals: ElementInternals;\r\n\r\n  /**\r\n   * The name of the control, which is submitted with the form data.\r\n   */\r\n  @Prop() name: string = this.#inputId;\r\n\r\n  /**\r\n   * The value of the toggle does not mean if it's checked or not, use the `checked`\r\n   * property for that.\r\n   *\r\n   * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\r\n   * it's only used when the toggle participates in a native `<form>`.\r\n   */\r\n  @Prop({ mutable: true }) value?: File | File[] | null;\r\n  @Watch('value')\r\n  onValueChange(file: File): void {\r\n    this.internals.setFormValue(file, file);\r\n  }\r\n\r\n  /**\r\n   * If `true`, the user can enter more than one value.\r\n   * This attribute applies when the type attribute is set to `\"email\"`, otherwise it is ignored.\r\n   *\r\n   * @config @default false\r\n   */\r\n  @Prop({ mutable: true }) multiple?: boolean;\r\n\r\n  /**\r\n   * If `true`, the user must fill in a value before submitting a form.\r\n   *\r\n   * @config @default false\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) required?: boolean;\r\n\r\n  /**\r\n   * If `true`, the user cannot modify the value.\r\n   *\r\n   * @config @default false\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) readonly?: boolean;\r\n\r\n  /**\r\n   * If `true`, the user cannot interact with the element.\r\n   *\r\n   * @config @default false\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) disabled?: boolean;\r\n\r\n  /**\r\n   * If `true`, the element will be focused on page load.\r\n   *\r\n   * @config @default false\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) autoFocus?: boolean;\r\n\r\n  /**\r\n   * if `true`, adds border to textarea when `color` property is not set.\r\n   *\r\n   * @config @default false\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) bordered?: boolean;\r\n\r\n  /**\r\n   * The color to use from your application's color palette.\r\n   * Default options are: `\"primary\"`, `\"secondary\"`, `\"accent\"`, `\"ghost\"`, `\"info\"`, `\"success\"`, `\"warning\"`, `\"error\"`.\r\n   * For more information on colors, see [theming](/docs/theming/basics).\r\n   *\r\n   * @config\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) color?: Color | 'ghost';\r\n\r\n  /**\r\n   * Change size of the component\r\n   * Options are: `\"xs\"`, `\"sm\"`, `\"md\"`, `\"lg\"`.\r\n   *\r\n   * @config @default \"md\"\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) size?: Size;\r\n\r\n  /**\r\n   * Text that is placed under the textarea and displayed when no error is detected.\r\n   */\r\n  @Prop() helperText: string;\r\n\r\n  /**\r\n   * Text that is placed under the textarea and displayed when an error is detected.\r\n   */\r\n  @Prop() errorText: string;\r\n\r\n  /**\r\n   * The `popChange` event is fired when the user modifies the textarea's value.\r\n   * Unlike the ionInput event, the `popChange` event is fired when the element loses focus after its value has been modified.\r\n   */\r\n  @Event() popChange: EventEmitter<InputFileChangeEventDetail>;\r\n\r\n  /**\r\n   * Emitted when the input has focus.\r\n   */\r\n  @Event() popFocus: EventEmitter<void>;\r\n\r\n  /**\r\n   * Emitted when the input loses focus.\r\n   */\r\n  @Event() popBlur: EventEmitter<void>;\r\n\r\n  formResetCallback(): void {\r\n    this.value = null;\r\n    this.#nativeInput.value = null;\r\n  }\r\n\r\n  formStateRestoreCallback(state: File): void {\r\n    this.value = state;\r\n  }\r\n\r\n  componentWillLoad(): void {\r\n    this.#inheritedAttributes = {\r\n      ...inheritAriaAttributes(this.host),\r\n      ...inheritAttributes(this.host, ['tabindex', 'title', 'data-form-type']),\r\n    };\r\n    componentConfig.apply(this, 'pop-input-file', {\r\n      multiple: false,\r\n      required: false,\r\n      readonly: false,\r\n      disabled: false,\r\n      autoFocus: false,\r\n      bordered: false,\r\n      size: config.get('defaultSize', 'md'),\r\n    });\r\n  }\r\n\r\n  // TODO: Tester si ça fonctionne\r\n  componentDidLoad(): void {\r\n    const { value } = this;\r\n    const files = Array.isArray(value) ? value : [value];\r\n    files.forEach((file, idx) => (this.#nativeInput.files[idx] = file));\r\n  }\r\n\r\n  disconnectedCallback(): void {\r\n    clearTimeout(this.#debounceTimer);\r\n  }\r\n\r\n  /**\r\n   * Sets focus on the native `textarea` in `pop-textarea`. Use this method instead of the global\r\n   * `textarea.focus()`.\r\n   */\r\n  @Method()\r\n  async setFocus(): Promise<void> {\r\n    this.#nativeInput?.focus();\r\n  }\r\n\r\n  #getValue(): File[] {\r\n    return Array.from(this.#nativeInput.files);\r\n  }\r\n\r\n  #onChange = (): void => {\r\n    this.popChange.emit({\r\n      value: this.#getValue(),\r\n    });\r\n  };\r\n\r\n  #onFocus = (): void => {\r\n    this.popFocus.emit();\r\n  };\r\n\r\n  #onBlur = (): void => {\r\n    this.popBlur.emit();\r\n  };\r\n\r\n  render() {\r\n    const { host, errorText, helperText } = this;\r\n    const inputId = this.#inputId;\r\n\r\n    const hasLabel = host.textContent !== '';\r\n    const hasError = !!errorText;\r\n    const hasHelper = !!helperText;\r\n    const hasBottomText = hasError || hasHelper;\r\n\r\n    return (\r\n      <Host\r\n        aria-labelledby={inputId}\r\n        aria-hidden={this.disabled ? 'true' : null}\r\n        class={{\r\n          'join-item': hostContext(host, 'pop-join'),\r\n        }}\r\n      >\r\n        <Show when={hasLabel}>\r\n          <div class=\"label\">\r\n            <label htmlFor={inputId} part=\"label\">\r\n              <slot />\r\n            </label>\r\n          </div>\r\n        </Show>\r\n        <input\r\n          part=\"native\"\r\n          type=\"file\"\r\n          id={inputId}\r\n          name={this.name}\r\n          multiple={this.multiple}\r\n          required={this.required}\r\n          readonly={this.readonly}\r\n          disabled={this.disabled}\r\n          autoFocus={this.autoFocus}\r\n          onChange={this.#onChange}\r\n          onFocus={this.#onFocus}\r\n          onBlur={this.#onBlur}\r\n          ref={el => (this.#nativeInput = el)}\r\n          {...this.#inheritedAttributes}\r\n        />\r\n        <Show when={hasBottomText}>\r\n          <div class=\"text-wrapper\">\r\n            <Show when={hasError}>\r\n              <span class=\"error-text\">{errorText}</span>\r\n            </Show>\r\n            <Show when={hasHelper}>\r\n              <span class=\"helper-text\">{helperText}</span>\r\n            </Show>\r\n          </div>\r\n        </Show>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n\r\nlet inputIds = 0;\r\n"],"version":3}