{"file":"pop-select.js","mappings":"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","names":["__classPrivateFieldSet","__classPrivateFieldGet"],"sources":["src/framework.constant.ts","src/utils/helpers.ts","src/utils/overlay.ts","src/components/select/select.scss?tag=pop-select&encapsulation=shadow","src/components/select/select.tsx"],"sourcesContent":["export const APP_PREFIX = 'pop';\r\n\r\nexport const APP_TAG = `${APP_PREFIX}-app`;\r\n","import { JSX } from '@stencil/core';\r\nimport { JSXBase } from '@stencil/core/internal';\r\nimport { APP_TAG } from 'src/framework.constant';\r\n\r\nexport type Attributes = { [key: string]: any };\r\n\r\n/**\r\n * Elements inside of web components sometimes need to inherit global attributes\r\n * set on the host. For example, the inner input in `pop-input` should inherit\r\n * the `title` attribute that developers set directly on `pop-input`. This\r\n * helper function should be called in componentWillLoad and assigned to a variable\r\n * that is later used in the render function.\r\n *\r\n * This does not need to be reactive as changing attributes on the host element\r\n * does not trigger a re-render.\r\n */\r\nexport const inheritAttributes = (el: HTMLElement, attributes: string[] = []) => {\r\n  const attributeObject: Attributes = {};\r\n\r\n  attributes.forEach(attr => {\r\n    if (el.hasAttribute(attr)) {\r\n      const value = el.getAttribute(attr);\r\n      if (value !== null) {\r\n        attributeObject[attr] = el.getAttribute(attr);\r\n      }\r\n      el.removeAttribute(attr);\r\n    }\r\n  });\r\n\r\n  return attributeObject;\r\n};\r\n\r\n/**\r\n * List of available ARIA attributes + `role`.\r\n * Removed deprecated attributes.\r\n * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes\r\n */\r\nconst ariaAttributes = [\r\n  'role',\r\n  'aria-activedescendant',\r\n  'aria-atomic',\r\n  'aria-autocomplete',\r\n  'aria-braillelabel',\r\n  'aria-brailleroledescription',\r\n  'aria-busy',\r\n  'aria-checked',\r\n  'aria-colcount',\r\n  'aria-colindex',\r\n  'aria-colindextext',\r\n  'aria-colspan',\r\n  'aria-controls',\r\n  'aria-current',\r\n  'aria-describedby',\r\n  'aria-description',\r\n  'aria-details',\r\n  'aria-disabled',\r\n  'aria-errormessage',\r\n  'aria-expanded',\r\n  'aria-flowto',\r\n  'aria-haspopup',\r\n  'aria-hidden',\r\n  'aria-invalid',\r\n  'aria-keyshortcuts',\r\n  'aria-label',\r\n  'aria-labelledby',\r\n  'aria-level',\r\n  'aria-live',\r\n  'aria-multiline',\r\n  'aria-multiselectable',\r\n  'aria-orientation',\r\n  'aria-owns',\r\n  'aria-placeholder',\r\n  'aria-posinset',\r\n  'aria-pressed',\r\n  'aria-readonly',\r\n  'aria-relevant',\r\n  'aria-required',\r\n  'aria-roledescription',\r\n  'aria-rowcount',\r\n  'aria-rowindex',\r\n  'aria-rowindextext',\r\n  'aria-rowspan',\r\n  'aria-selected',\r\n  'aria-setsize',\r\n  'aria-sort',\r\n  'aria-valuemax',\r\n  'aria-valuemin',\r\n  'aria-valuenow',\r\n  'aria-valuetext',\r\n];\r\n\r\n/**\r\n * Returns an array of aria attributes that should be copied from\r\n * the shadow host element to a target within the light DOM.\r\n * @param el The element that the attributes should be copied from.\r\n * @param ignoreList The list of aria-attributes to ignore reflecting and removing from the host.\r\n * Use this in instances where we manually specify aria attributes on the `<Host>` element.\r\n */\r\nexport const inheritAriaAttributes = (el: HTMLElement, ignoreList?: string[]) => {\r\n  let attributesToInherit = ariaAttributes;\r\n  if (ignoreList && ignoreList.length > 0) {\r\n    attributesToInherit = attributesToInherit.filter(attr => !ignoreList.includes(attr));\r\n  }\r\n  return inheritAttributes(el, attributesToInherit);\r\n};\r\n\r\ndeclare const __zone_symbol__requestAnimationFrame: typeof window.requestAnimationFrame;\r\n\r\n/**\r\n * Patched version of requestAnimationFrame that avoids ngzone\r\n * Use only when you know ngzone should not run\r\n */\r\nexport const raf = (h: FrameRequestCallback) => {\r\n  if (typeof __zone_symbol__requestAnimationFrame === 'function') {\r\n    return __zone_symbol__requestAnimationFrame(h);\r\n  }\r\n  if (typeof requestAnimationFrame === 'function') {\r\n    return requestAnimationFrame(h);\r\n  }\r\n  return setTimeout(h);\r\n};\r\n\r\n/**\r\n * Waits for a component to be ready for\r\n * both custom element and non-custom element builds.\r\n * If non-custom element build, el.componentOnReady\r\n * will be used.\r\n * For custom element builds, we wait a frame\r\n * so that the inner contents of the component\r\n * have a chance to render.\r\n *\r\n * Use this utility rather than calling\r\n * el.componentOnReady yourself.\r\n */\r\nexport const componentOnReady = (el: any, callback: any) => {\r\n  if (el.componentOnReady) {\r\n    // eslint-disable-next-line custom-rules/no-component-on-ready-method\r\n    el.componentOnReady().then((resolvedEl: any) => callback(resolvedEl));\r\n  } else {\r\n    raf(() => callback(el));\r\n  }\r\n};\r\n\r\nexport const getAppRoot = (doc: Document) => {\r\n  return doc.querySelector(APP_TAG) || doc.body;\r\n};\r\n\r\ntype PopElements = JSX.IntrinsicElements;\r\ntype ComponentTags = keyof PopElements;\r\n\r\nexport const hostContext = (host: Element, parent: ComponentTags): boolean => {\r\n  return !!host.closest(parent);\r\n};\r\n\r\nexport const getHostContextProperty = <\r\n  Tag extends keyof PopElements,\r\n  Prop extends keyof Omit<PopElements[Tag], keyof Omit<JSXBase.HTMLAttributes, 'color'>>,\r\n  Type extends PopElements[Tag][Prop],\r\n>(\r\n  host: Element,\r\n  parent: Tag,\r\n  prop: Prop,\r\n  placeholder: Type,\r\n): null | PopElements[Tag][Prop] => {\r\n  const hostContext = host.closest(parent);\r\n  if (!hostContext) {\r\n    return null;\r\n  }\r\n  return hostContext[prop as string] ?? placeholder;\r\n};\r\n","import { ModalOptions } from 'src/components/modal/modal.interface';\r\nimport { PopoverOptions } from 'src/components/popover/popover.interface';\r\nimport { componentOnReady, getAppRoot } from './helpers';\r\n\r\nexport interface OverlayInterface {\r\n  open?: boolean;\r\n\r\n  present(): Promise<boolean>;\r\n  dismiss(data: any, role: string): Promise<boolean>;\r\n}\r\n\r\nexport class OverlayController<O extends object, Elem extends Element> {\r\n  #tag: string;\r\n\r\n  private constructor(tag: string) {\r\n    this.#tag = tag;\r\n  }\r\n\r\n  #isHidden(overlay: Element): boolean {\r\n    return overlay.classList.contains('overlay-hidden');\r\n  }\r\n\r\n  #getOverlays(doc: Document, selector: string): OverlayInterface[] {\r\n    if (selector === undefined) {\r\n      selector = 'pop-popover, pop-modal';\r\n    }\r\n    return Array.from(doc.querySelectorAll(selector)) as any as OverlayInterface[];\r\n  }\r\n\r\n  #getAllPresented(doc: Document, overlayTag: string): OverlayInterface[] {\r\n    return this.#getOverlays(doc, overlayTag)\r\n      .filter(o => !this.#isHidden(o as any))\r\n      .filter(o => o.open);\r\n  }\r\n\r\n  #getPresented(doc: Document, overlayTag: string, id?: string): OverlayInterface | undefined {\r\n    const overlays = this.#getAllPresented(doc, overlayTag);\r\n\r\n    return id === undefined ? overlays.at(-1) : overlays.find((o: any) => o.id === id);\r\n  }\r\n\r\n  async #create<T extends OverlayInterface>(tag: string, options: object | undefined): Promise<T> {\r\n    return (\r\n      window?.customElements?.whenDefined(tag).then(() => {\r\n        const element = document.createElement(tag) as any as OverlayInterface & Element;\r\n        element.classList.add('overlay-hidden');\r\n\r\n        /**\r\n         * Convert the passed in overlay options into props\r\n         * that get passed down into the new overlay.\r\n         */\r\n        Object.assign(element, { ...options, hasController: true });\r\n\r\n        // append the overlay element to the document body\r\n        // in case we have a modal open, we append the popover in it to avoid stacking top layer probleme\r\n        // modal can be over an another modal, but popover cant, so we do a little trick here\r\n        const root = document.querySelector('pop-modal[open]') ?? getAppRoot(document);\r\n        root.appendChild(element);\r\n\r\n        return new Promise(resolve => componentOnReady(element, resolve));\r\n      }) ?? (Promise.resolve() as any)\r\n    );\r\n  }\r\n\r\n  async #dismiss(\r\n    doc: Document,\r\n    data: any,\r\n    role: string | undefined,\r\n    overlayTag: string,\r\n    id?: string,\r\n  ): Promise<boolean> {\r\n    const overlay = this.#getPresented(doc, overlayTag, id);\r\n    if (!overlay) {\r\n      return Promise.reject('overlay does not exist');\r\n    }\r\n    return overlay.dismiss(data, role);\r\n  }\r\n\r\n  create(options: O): Promise<Elem> {\r\n    return this.#create(this.#tag, options) as any;\r\n  }\r\n\r\n  dismiss(data?: any, role?: string, id?: string): Promise<boolean> {\r\n    return this.#dismiss(document, data, role, this.#tag, id);\r\n  }\r\n\r\n  getTop(doc?: Document): OverlayInterface | undefined {\r\n    return this.#getPresented(doc, this.#tag);\r\n  }\r\n\r\n  static create<O extends object, Elem extends Element>(tag: string): OverlayController<O, Elem> {\r\n    return new OverlayController<O, Elem>(tag);\r\n  }\r\n}\r\n\r\nexport const popoverController = OverlayController.create<PopoverOptions, HTMLPopPopoverElement>('pop-popover');\r\nexport const modalController = OverlayController.create<ModalOptions, HTMLPopModalElement>('pop-modal');\r\n","@use \"../../global/styles/theme\";\r\n@use \"../../global/styles/shadow\";\r\n@use \"../../global/styles/radius\";\r\n@use \"../../global/styles/input\";\r\n@use \"../../global/styles/join-item\";\r\n\r\n/**\r\n * @prop --border-radius: Border radius\r\n * @prop --border-color: Border color & outline color\r\n *\r\n * @prop --background: Background color\r\n * @prop --opacity: Change background opacity\r\n *\r\n * @prop --color: Change text color\r\n * @prop --error-color: Change error text color\r\n */\r\n\r\n$minWidth: 12rem;\r\n\r\n// @include join-item.item(\".select-wrapper\");\r\n@include join-item.item(\".select-wrapper button\");\r\n\r\n:host {\r\n  @include input.label;\r\n  @include input.helper;\r\n\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  min-width: $minWidth;\r\n\r\n  .select-wrapper {\r\n    position: relative;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    overflow: hidden;\r\n    // border-radius: var(--border-radius, #{radius.$md});\r\n    background-color: var(--background, oklch(#{theme.get-color(\"base.100\")} / var(--opacity, 1)));\r\n\r\n    &:has(button:focus-visible) {\r\n      outline-style: solid;\r\n      outline-width: 2px;\r\n      outline-offset: 2px;\r\n      outline-color: var(--border-color, oklch(#{theme.get-color(\"base.content\")} / 0.2));\r\n    }\r\n  }\r\n\r\n  .select-placeholder {\r\n    opacity: 0.6;\r\n  }\r\n\r\n  .text-wrapper {\r\n    transition: opacity 150ms ease 0ms;\r\n  }\r\n\r\n  button {\r\n    position: absolute;\r\n    inset: 0;\r\n    z-index: 1;\r\n\r\n    width: 100%;\r\n\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-radius: var(--border-radius, #{radius.$md});\r\n    border-color: var(--border-color, transparent);\r\n\r\n    background-color: transparent;\r\n    color: var(--color, oklch(#{theme.get-color(\"base.content\")}));\r\n\r\n    user-select: none;\r\n    outline: none;\r\n  }\r\n\r\n  svg {\r\n    margin-inline-start: auto;\r\n    transition: transform 150ms ease 0ms;\r\n  }\r\n}\r\n\r\n:host(.select-expanded) {\r\n  .select-wrapper {\r\n    box-shadow: shadow.$md;\r\n\r\n    svg {\r\n      transform: rotateX(180deg);\r\n    }\r\n  }\r\n}\r\n\r\n:host([bordered]) {\r\n  --border-color: oklch(#{theme.get-color(\"base.content\")} / 0.2);\r\n}\r\n\r\n// Color\r\n@mixin generate-color($colors...) {\r\n  @each $color in $colors {\r\n    $base: theme.get-color(\"#{$color}.base\");\r\n\r\n    :host([color=\"#{$color}\"]) {\r\n      --border-color: oklch(#{$base});\r\n    }\r\n  }\r\n}\r\n@include generate-color(primary, secondary, accent, info, success, warning, error);\r\n\r\n:host([color=\"ghost\"]) {\r\n  --opacity: 0.05;\r\n\r\n  .select-wrapper:has(button:focus-visible) {\r\n    --opacity: 1;\r\n  }\r\n}\r\n\r\n:host(.select-expanded[color=\"ghost\"]) {\r\n  .select-wrapper {\r\n    --opacity: 1;\r\n  }\r\n}\r\n\r\n// Size\r\n:host([size=\"xs\"]) .select-wrapper {\r\n  padding-inline-start: 0.65rem;\r\n  padding-inline-end: 0.5rem;\r\n  height: 1.5rem;\r\n  font-size: 0.75rem;\r\n  line-height: 1.625;\r\n}\r\n:host([size=\"sm\"]) .select-wrapper {\r\n  padding-inline-start: 0.75rem;\r\n  padding-inline-end: 0.85rem;\r\n  height: 2rem;\r\n  font-size: 0.875rem;\r\n  line-height: 2rem;\r\n}\r\n:host([size=\"md\"]),\r\n:host(:not([size])) {\r\n  .select-wrapper {\r\n    padding-inline-start: 1rem;\r\n    padding-inline-end: 1.15rem;\r\n    height: 3rem;\r\n    font-size: 0.875rem;\r\n    line-height: 2;\r\n  }\r\n}\r\n:host([size=\"lg\"]) .select-wrapper {\r\n  padding-inline-start: 1.15rem;\r\n  padding-inline-end: 1.35rem;\r\n  height: 4rem;\r\n  font-size: 1.125rem;\r\n  line-height: 2;\r\n}\r\n\r\n:host([disabled]) button {\r\n  $base: theme.get-color(\"base.200\");\r\n  $text: theme.get-color(\"base.content\");\r\n\r\n  --background: oklch(#{$base});\r\n  --border-color: oklch(#{$base});\r\n  --color: oklch(#{$text} / 0.2);\r\n\r\n  cursor: not-allowed;\r\n\r\n  &::placeholder {\r\n    color: oklch(#{$text} / 0.2);\r\n  }\r\n}\r\n","import { componentConfig, config } from '#config';\r\nimport { compareOptions, isOptionSelected } from '#utils/forms';\r\nimport { Attributes, hostContext, inheritAttributes } from '#utils/helpers';\r\nimport { popoverController } from '#utils/overlay';\r\nimport {\r\n  AttachInternals,\r\n  Component,\r\n  ComponentInterface,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n  Host,\r\n  Method,\r\n  Prop,\r\n  State,\r\n  Watch,\r\n  h,\r\n} from '@stencil/core';\r\nimport type { Color, FormAssociatedInterface, Size } from 'src/interfaces';\r\nimport { ChevronDown } from '../ChevronDown';\r\nimport { Show } from '../Show';\r\nimport { SelectPopoverOption } from '../select-popover/select-popover-interface';\r\nimport type { SelectCompareFn } from './select.interface';\r\n\r\n@Component({\r\n  tag: 'pop-select',\r\n  styleUrl: 'select.scss',\r\n  shadow: true,\r\n  formAssociated: true,\r\n})\r\nexport class Select implements ComponentInterface, FormAssociatedInterface {\r\n  #inputId = `pop-select-${selectIds++}`;\r\n  #inheritedAttributes: Attributes;\r\n\r\n  #popover: HTMLPopPopoverElement;\r\n  #trigger: HTMLButtonElement;\r\n\r\n  @Element() host!: HTMLElement;\r\n  @AttachInternals() internals: ElementInternals;\r\n\r\n  @State() isExpanded: boolean = false;\r\n\r\n  @State() errorText: string;\r\n\r\n  /**\r\n   * The name of the control, which is submitted with the form data.\r\n   */\r\n  @Prop() name: string = this.#inputId;\r\n\r\n  /**\r\n   * Instructional text that shows before the input has a value.\r\n   *\r\n   * This property replace the `<option disabled selected>`\r\n   */\r\n  @Prop() placeholder?: string;\r\n\r\n  /**\r\n   * The value of a select is analogous to the value of a `<select>`,\r\n   * it's only used when the toggle participates in a native `<form>`.\r\n   */\r\n  @Prop({ mutable: true }) value?: any | null;\r\n  @Watch('value')\r\n  onValueChange(value: any) {\r\n    this.errorText = this.#errorText;\r\n    if (this.errorText) {\r\n      // No emit if the select has error.\r\n      return;\r\n    }\r\n\r\n    this.internals.setFormValue(value, value);\r\n    this.popChange.emit({ value });\r\n  }\r\n\r\n  /**\r\n   * If `true`, the user can enter more than one value.\r\n   *\r\n   * @config @default false\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) multiple?: boolean = false;\r\n\r\n  /**\r\n   * Only apply when `multiple` property is used.\r\n   * The minimum amount of values that can be selected, which must not be greater than its maximum (max attribute) value.\r\n   *\r\n   * @config\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) min?: number;\r\n\r\n  /**\r\n   * Only apply when `multiple` property is used.\r\n   * The maximum amount of values that can be selected, which must not be less than its minimum (min attribute) value.\r\n   *\r\n   * @config\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) max?: number;\r\n\r\n  /**\r\n   * If `true`, the user must fill in a value before submitting a form.\r\n   *\r\n   * @config @default false\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) required?: boolean;\r\n\r\n  /**\r\n   * If `true`, the user cannot interact with the element.\r\n   *\r\n   * @config @default false\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) disabled?: boolean;\r\n\r\n  /**\r\n   * If `true`, the element will be focused on page load.\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) autoFocus?: boolean = false;\r\n\r\n  /**\r\n   * if `true`, adds border to textarea when `color` property is not set.\r\n   *\r\n   * @config @default false\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) bordered?: boolean;\r\n\r\n  /**\r\n   * The color to use from your application's color palette.\r\n   * Default options are: `\"primary\"`, `\"secondary\"`, `\"accent\"`, `\"ghost\"`, `\"info\"`, `\"success\"`, `\"warning\"`, `\"error\"`.\r\n   * For more information on colors, see [theming](/docs/theming/basics).\r\n   *\r\n   * @config\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) color?: Color | 'ghost';\r\n\r\n  /**\r\n   * Change size of the component\r\n   * Options are: `\"xs\"`, `\"sm\"`, `\"md\"`, `\"lg\"`.\r\n   *\r\n   * @config @default 'md'\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) size?: Size;\r\n\r\n  /**\r\n   * The text to display instead of the selected option's value.\r\n   */\r\n  @Prop() selectedText?: string;\r\n\r\n  /**\r\n   * Text that is placed under the textarea and displayed when no error is detected.\r\n   */\r\n  @Prop() helperText?: string;\r\n\r\n  /**\r\n   * Only apply when `multiple` property is used.\r\n   * Text that is placed under the select and displayed when the amount of selected option is below of the `min` property.\r\n   */\r\n  @Prop() notEnoughErrorText?: string;\r\n\r\n  /**\r\n   * Only apply when `multiple` property is used.\r\n   * Text that is placed under the select and displayed when the amount of selected option is greater of the `max` property.\r\n   */\r\n  @Prop() tooManyErrorText?: string;\r\n\r\n  /**\r\n   * This property allows developers to specify a custom function\r\n   * for comparing objects when determining the selected option in the\r\n   * ion-radio-group. When not specified, the default behavior will use strict\r\n   * equality (===) for comparison.\r\n   *\r\n   * @config\r\n   */\r\n  @Prop({ mutable: true }) compare?: SelectCompareFn | string | null;\r\n\r\n  /**\r\n   * Emitted when the overlay is dismissed.\r\n   */\r\n  @Event() popDismiss: EventEmitter<void>;\r\n\r\n  /**\r\n   * The `popChange` event is fired when the user modifies the select's value.\r\n   * Unlike the ionInput event, the `popChange` event is fired when the element loses focus after its value has been modified.\r\n   */\r\n  @Event() popChange: EventEmitter<SelectChangeEventDetail>;\r\n\r\n  /**\r\n   * Emitted when the input has focus.\r\n   */\r\n  @Event() popFocus: EventEmitter<void>;\r\n\r\n  /**\r\n   * Emitted when the input loses focus.\r\n   */\r\n  @Event() popBlur: EventEmitter<void>;\r\n\r\n  formResetCallback(): void {\r\n    this.value = null;\r\n  }\r\n\r\n  formStateRestoreCallback(state: any) {\r\n    this.value = state;\r\n  }\r\n\r\n  componentWillLoad(): void {\r\n    this.#inheritedAttributes = inheritAttributes(this.host, ['aria-label']);\r\n\r\n    componentConfig.apply(this, 'pop-select', {\r\n      multiple: false,\r\n      required: false,\r\n      disabled: false,\r\n      bordered: false,\r\n      size: config.get('defaultSize', 'md'),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets focus on the native `select` in `pop-select`. Use this method instead of the global\r\n   * `select.focus()`.\r\n   */\r\n  @Method()\r\n  async setFocus(): Promise<void> {\r\n    this.#trigger.focus();\r\n  }\r\n\r\n  @Method()\r\n  async open(event?: any) {\r\n    if (this.disabled || this.isExpanded || this.#popover) return;\r\n\r\n    this.isExpanded = true;\r\n    const selectedValue = this.value;\r\n\r\n    const popover = await popoverController.create({\r\n      component: 'pop-select-popover',\r\n      componentProps: {\r\n        value: this.#values,\r\n        required: this.required,\r\n        multiple: this.multiple,\r\n        color: this.color,\r\n        size: this.size,\r\n        options: this.#options.map(option => {\r\n          const value = getOptionValue(option);\r\n          const clazz = Array.from(option.classList).filter(cls => cls !== 'hydrated');\r\n\r\n          return {\r\n            text: option.textContent || '',\r\n            value: value,\r\n            checked: isOptionSelected(selectedValue, value, this.compare),\r\n            disabled: option.disabled,\r\n            color: option.color,\r\n            size: option.size,\r\n            cssClass: [OPTION_CLASS, ...clazz],\r\n            handler: value => {\r\n              this.value = value;\r\n              if (!this.multiple) {\r\n                this.close();\r\n              }\r\n            },\r\n          } as SelectPopoverOption;\r\n        }),\r\n      },\r\n      size: this.size,\r\n      dismissOnSelect: !this.multiple,\r\n      animated: true,\r\n      backdropDismiss: true,\r\n      showBackdrop: false,\r\n      keyboardClose: true,\r\n      reference: event ? 'event' : 'trigger',\r\n      alignment: 'center',\r\n      event: event,\r\n    });\r\n    this.#popover = popover;\r\n\r\n    popover.addEventListener('didDismiss', () => {\r\n      this.#popover = undefined;\r\n      this.isExpanded = false;\r\n      this.popDismiss.emit();\r\n      this.setFocus();\r\n    });\r\n\r\n    await popover.present();\r\n\r\n    const indexOfSelected = this.#options.map(o => o.value).indexOf(this.value);\r\n    if (indexOfSelected === -1) {\r\n      /**\r\n       * If no value is set then focus the first enabled option.\r\n       */\r\n      const firstEnabledOption = popover.querySelector<HTMLElement>(\r\n        'pop-radio:not([disabled]), pop-checkbox:not([disabled])',\r\n      );\r\n      if (firstEnabledOption) {\r\n        firstEnabledOption.closest('pop-item')?.focus();\r\n\r\n        /**\r\n         * Focus the option for the same reason as we do above.\r\n         */\r\n        firstEnabledOption.focus();\r\n      }\r\n    } else {\r\n      const selectedItem = popover.querySelector<HTMLElement>(\r\n        `.select-interface-option:nth-child(${indexOfSelected + 1})`,\r\n      );\r\n      if (selectedItem) {\r\n        selectedItem.focus();\r\n\r\n        const interactiveEl = selectedItem.querySelector<HTMLElement>('pop-radio, pop-checkbox');\r\n        if (interactiveEl) {\r\n          interactiveEl.focus();\r\n        }\r\n      }\r\n    }\r\n\r\n    return popover;\r\n  }\r\n\r\n  @Method()\r\n  async close(): Promise<void> {\r\n    if (this.disabled || !this.isExpanded) return;\r\n\r\n    this.isExpanded = false;\r\n    this.#popover.dismiss();\r\n  }\r\n\r\n  #onFocus = () => {\r\n    this.popFocus.emit();\r\n  };\r\n\r\n  #onBlur = () => {\r\n    this.popBlur.emit();\r\n  };\r\n\r\n  #onClick = async (ev: PointerEvent) => {\r\n    await this.open({\r\n      ...ev,\r\n      target: this.#trigger,\r\n    });\r\n  };\r\n\r\n  get #values(): any[] {\r\n    const { value } = this;\r\n    if (!value) return [];\r\n\r\n    return Array.isArray(value) ? value : [value];\r\n  }\r\n\r\n  get #options() {\r\n    return Array.from(this.host.querySelectorAll('pop-select-option'));\r\n  }\r\n\r\n  get #text(): string {\r\n    const selectedText = this.selectedText;\r\n    if (selectedText) {\r\n      return selectedText;\r\n    }\r\n\r\n    const values = this.#values;\r\n\r\n    if (values.length === 0) {\r\n      return '';\r\n    }\r\n    return values\r\n      .map(value => {\r\n        const selected = this.#options.find(option => {\r\n          const optionValue = option.value ?? (option.textContent || '');\r\n          return compareOptions(value, optionValue, this.compare);\r\n        });\r\n        return selected ? selected.textContent : null;\r\n      })\r\n      .filter(Boolean)\r\n      .join(', ');\r\n  }\r\n\r\n  get #ariaLabel(): string {\r\n    const { placeholder } = this;\r\n    const displayValue = this.#text;\r\n    const definedLabel = this.#inheritedAttributes['aria-label'];\r\n\r\n    /**\r\n     * If developer has specified a placeholder\r\n     * and there is nothing selected, the selectText\r\n     * should have the placeholder value.\r\n     */\r\n    let renderedLabel = displayValue;\r\n    if (renderedLabel === '' && placeholder !== undefined) {\r\n      renderedLabel = placeholder;\r\n    }\r\n\r\n    /**\r\n     * If there is a developer-defined label,\r\n     * then we need to concatenate the developer label\r\n     * string with the current current value.\r\n     * The label for the control should be read\r\n     * before the values of the control.\r\n     */\r\n    if (definedLabel !== undefined) {\r\n      renderedLabel = renderedLabel === '' ? definedLabel : `${definedLabel}, ${renderedLabel}`;\r\n    }\r\n\r\n    return renderedLabel;\r\n  }\r\n\r\n  get #errorText(): string {\r\n    if (!this.multiple) return '';\r\n\r\n    const { length } = this.#values;\r\n    if (length === 0 && !this.required) return '';\r\n    if (length < this.min) return this.notEnoughErrorText ?? '';\r\n    if (length > this.max) return this.tooManyErrorText ?? '';\r\n    return '';\r\n  }\r\n\r\n  #renderSelectText() {\r\n    const { placeholder } = this;\r\n    const displayValue = this.#text;\r\n\r\n    let addPlaceholderClass = false;\r\n    let selectText = displayValue;\r\n    if (selectText === '' && placeholder !== undefined) {\r\n      selectText = placeholder;\r\n      addPlaceholderClass = true;\r\n    }\r\n\r\n    const textPart = addPlaceholderClass ? 'placeholder' : 'text';\r\n\r\n    return (\r\n      <div aria-hidden=\"true\" class={{ 'select-placeholder': addPlaceholderClass }} part={textPart}>\r\n        {selectText}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  #renderListbox() {\r\n    const { disabled, isExpanded } = this;\r\n    const inputId = this.#inputId;\r\n\r\n    return (\r\n      <button\r\n        disabled={disabled}\r\n        id={inputId}\r\n        aria-label={this.#ariaLabel}\r\n        aria-haspopup=\"dialog\"\r\n        aria-expanded={`${isExpanded}`}\r\n        onClick={this.#onClick}\r\n        onFocus={this.#onFocus}\r\n        onBlur={this.#onBlur}\r\n        ref={ref => (this.#trigger = ref)}\r\n      ></button>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { host, helperText, errorText } = this;\r\n\r\n    const inputId = this.#inputId;\r\n\r\n    const hasError = !!errorText;\r\n    const hasHelper = !!helperText;\r\n    const hasBottomText = hasError || hasHelper;\r\n\r\n    return (\r\n      <Host\r\n        aria-labelledby={inputId}\r\n        aria-hidden={this.disabled ? 'true' : null}\r\n        class={{\r\n          'select-expanded': this.isExpanded,\r\n          'join-item': hostContext(host, 'pop-join'),\r\n        }}\r\n      >\r\n        <div class=\"label-text-wrapper\">\r\n          <label htmlFor={inputId} part=\"label\">\r\n            <slot name=\"label\" />\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"select-wrapper\">\r\n          <slot name=\"start\" />\r\n\r\n          <div class=\"select-wrapper-inner\">\r\n            {this.#renderSelectText()}\r\n            {this.#renderListbox()}\r\n          </div>\r\n\r\n          <slot name=\"end\" />\r\n\r\n          <ChevronDown />\r\n        </div>\r\n\r\n        <Show when={hasBottomText}>\r\n          <div class=\"text-wrapper\">\r\n            <Show when={hasError}>\r\n              <span class=\"error-text\">{errorText}</span>\r\n            </Show>\r\n            <Show when={hasHelper}>\r\n              <span class=\"helper-text\">{helperText}</span>\r\n            </Show>\r\n          </div>\r\n        </Show>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n\r\nconst getOptionValue = (el: HTMLPopSelectOptionElement) => {\r\n  const value = el.value;\r\n  return value === undefined ? el.textContent || '' : value;\r\n};\r\n\r\nlet selectIds = 0;\r\n\r\nconst OPTION_CLASS = 'select-interface-option';\r\n"],"version":3}