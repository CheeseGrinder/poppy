@use "../../global/styles/radius";
@use "../../global/styles/theme";
@use "../../global/styles/input";
@use "../../global/styles/join-item";

/**
 * @prop --border-radius: Border radius
 * @prop --border-color: Border color & outline color
 *
 * @prop --background: Background color
 * @prop --opacity: Change background opacity
 *
 * @prop --color: Change text color
 * @prop --required-color: Change star color
 * @prop --error-color: Change error text color
 * @prop --font: Change text font
 */

@include join-item.item(input);

// Input
// ----------------------------------------------------------------

$minWidth: 12rem;
:host {
  @include input.label;
  @include input.helper($counter: true);

  display: inline-flex;
  flex-direction: column;

  > input {
    box-sizing: border-box;
    border-style: solid;
    border-width: 1px;
    border-radius: var(--border-radius, #{radius.$md});
    border-color: var(--border-color, transparent);

    background-color: var(--background, oklch(#{theme.get-color($color: base, $variant: 100)} / var(--opacity, 1)));
    color: var(--color, oklch(#{theme.get-color($color: base, $variant: content)}));

    min-width: $minWidth;
    width: 100%;
    flex-shrink: 1;

    font-family: #{theme.$font};
    white-space: pre-wrap;

    &:focus-visible {
      outline-style: solid;
      outline-width: 2px;
      outline-offset: 2px;
      outline-color: var(--border-color, oklch(#{theme.get-color($color: base, $variant: content)} / 0.2));
    }
    &::-webkit-calendar-picker-indicator {
      line-height: 1em;
    }
    &::-webkit-date-and-time-value {
      text-align: inherit;
    }
  }
}

:host([bordered]) {
  --border-color: oklch(#{theme.get-color($color: base, $variant: content)} / 0.2);
}

// Input Size
// ----------------------------------------------------------------

:host([size="xs"]) > input {
  padding: 0 0.5rem;
  height: 1.5rem;
  font-size: 0.75rem;
  line-height: 1.625;
}
:host([size="sm"]) > input {
  padding: 0 0.75rem;
  height: 2rem;
  font-size: 0.875rem;
  line-height: 2rem;
}
:host([size="md"]),
:host(:not([size])) {
  > input {
    padding: 0 1rem;
    height: 3rem;
    font-size: 0.875rem;
    line-height: 2;
  }
}
:host([size="lg"]) > input {
  padding: 1.5rem;
  height: 4rem;
  font-size: 1.125rem;
  line-height: 2;
}

// Input Color
// ----------------------------------------------------------------

@mixin generate-color($colors...) {
  @each $color in $colors {
    $base: theme.get-color(
      $color: $color,
      $variant: base,
    );

    :host([color="#{$color}"]) {
      --border-color: oklch(#{$base});
    }
  }
}
@include generate-color(primary, secondary, accent, info, success, warning, error);

:host([color="ghost"]) {
  --opacity: 0.05;

  > input:focus {
    --opacity: 1;
  }
}

// Input State
// ----------------------------------------------------------------

:host([disabled]) > input {
  $base: theme.get-color(
    $color: base,
    $variant: 200,
  );
  $text: theme.get-color(
    $color: base,
    $variant: content,
  );

  --background: oklch(#{$base});
  --border-color: oklch(#{$base});
  --color: oklch(#{$text} / 0.2);

  cursor: not-allowed;

  &::placeholder {
    color: oklch(#{$text} / 0.2);
  }
}
